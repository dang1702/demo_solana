{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"base.js","sourceRoot":"","sources":["../../src/base.ts"],"names":[],"mappings":";;;AAOO,MAAM,YAAY,GAAG,CAAI,MAAiB,EAAmB,EAAE;IAClE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,OAAO;QAAE,MAAM;QAAE,MAAM;IAAA,CAAE,CAAC;AAC9B,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/file-uri-to-path%401.0.0/node_modules/file-uri-to-path/index.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar sep = require('path').sep || '/';\n\n/**\n * Module exports.\n */\n\nmodule.exports = fileUriToPath;\n\n/**\n * File URI to Path function.\n *\n * @param {String} uri\n * @return {String} path\n * @api public\n */\n\nfunction fileUriToPath (uri) {\n  if ('string' != typeof uri ||\n      uri.length <= 7 ||\n      'file://' != uri.substring(0, 7)) {\n    throw new TypeError('must pass in a file:// URI to convert to a file path');\n  }\n\n  var rest = decodeURI(uri.substring(7));\n  var firstSlash = rest.indexOf('/');\n  var host = rest.substring(0, firstSlash);\n  var path = rest.substring(firstSlash + 1);\n\n  // 2.  Scheme Definition\n  // As a special case, <host> can be the string \"localhost\" or the empty\n  // string; this is interpreted as \"the machine from which the URL is\n  // being interpreted\".\n  if ('localhost' == host) host = '';\n\n  if (host) {\n    host = sep + sep + host;\n  }\n\n  // 3.2  Drives, drive letters, mount points, file system root\n  // Drive letters are mapped into the top of a file URI in various ways,\n  // depending on the implementation; some applications substitute\n  // vertical bar (\"|\") for the colon after the drive letter, yielding\n  // \"file:///c|/tmp/test.txt\".  In some cases, the colon is left\n  // unchanged, as in \"file:///c:/tmp/test.txt\".  In other cases, the\n  // colon is simply omitted, as in \"file:///c/tmp/test.txt\".\n  path = path.replace(/^(.+)\\|/, '$1:');\n\n  // for Windows, we need to invert the path separators from what a URI uses\n  if (sep == '\\\\') {\n    path = path.replace(/\\//g, '\\\\');\n  }\n\n  if (/^.+\\:/.test(path)) {\n    // has Windows drive at beginning of path\n  } else {\n    // unix path…\n    path = sep + path;\n  }\n\n  return host + path;\n}\n"],"names":[],"mappings":"AACA;;CAEC,GAED,IAAI,MAAM,mEAAgB,GAAG,IAAI;AAEjC;;CAEC,GAED,OAAO,OAAO,GAAG;AAEjB;;;;;;CAMC,GAED,SAAS,cAAe,GAAG;IACzB,IAAI,YAAY,OAAO,OACnB,IAAI,MAAM,IAAI,KACd,aAAa,IAAI,SAAS,CAAC,GAAG,IAAI;QACpC,MAAM,IAAI,UAAU;IACtB;IAEA,IAAI,OAAO,UAAU,IAAI,SAAS,CAAC;IACnC,IAAI,aAAa,KAAK,OAAO,CAAC;IAC9B,IAAI,OAAO,KAAK,SAAS,CAAC,GAAG;IAC7B,IAAI,OAAO,KAAK,SAAS,CAAC,aAAa;IAEvC,wBAAwB;IACxB,uEAAuE;IACvE,oEAAoE;IACpE,sBAAsB;IACtB,IAAI,eAAe,MAAM,OAAO;IAEhC,IAAI,MAAM;QACR,OAAO,MAAM,MAAM;IACrB;IAEA,6DAA6D;IAC7D,uEAAuE;IACvE,gEAAgE;IAChE,oEAAoE;IACpE,+DAA+D;IAC/D,mEAAmE;IACnE,2DAA2D;IAC3D,OAAO,KAAK,OAAO,CAAC,WAAW;IAE/B,0EAA0E;IAC1E,IAAI,OAAO,MAAM;QACf,OAAO,KAAK,OAAO,CAAC,OAAO;IAC7B;IAEA,IAAI,QAAQ,IAAI,CAAC,OAAO;IACtB,yCAAyC;IAC3C,OAAO;QACL,aAAa;QACb,OAAO,MAAM;IACf;IAEA,OAAO,OAAO;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/bindings%401.5.0/node_modules/bindings/bindings.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nvar fs = require('fs'),\n  path = require('path'),\n  fileURLToPath = require('file-uri-to-path'),\n  join = path.join,\n  dirname = path.dirname,\n  exists =\n    (fs.accessSync &&\n      function(path) {\n        try {\n          fs.accessSync(path);\n        } catch (e) {\n          return false;\n        }\n        return true;\n      }) ||\n    fs.existsSync ||\n    path.existsSync,\n  defaults = {\n    arrow: process.env.NODE_BINDINGS_ARROW || ' → ',\n    compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',\n    platform: process.platform,\n    arch: process.arch,\n    nodePreGyp:\n      'node-v' +\n      process.versions.modules +\n      '-' +\n      process.platform +\n      '-' +\n      process.arch,\n    version: process.versions.node,\n    bindings: 'bindings.node',\n    try: [\n      // node-gyp's linked version in the \"build\" dir\n      ['module_root', 'build', 'bindings'],\n      // node-waf and gyp_addon (a.k.a node-gyp)\n      ['module_root', 'build', 'Debug', 'bindings'],\n      ['module_root', 'build', 'Release', 'bindings'],\n      // Debug files, for development (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Debug', 'bindings'],\n      ['module_root', 'Debug', 'bindings'],\n      // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Release', 'bindings'],\n      ['module_root', 'Release', 'bindings'],\n      // Legacy from node-waf, node <= 0.4.x\n      ['module_root', 'build', 'default', 'bindings'],\n      // Production \"Release\" buildtype binary (meh...)\n      ['module_root', 'compiled', 'version', 'platform', 'arch', 'bindings'],\n      // node-qbs builds\n      ['module_root', 'addon-build', 'release', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'debug', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'default', 'install-root', 'bindings'],\n      // node-pre-gyp path ./lib/binding/{node_abi}-{platform}-{arch}\n      ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings']\n    ]\n  };\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings(opts) {\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts };\n  } else if (!opts) {\n    opts = {};\n  }\n\n  // maps `defaults` onto `opts` object\n  Object.keys(defaults).map(function(i) {\n    if (!(i in opts)) opts[i] = defaults[i];\n  });\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName());\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node';\n  }\n\n  // https://github.com/webpack/webpack/issues/4175#issuecomment-342931035\n  var requireFunc =\n    typeof __webpack_require__ === 'function'\n      ? __non_webpack_require__\n      : require;\n\n  var tries = [],\n    i = 0,\n    l = opts.try.length,\n    n,\n    b,\n    err;\n\n  for (; i < l; i++) {\n    n = join.apply(\n      null,\n      opts.try[i].map(function(p) {\n        return opts[p] || p;\n      })\n    );\n    tries.push(n);\n    try {\n      b = opts.path ? requireFunc.resolve(n) : requireFunc(n);\n      if (!opts.path) {\n        b.path = n;\n      }\n      return b;\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND' &&\n          e.code !== 'QUALIFIED_PATH_RESOLUTION_FAILED' &&\n          !/not find/i.test(e.message)) {\n        throw e;\n      }\n    }\n  }\n\n  err = new Error(\n    'Could not locate the bindings file. Tried:\\n' +\n      tries\n        .map(function(a) {\n          return opts.arrow + a;\n        })\n        .join('\\n')\n  );\n  err.tries = tries;\n  throw err;\n}\nmodule.exports = exports = bindings;\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName(calling_file) {\n  var origPST = Error.prepareStackTrace,\n    origSTL = Error.stackTraceLimit,\n    dummy = {},\n    fileName;\n\n  Error.stackTraceLimit = 10;\n\n  Error.prepareStackTrace = function(e, st) {\n    for (var i = 0, l = st.length; i < l; i++) {\n      fileName = st[i].getFileName();\n      if (fileName !== __filename) {\n        if (calling_file) {\n          if (fileName !== calling_file) {\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n    }\n  };\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy);\n  dummy.stack;\n\n  // cleanup\n  Error.prepareStackTrace = origPST;\n  Error.stackTraceLimit = origSTL;\n\n  // handle filename that starts with \"file://\"\n  var fileSchema = 'file://';\n  if (fileName.indexOf(fileSchema) === 0) {\n    fileName = fileURLToPath(fileName);\n  }\n\n  return fileName;\n};\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot(file) {\n  var dir = dirname(file),\n    prev;\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd();\n    }\n    if (\n      exists(join(dir, 'package.json')) ||\n      exists(join(dir, 'node_modules'))\n    ) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir;\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error(\n        'Could not find module root given file: \"' +\n          file +\n          '\". Do you have a `package.json` file? '\n      );\n    }\n    // Try the parent dir next\n    prev = dir;\n    dir = join(dir, '..');\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/bigint-buffer%401.1.5/node_modules/bigint-buffer/dist/node.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n{\n    try {\n        converter = require('bindings')('bigint_buffer');\n    }\n    catch (e) {\n        console.warn('bigint: Failed to load bindings, pure JS will be used (try npm run rebuild?)');\n    }\n}\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    if (converter === undefined) {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    if (converter === undefined) {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    if (converter === undefined) {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    if (converter === undefined) {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n"],"names":[],"mappings":"AAAA;AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,IAAI;AACJ;IACI,IAAI;QACA,YAAY,gIAAoB;IACpC,EACA,OAAO,GAAG;QACN,QAAQ,IAAI,CAAC;IACjB;AACJ,CACA;;;;CAIC,GACD,SAAS,WAAW,GAAG;IACnB,IAAI,cAAc,WAAW;QACzB,MAAM,WAAW,OAAO,IAAI,CAAC;QAC7B,SAAS,OAAO;QAChB,MAAM,MAAM,SAAS,QAAQ,CAAC;QAC9B,IAAI,IAAI,MAAM,KAAK,GAAG;YAClB,OAAO,OAAO;QAClB;QACA,OAAO,OAAO,CAAC,EAAE,EAAE,KAAK;IAC5B;IACA,OAAO,UAAU,QAAQ,CAAC,KAAK;AACnC;AACA,QAAQ,UAAU,GAAG;AACrB;;;;CAIC,GACD,SAAS,WAAW,GAAG;IACnB,IAAI,cAAc,WAAW;QACzB,MAAM,MAAM,IAAI,QAAQ,CAAC;QACzB,IAAI,IAAI,MAAM,KAAK,GAAG;YAClB,OAAO,OAAO;QAClB;QACA,OAAO,OAAO,CAAC,EAAE,EAAE,KAAK;IAC5B;IACA,OAAO,UAAU,QAAQ,CAAC,KAAK;AACnC;AACA,QAAQ,UAAU,GAAG;AACrB;;;;;CAKC,GACD,SAAS,WAAW,GAAG,EAAE,KAAK;IAC1B,IAAI,cAAc,WAAW;QACzB,MAAM,MAAM,IAAI,QAAQ,CAAC;QACzB,MAAM,SAAS,OAAO,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,GAAG,KAAK,KAAK,CAAC,GAAG,QAAQ,IAAI;QAC7E,OAAO,OAAO;QACd,OAAO;IACX;IACA,8DAA8D;IAC9D,OAAO,UAAU,UAAU,CAAC,KAAK,OAAO,WAAW,CAAC,QAAQ;AAChE;AACA,QAAQ,UAAU,GAAG;AACrB;;;;;CAKC,GACD,SAAS,WAAW,GAAG,EAAE,KAAK;IAC1B,IAAI,cAAc,WAAW;QACzB,MAAM,MAAM,IAAI,QAAQ,CAAC;QACzB,OAAO,OAAO,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,GAAG,KAAK,KAAK,CAAC,GAAG,QAAQ,IAAI;IACzE;IACA,OAAO,UAAU,UAAU,CAAC,KAAK,OAAO,WAAW,CAAC,QAAQ;AAChE;AACA,QAAQ,UAAU,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"file":"bigint.js","sourceRoot":"","sources":["../../src/bigint.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,IAAI,EAAU,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;;;;AAE/B,MAAM,MAAM,GACf,CAAC,MAAc,EAAE,CACjB,CADmB,AAClB,QAAiB,EAAkB,EAAE;QAClC,MAAM,MAAM,8OAAG,OAAA,AAAI,EAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAG,uWAAA,AAAY,EAAC,MAAM,CAAC,CAAC;QAEhD,MAAM,YAAY,GAAG,MAA2C,CAAC;QAEjE,YAAY,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;YACrD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACnC,yNAAO,aAAA,AAAU,EAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,YAAY,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;YACrE,MAAM,GAAG,qNAAG,aAAA,AAAU,EAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACvC,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC;QAEF,OAAO,YAAY,CAAC;IACxB,CAAC,CAAC;AAEC,MAAM,QAAQ,GACjB,CAAC,MAAc,EAAE,CACjB,CADmB,AAClB,QAAiB,EAAkB,EAAE;QAClC,MAAM,MAAM,8OAAG,OAAA,AAAI,EAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAG,0WAAA,AAAY,EAAC,MAAM,CAAC,CAAC;QAEhD,MAAM,YAAY,GAAG,MAA2C,CAAC;QAEjE,YAAY,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;YACrD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACnC,QAAO,8NAAA,AAAU,EAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,YAAY,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;YACrE,MAAM,GAAG,qNAAG,aAAA,AAAU,EAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACvC,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC;QAEF,OAAO,YAAY,CAAC;IACxB,CAAC,CAAC;AAEC,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAEtB,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAE1B,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAExB,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;AAE5B,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAExB,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;AAE5B,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAExB,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 441, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/bignumber.js%409.3.0/node_modules/bignumber.js/bignumber.mjs"],"sourcesContent":["/*\r\n *      bignumber.js v9.3.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // The index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2630, "column": 0}, "map": {"version":3,"file":"decimal.js","sourceRoot":"","sources":["../../src/decimal.ts"],"names":[],"mappings":";;;;AACA,OAAO,SAAS,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AACtC,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;;;;AAEzB,MAAM,GAAG,GAAG,8MAAI,UAAS,CAAC,OAAO,CAAC,CAAC;AAEnC,MAAM,OAAO,GAAG,CAAC,QAAiB,EAAqB,EAAE;IAC5D,MAAM,MAAM,iWAAG,OAAA,AAAI,EAAC,QAAQ,CAAC,CAAC;IAC9B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,+VAAG,eAAA,AAAY,EAAC,MAAM,CAAC,CAAC;IAEhD,MAAM,aAAa,GAAG,MAA8C,CAAC;IAErE,aAAa,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;QACtD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC9C,OAAO,8MAAI,UAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,aAAa,CAAC,MAAM,GAAG,CAAC,OAAkB,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;QAC1E,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjE,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,aAAa,CAAC;AACzB,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 2661, "column": 0}, "map": {"version":3,"file":"native.js","sourceRoot":"","sources":["../../src/native.ts"],"names":[],"mappings":";;;AAAA,OAAO,EAAU,EAAE,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;;;AAE/B,MAAM,IAAI,GAAG,CAAC,QAAiB,EAAmB,EAAE;IACvD,MAAM,MAAM,8OAAG,KAAA,AAAE,EAAC,QAAQ,CAAC,CAAC;IAC5B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,+VAAG,eAAA,AAAY,EAAC,MAAM,CAAC,CAAC;IAEhD,MAAM,UAAU,GAAG,MAA4C,CAAC;IAEhE,UAAU,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;QACnD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACnC,OAAO,CAAC,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC;IAEF,UAAU,CAAC,MAAM,GAAG,CAAC,IAAa,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;QAClE,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACzB,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 2688, "column": 0}, "map": {"version":3,"file":"web3.js","sourceRoot":"","sources":["../../src/web3.ts"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,IAAI,EAAU,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;;;;AAE/B,MAAM,SAAS,GAAG,CAAC,QAAiB,EAAqB,EAAE;IAC9D,MAAM,MAAM,8OAAG,OAAA,AAAI,EAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAClC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,+VAAG,eAAA,AAAY,EAAC,MAAM,CAAC,CAAC;IAEhD,MAAM,eAAe,GAAG,MAA8C,CAAC;IAEvE,eAAe,CAAC,MAAM,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;QACxD,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACnC,OAAO,+TAAI,YAAS,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEF,eAAe,CAAC,MAAM,GAAG,CAAC,SAAoB,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;QAC9E,MAAM,GAAG,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;QACjC,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,eAAe,CAAC;AAC3B,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 2717, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";AAAA,cAAc,QAAQ,CAAC;AACvB,cAAc,UAAU,CAAC;AACzB,cAAc,WAAW,CAAC;AAC1B,cAAc,UAAU,CAAC;AACzB,cAAc,QAAQ,CAAC","debugId":null}},
    {"offset": {"line": 2747, "column": 0}, "map": {"version":3,"file":"errors.js","sourceRoot":"","sources":["../../src/errors.ts"],"names":[],"mappings":"AAAA,0BAAA,EAA4B;;;;;;;;;;;;;;;;;;;;;AACtB,MAAgB,UAAW,SAAQ,KAAK;IAC1C,YAAY,OAAgB,CAAA;QACxB,KAAK,CAAC,OAAO,CAAC,CAAC;IACnB,CAAC;CACJ;AAGK,MAAO,yBAA0B,SAAQ,UAAU;IAAzD,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,2BAA2B,CAAC;IACvC,CAAC;CAAA;AAGK,MAAO,wBAAyB,SAAQ,UAAU;IAAxD,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,0BAA0B,CAAC;IACtC,CAAC;CAAA;AAGK,MAAO,4BAA6B,SAAQ,UAAU;IAA5D,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,8BAA8B,CAAC;IAC1C,CAAC;CAAA;AAGK,MAAO,6BAA8B,SAAQ,UAAU;IAA7D,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,+BAA+B,CAAC;IAC3C,CAAC;CAAA;AAGK,MAAO,4BAA6B,SAAQ,UAAU;IAA5D,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,8BAA8B,CAAC;IAC1C,CAAC;CAAA;AAGK,MAAO,qBAAsB,SAAQ,UAAU;IAArD,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,uBAAuB,CAAC;IACnC,CAAC;CAAA;AAGK,MAAO,sBAAuB,SAAQ,UAAU;IAAtD,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,wBAAwB,CAAC;IACpC,CAAC;CAAA;AAGK,MAAO,uBAAwB,SAAQ,UAAU;IAAvD,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,yBAAyB,CAAC;IACrC,CAAC;CAAA;AAGK,MAAO,mCAAoC,SAAQ,UAAU;IAAnE,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,qCAAqC,CAAC;IACjD,CAAC;CAAA;AAGK,MAAO,gCAAiC,SAAQ,UAAU;IAAhE,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,kCAAkC,CAAC;IAC9C,CAAC;CAAA;AAGK,MAAO,gCAAiC,SAAQ,UAAU;IAAhE,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,kCAAkC,CAAC;IAC9C,CAAC;CAAA;AAGK,MAAO,gCAAiC,SAAQ,UAAU;IAAhE,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,kCAAkC,CAAC;IAC9C,CAAC;CAAA;AAGK,MAAO,gCAAiC,SAAQ,UAAU;IAAhE,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,kCAAkC,CAAC;IAC9C,CAAC;CAAA;AAGK,MAAO,gCAAiC,SAAQ,UAAU;IAAhE,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,kCAAkC,CAAC;IAC9C,CAAC;CAAA;AAGK,MAAO,4BAA6B,SAAQ,UAAU;IAA5D,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,8BAA8B,CAAC;IAC1C,CAAC;CAAA;AAGK,MAAO,oCAAqC,SAAQ,UAAU;IAApE,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,sCAAsC,CAAC;IAClD,CAAC;CAAA;AAGK,MAAO,kCAAmC,SAAQ,UAAU;IAAlE,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,oCAAoC,CAAC;IAChD,CAAC;CAAA;AAGK,MAAO,mCAAoC,SAAQ,UAAU;IAAnE,aAAA;;QACI,IAAA,CAAA,IAAI,GAAG,qCAAqC,CAAC;IACjD,CAAC;CAAA","debugId":null}},
    {"offset": {"line": 2887, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/instructions/types.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2944, "column": 0}, "map": {"version":3,"file":"serialization.js","sourceRoot":"","sources":["../../src/serialization.ts"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;;;;AAGlD,MAAO,sBAAuB,gPAAQ,SAAwB;IAGhE,YAAY,QAA6B,CAAA;QACrC,KAAK,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QACpB,IAAI,CAAC,eAAe,OAAG,oWAAA,AAAS,EAAE,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,MAAkB,EAAE,SAAiB,CAAC,EAAA;QACzC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,MAAM,KAAK,CAAC,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QAChB,CAAC;QACD,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,GAAqB,EAAE,MAAkB,EAAE,SAAiB,CAAC,EAAA;QAChE,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC;YACf,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACnB,OAAO,CAAC,CAAC;QACb,CAAC,MAAM,CAAC;YACJ,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;YACrD,OAAO,EAAE,CAAC;QACd,CAAC;IACL,CAAC;IAED,OAAO,CAAC,MAAmB,EAAE,SAAiB,CAAC,EAAA;QAC3C,IAAI,MAAM,EAAE,CAAC;YACT,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC9B,OAAO,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;QAC5D,CAAC;QACD,MAAM,IAAI,UAAU,CAAC,yBAAyB,CAAC,CAAC;IACpD,CAAC;CACJ","debugId":null}},
    {"offset": {"line": 2988, "column": 0}, "map": {"version":3,"file":"initializeMint.js","sourceRoot":"","sources":["../../../src/instructions/initializeMint.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3079, "column": 0}, "map": {"version":3,"file":"accountType.js","sourceRoot":"","sources":["../../../src/extensions/accountType.ts"],"names":[],"mappings":";;;;AAAA,IAAY,WAIX;AAJD,CAAA,SAAY,WAAW;IACnB,WAAA,CAAA,WAAA,CAAA,gBAAA,GAAA,EAAA,GAAA,eAAa,CAAA;IACb,WAAA,CAAA,WAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAI,CAAA;IACJ,WAAA,CAAA,WAAA,CAAA,UAAA,GAAA,EAAA,GAAA,SAAO,CAAA;AACX,CAAC,EAJW,WAAW,IAAA,CAAX,WAAW,GAAA,CAAA,CAAA,GAItB;AACM,MAAM,iBAAiB,GAAG,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 3096, "column": 0}, "map": {"version":3,"file":"multisig.js","sourceRoot":"","sources":["../../../src/state/multisig.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;;;AAE9D,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,EAAE,yBAAyB,EAAE,6BAA6B,EAAE,4BAA4B,EAAE,MAAM,cAAc,CAAC;;;;;AA8B/G,MAAM,cAAc,8OAAG,SAAA,AAAM,EAAc;+OAC9C,KAAA,AAAE,EAAC,GAAG,CAAC;QACP,4OAAA,AAAE,EAAC,GAAG,CAAC;kWACP,OAAA,AAAI,EAAC,eAAe,CAAC;IACrB,wWAAA,AAAS,EAAC,SAAS,CAAC;gWACpB,YAAA,AAAS,EAAC,SAAS,CAAC;gWACpB,YAAA,AAAS,EAAC,SAAS,CAAC;gWACpB,YAAA,AAAS,EAAC,SAAS,CAAC;IACpB,wWAAA,AAAS,EAAC,SAAS,CAAC;gWACpB,YAAA,AAAS,EAAC,SAAS,CAAC;gWACpB,YAAA,AAAS,EAAC,SAAS,CAAC;gWACpB,YAAA,AAAS,EAAC,SAAS,CAAC;gWACpB,YAAA,AAAS,EAAC,SAAS,CAAC;gWACpB,YAAA,AAAS,EAAC,UAAU,CAAC;gWACrB,YAAA,AAAS,EAAC,UAAU,CAAC;CACxB,CAAC,CAAC;AAGI,MAAM,aAAa,GAAG,cAAc,CAAC,IAAI,CAAC;AAY1C,KAAK,UAAU,WAAW,CAC7B,UAAsB,EACtB,OAAkB,EAClB,UAAuB,EACvB,SAAS,oXAAG,mBAAgB;IAE5B,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,cAAc,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IAClE,OAAO,cAAc,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AACpD,CAAC;AAWK,SAAU,cAAc,CAC1B,OAAkB,EAClB,IAAgC,EAChC,SAAS,oXAAG,mBAAgB;IAE5B,IAAI,CAAC,IAAI,EAAE,MAAM,kXAAI,4BAAyB,EAAE,CAAC;IACjD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,MAAM,kXAAI,gCAA6B,EAAE,CAAC;IAC7E,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,aAAa,EAAE,MAAM,kXAAI,+BAA4B,EAAE,CAAC;IAEhF,MAAM,QAAQ,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAElD,OAAO;QAAE,OAAO;QAAE,GAAG,QAAQ;IAAA,CAAE,CAAC;AACpC,CAAC;AASM,KAAK,UAAU,sCAAsC,CACxD,UAAsB,EACtB,UAAuB;IAEvB,OAAO,MAAM,UAAU,CAAC,iCAAiC,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;AACzF,CAAC","debugId":null}},
    {"offset": {"line": 3153, "column": 0}, "map": {"version":3,"file":"account.js","sourceRoot":"","sources":["../../../src/state/account.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3246, "column": 0}, "map": {"version":3,"file":"state.js","sourceRoot":"","sources":["../../../../src/extensions/cpiGuard/state.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,IAAI,EAAE,MAAM,6BAA6B,CAAC;;AAEnD,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;AAS/D,MAAM,cAAc,8OAAG,SAAA,AAAM,EAAW;KAAC,oWAAA,AAAI,EAAC,SAAS,CAAC;CAAC,CAAC,CAAC;AAE3D,MAAM,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC;AAE5C,SAAU,WAAW,CAAC,OAAgB;IACxC,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;IAChF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAChD,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC","debugId":null}},
    {"offset": {"line": 3276, "column": 0}, "map": {"version":3,"file":"state.js","sourceRoot":"","sources":["../../../../src/extensions/defaultAccountState/state.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,uBAAuB,CAAC;AAGnD,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;AAS/D,MAAM,yBAAyB,8OAAG,SAAA,AAAM,EAAsB;+OAAC,KAAA,AAAE,EAAC,OAAO,CAAC;CAAC,CAAC,CAAC;AAE7E,MAAM,0BAA0B,GAAG,yBAAyB,CAAC,IAAI,CAAC;AAEnE,SAAU,sBAAsB,CAAC,IAAU;IAC7C,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,mBAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACxF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,yBAAyB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAC3D,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC","debugId":null}},
    {"offset": {"line": 3303, "column": 0}, "map": {"version":3,"file":"index.node.mjs","sources":["file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Berrors%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/errors/src/codes.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Berrors%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/errors/src/context.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Berrors%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/errors/src/messages.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Berrors%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/errors/src/message-formatter.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Berrors%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/errors/src/error.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Berrors%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/errors/src/stack-trace.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Berrors%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/errors/src/rpc-enum-errors.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Berrors%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/errors/src/instruction-error.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Berrors%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/errors/src/transaction-error.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Berrors%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/errors/src/json-rpc-error.ts"],"sourcesContent":["/**\n * To add a new error, follow the instructions at\n * https://github.com/solana-labs/solana-web3.js/tree/master/packages/errors/#adding-a-new-error\n *\n * WARNING:\n *   - Don't remove error codes\n *   - Don't change or reorder error codes.\n *\n * Good naming conventions:\n *   - Prefixing common errors — e.g. under the same package — can be a good way to namespace them. E.g. All codec-related errors start with `SOLANA_ERROR__CODECS__`.\n *   - Use consistent names — e.g. choose `PDA` or `PROGRAM_DERIVED_ADDRESS` and stick with it. Ensure your names are consistent with existing error codes. The decision might have been made for you.\n *   - Recommended prefixes and suffixes:\n *     - `MALFORMED_`: Some input was not constructed properly. E.g. `MALFORMED_BASE58_ENCODED_ADDRESS`.\n *     - `INVALID_`: Some input is invalid (other than because it was MALFORMED). E.g. `INVALID_NUMBER_OF_BYTES`.\n *     - `EXPECTED_`: Some input was different than expected, no need to specify the \"GOT\" part unless necessary. E.g. `EXPECTED_DECODED_ACCOUNT`.\n *     - `_CANNOT_`: Some operation cannot be performed or some input cannot be used due to some condition. E.g. `CANNOT_DECODE_EMPTY_BYTE_ARRAY` or `PDA_CANNOT_END_WITH_PDA_MARKER`.\n *     - `_MUST_BE_`: Some condition must be true. E.g. `NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE`.\n *     - `_FAILED_TO_`: Tried to perform some operation and failed. E.g. `FAILED_TO_DECODE_ACCOUNT`.\n *     - `_NOT_FOUND`: Some operation lead to not finding something. E.g. `ACCOUNT_NOT_FOUND`.\n *     - `_OUT_OF_RANGE`: Some value is out of range. E.g. `ENUM_DISCRIMINATOR_OUT_OF_RANGE`.\n *     - `_EXCEEDED`: Some limit was exceeded. E.g. `PDA_MAX_SEED_LENGTH_EXCEEDED`.\n *     - `_MISMATCH`: Some elements do not match. E.g. `ENCODER_DECODER_FIXED_SIZE_MISMATCH`.\n *     - `_MISSING`: Some required input is missing. E.g. `TRANSACTION_FEE_PAYER_MISSING`.\n *     - `_UNIMPLEMENTED`: Some required component is not available in the environment. E.g. `SUBTLE_CRYPTO_VERIFY_FUNCTION_UNIMPLEMENTED`.\n */\nexport const SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = 1 as const;\nexport const SOLANA_ERROR__INVALID_NONCE = 2 as const;\nexport const SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = 3 as const;\nexport const SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = 4 as const;\nexport const SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = 5 as const;\nexport const SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = 6 as const;\nexport const SOLANA_ERROR__MALFORMED_BIGINT_STRING = 7 as const;\nexport const SOLANA_ERROR__MALFORMED_NUMBER_STRING = 8 as const;\nexport const SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = 9 as const;\n\n// JSON-RPC-related errors.\n// Reserve error codes in the range [-32768, -32000]\n// Keep in sync with https://github.com/anza-xyz/agave/blob/master/rpc-client-api/src/custom_error.rs\nexport const SOLANA_ERROR__JSON_RPC__PARSE_ERROR = -32700 as const;\nexport const SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = -32603 as const;\nexport const SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = -32602 as const;\nexport const SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = -32601 as const;\nexport const SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = -32600 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = -32016 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = -32015 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = -32014 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = -32013 as const;\nexport const SOLANA_ERROR__JSON_RPC__SCAN_ERROR = -32012 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = -32011 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = -32010 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = -32009 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = -32008 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = -32007 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = -32006 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = -32005 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = -32004 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = -32003 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = -32002 as const;\nexport const SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = -32001 as const;\n\n// Addresses-related errors.\n// Reserve error codes in the range [2800000-2800999].\nexport const SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = 2800000 as const;\nexport const SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = 2800001 as const;\nexport const SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = 2800002 as const;\nexport const SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = 2800003 as const;\nexport const SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = 2800004 as const;\nexport const SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = 2800005 as const;\nexport const SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = 2800006 as const;\nexport const SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = 2800007 as const;\nexport const SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = 2800008 as const;\nexport const SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = 2800009 as const;\nexport const SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = 2800010 as const;\n\n// Account-related errors.\n// Reserve error codes in the range [3230000-3230999].\nexport const SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = 3230000 as const;\nexport const SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = 32300001 as const;\nexport const SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = 3230002 as const;\nexport const SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = 3230003 as const;\nexport const SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = 3230004 as const;\n\n// Subtle-Crypto-related errors.\n// Reserve error codes in the range [3610000-3610999].\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = 3610000 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = 3610001 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = 3610002 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = 3610003 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = 3610004 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = 3610005 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = 3610006 as const;\nexport const SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY = 3610007 as const;\n\n// Crypto-related errors.\n// Reserve error codes in the range [3611000-3611050].\nexport const SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED = 3611000 as const;\n\n// Key-related errors.\n// Reserve error codes in the range [3704000-3704999].\nexport const SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = 3704000 as const;\nexport const SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = 3704001 as const;\nexport const SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = 3704002 as const;\nexport const SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = 3704003 as const;\nexport const SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY = 3704004 as const;\n\n// Instruction-related errors.\n// Reserve error codes in the range [4128000-4128999].\nexport const SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = 4128000 as const;\nexport const SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = 4128001 as const;\nexport const SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = 4128002 as const;\n\n// Instruction errors.\n// Reserve error codes starting with [4615000-4615999] for the Rust enum `InstructionError`.\n// Error names here are dictated by the RPC (see ./instruction-error.ts).\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = 4615000 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = 4615001 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = 4615002 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = 4615003 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = 4615004 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = 4615005 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = 4615006 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = 4615007 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = 4615008 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = 4615009 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = 4615010 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = 4615011 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = 4615012 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = 4615013 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = 4615014 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = 4615015 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = 4615016 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = 4615017 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = 4615018 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = 4615019 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = 4615020 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = 4615021 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = 4615022 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = 4615023 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 4615024 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = 4615025 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = 4615026 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = 4615027 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = 4615028 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = 4615029 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = 4615030 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = 4615031 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = 4615032 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = 4615033 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = 4615034 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4615035 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = 4615036 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = 4615037 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = 4615038 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = 4615039 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = 4615040 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = 4615041 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = 4615042 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = 4615043 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = 4615044 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = 4615045 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = 4615046 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = 4615047 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = 4615048 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = 4615049 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = 4615050 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = 4615051 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = 4615052 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = 4615053 as const;\nexport const SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = 4615054 as const;\n\n// Signer-related errors.\n// Reserve error codes in the range [5508000-5508999].\nexport const SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = 5508000 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = 5508001 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = 5508002 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = 5508003 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = 5508004 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = 5508005 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = 5508006 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = 5508007 as const;\nexport const SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = 5508008 as const;\nexport const SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = 5508009 as const;\nexport const SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = 5508010 as const;\nexport const SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED = 5508011 as const;\n\n// Transaction-related errors.\n// Reserve error codes in the range [5663000-5663999].\nexport const SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = 5663000 as const;\nexport const SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = 5663001 as const;\nexport const SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = 5663002 as const;\nexport const SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = 5663003 as const;\nexport const SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = 5663004 as const;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = 5663005 as const;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = 5663006 as const;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = 5663007 as const;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = 5663008 as const;\nexport const SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = 5663009 as const;\nexport const SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = 5663010 as const;\nexport const SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = 5663011 as const;\nexport const SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = 5663012 as const;\nexport const SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = 5663013 as const;\nexport const SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE =\n    5663014 as const;\nexport const SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION = 5663015 as const;\nexport const SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES = 5663016 as const;\nexport const SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH = 5663017 as const;\nexport const SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT = 5663018 as const;\n\n// Transaction errors.\n// Reserve error codes starting with [7050000-7050999] for the Rust enum `TransactionError`.\n// Error names here are dictated by the RPC (see ./transaction-error.ts).\nexport const SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = 7050000 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = 7050001 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = 7050002 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = 7050003 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = 7050004 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = 7050005 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = 7050006 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = 7050007 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = 7050008 as const;\n// `InstructionError` intentionally omitted.\nexport const SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = 7050009 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = 7050010 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = 7050011 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = 7050012 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = 7050013 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = 7050014 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = 7050015 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 7050016 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = 7050017 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = 7050018 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = 7050019 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = 7050020 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = 7050021 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = 7050022 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = 7050023 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = 7050024 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = 7050025 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = 7050026 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = 7050027 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = 7050028 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = 7050029 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = 7050030 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = 7050031 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = 7050032 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = 7050033 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = 7050034 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = 7050035 as const;\nexport const SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = 7050036 as const;\n\n// Codec-related errors.\n// Reserve error codes in the range [8078000-8078999].\nexport const SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = 8078000 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = 8078001 as const;\nexport const SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = 8078002 as const;\nexport const SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = 8078003 as const;\nexport const SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = 8078004 as const;\nexport const SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = 8078005 as const;\nexport const SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = 8078006 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = 8078007 as const;\nexport const SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = 8078008 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT = 8078009 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT = 8078010 as const;\nexport const SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = 8078011 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = 8078012 as const;\nexport const SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = 8078013 as const;\nexport const SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = 8078014 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT = 8078015 as const;\nexport const SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE = 8078016 as const;\nexport const SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE = 8078017 as const;\nexport const SOLANA_ERROR__CODECS__INVALID_CONSTANT = 8078018 as const;\nexport const SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE = 8078019 as const;\nexport const SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL = 8078020 as const;\nexport const SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES = 8078021 as const;\nexport const SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS = 8078022 as const;\n\n// RPC-related errors.\n// Reserve error codes in the range [8100000-8100999].\nexport const SOLANA_ERROR__RPC__INTEGER_OVERFLOW = 8100000 as const;\nexport const SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = 8100001 as const;\nexport const SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = 8100002 as const;\n\n// RPC-Subscriptions-related errors.\n// Reserve error codes in the range [8190000-8190999].\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST = 8190000 as const;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = 8190001 as const;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED = 8190002 as const;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED = 8190003 as const;\nexport const SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT = 8190004 as const;\n\n// Invariant violation errors.\n// Reserve error codes in the range [9900000-9900999].\n// These errors should only be thrown when there is a bug with the\n// library itself and should, in theory, never reach the end user.\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING = 9900000 as const;\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE =\n    9900001 as const;\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = 9900002 as const;\nexport const SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = 9900003 as const;\n\n/**\n * A union of every Solana error code\n *\n * You might be wondering why this is not a TypeScript enum or const enum.\n *\n * One of the goals of this library is to enable people to use some or none of it without having to\n * bundle all of it.\n *\n * If we made the set of error codes an enum then anyone who imported it (even if to only use a\n * single error code) would be forced to bundle every code and its label.\n *\n * Const enums appear to solve this problem by letting the compiler inline only the codes that are\n * actually used. Unfortunately exporting ambient (const) enums from a library like `@solana/errors`\n * is not safe, for a variety of reasons covered here: https://stackoverflow.com/a/28818850\n */\nexport type SolanaErrorCode =\n    | typeof SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED\n    | typeof SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT\n    | typeof SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT\n    | typeof SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND\n    | typeof SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY\n    | typeof SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE\n    | typeof SOLANA_ERROR__ADDRESSES__MALFORMED_PDA\n    | typeof SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED\n    | typeof SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED\n    | typeof SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER\n    | typeof SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED\n    | typeof SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY\n    | typeof SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS\n    | typeof SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL\n    | typeof SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH\n    | typeof SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH\n    | typeof SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH\n    | typeof SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH\n    | typeof SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH\n    | typeof SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH\n    | typeof SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE\n    | typeof SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH\n    | typeof SOLANA_ERROR__CODECS__INVALID_CONSTANT\n    | typeof SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT\n    | typeof SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT\n    | typeof SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT\n    | typeof SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS\n    | typeof SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE\n    | typeof SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES\n    | typeof SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS\n    | typeof SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA\n    | typeof SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID\n    | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR\n    | typeof SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH\n    | typeof SOLANA_ERROR__INVALID_NONCE\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE\n    | typeof SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING\n    | typeof SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR\n    | typeof SOLANA_ERROR__JSON_RPC__INVALID_PARAMS\n    | typeof SOLANA_ERROR__JSON_RPC__INVALID_REQUEST\n    | typeof SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND\n    | typeof SOLANA_ERROR__JSON_RPC__PARSE_ERROR\n    | typeof SOLANA_ERROR__JSON_RPC__SCAN_ERROR\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE\n    | typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION\n    | typeof SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH\n    | typeof SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH\n    | typeof SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH\n    | typeof SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY\n    | typeof SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__MALFORMED_BIGINT_STRING\n    | typeof SOLANA_ERROR__MALFORMED_NUMBER_STRING\n    | typeof SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__RPC__INTEGER_OVERFLOW\n    | typeof SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR\n    | typeof SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED\n    | typeof SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT\n    | typeof SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER\n    | typeof SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS\n    | typeof SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING\n    | typeof SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED\n    | typeof SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION\n    | typeof SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES\n    | typeof SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME\n    | typeof SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE\n    | typeof SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES\n    | typeof SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE\n    | typeof SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH\n    | typeof SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING\n    | typeof SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT\n    | typeof SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT;\n\n/**\n * Errors of this type are understood to have an optional `SolanaError` nested inside as `cause`.\n */\nexport type SolanaErrorCodeWithCause = typeof SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE;\n","import {\n    SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED,\n    SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT,\n    SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT,\n    SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND,\n    SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS,\n    SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH,\n    SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED,\n    SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED,\n    SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE,\n    SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED,\n    SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY,\n    SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS,\n    SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH,\n    SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE,\n    SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH,\n    SOLANA_ERROR__CODECS__INVALID_CONSTANT,\n    SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT,\n    SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT,\n    SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT,\n    SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS,\n    SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE,\n    SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES,\n    SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE,\n    SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS,\n    SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA,\n    SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW,\n    SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH,\n    SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,\n    SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX,\n    SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND,\n    SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER,\n    SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR,\n    SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH,\n    SOLANA_ERROR__INVALID_NONCE,\n    SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING,\n    SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE,\n    SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR,\n    SOLANA_ERROR__JSON_RPC__INVALID_PARAMS,\n    SOLANA_ERROR__JSON_RPC__INVALID_REQUEST,\n    SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND,\n    SOLANA_ERROR__JSON_RPC__PARSE_ERROR,\n    SOLANA_ERROR__JSON_RPC__SCAN_ERROR,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION,\n    SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__MALFORMED_BIGINT_STRING,\n    SOLANA_ERROR__MALFORMED_NUMBER_STRING,\n    SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__RPC__INTEGER_OVERFLOW,\n    SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR,\n    SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT,\n    SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS,\n    SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER,\n    SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY,\n    SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING,\n    SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES,\n    SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE,\n    SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH,\n    SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING,\n    SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION,\n    SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT,\n    SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED,\n    SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN,\n    SolanaErrorCode,\n} from './codes';\nimport { RpcSimulateTransactionResult } from './json-rpc-error';\n\ntype BasicInstructionErrorContext<T extends SolanaErrorCode> = Readonly<{ [P in T]: { index: number } }>;\n\ntype DefaultUnspecifiedErrorContextToUndefined<T> = {\n    [P in SolanaErrorCode]: P extends keyof T ? T[P] : undefined;\n};\n\ntype TypedArrayMutableProperties = 'copyWithin' | 'fill' | 'reverse' | 'set' | 'sort';\ninterface ReadonlyUint8Array extends Omit<Uint8Array, TypedArrayMutableProperties> {\n    readonly [n: number]: number;\n}\n\n/**\n * To add a new error, follow the instructions at\n * https://github.com/solana-labs/solana-web3.js/tree/master/packages/errors/#adding-a-new-error\n *\n * WARNING:\n *   - Don't change or remove members of an error's context.\n */\nexport type SolanaErrorContext = DefaultUnspecifiedErrorContextToUndefined<\n    BasicInstructionErrorContext<\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID\n        | typeof SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR\n    > & {\n        [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: {\n            address: string;\n        };\n        [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]: {\n            addresses: string[];\n        };\n        [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: {\n            address: string;\n        };\n        [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: {\n            address: string;\n        };\n        [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: {\n            addresses: string[];\n        };\n        [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: {\n            putativeAddress: string;\n        };\n        [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]: {\n            actual: number;\n            maxSeeds: number;\n        };\n        [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]: {\n            actual: number;\n            index: number;\n            maxSeedLength: number;\n        };\n        [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]: {\n            bump: number;\n        };\n        [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]: {\n            currentBlockHeight: bigint;\n            lastValidBlockHeight: bigint;\n        };\n        [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]: {\n            codecDescription: string;\n        };\n        [SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS]: {\n            stringValues: string[];\n        };\n        [SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL]: {\n            encodedBytes: ReadonlyUint8Array;\n            hexEncodedBytes: string;\n            hexSentinel: string;\n            sentinel: ReadonlyUint8Array;\n        };\n        [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]: {\n            decoderFixedSize: number;\n            encoderFixedSize: number;\n        };\n        [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]: {\n            decoderMaxSize: number | undefined;\n            encoderMaxSize: number | undefined;\n        };\n        [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]: {\n            discriminator: bigint | number;\n            formattedValidDiscriminators: string;\n            validDiscriminators: number[];\n        };\n        [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]: {\n            bytesLength: number;\n            codecDescription: string;\n        };\n        [SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE]: {\n            codecDescription: string;\n            expectedSize: number;\n            hexZeroValue: string;\n            zeroValue: ReadonlyUint8Array;\n        };\n        [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]: {\n            bytesLength: number;\n            codecDescription: string;\n            expected: number;\n        };\n        [SOLANA_ERROR__CODECS__INVALID_CONSTANT]: {\n            constant: ReadonlyUint8Array;\n            data: ReadonlyUint8Array;\n            hexConstant: string;\n            hexData: string;\n            offset: number;\n        };\n        [SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT]: {\n            value: bigint | boolean | number | string | null | undefined;\n            variants: readonly (bigint | boolean | number | string | null | undefined)[];\n        };\n        [SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT]: {\n            formattedNumericalValues: string;\n            numericalValues: number[];\n            stringValues: string[];\n            variant: number | string | symbol;\n        };\n        [SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT]: {\n            value: bigint | boolean | number | string | null | undefined;\n            variants: readonly (bigint | boolean | number | string | null | undefined)[];\n        };\n        [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]: {\n            actual: bigint | number;\n            codecDescription: string;\n            expected: bigint | number;\n        };\n        [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: {\n            alphabet: string;\n            base: number;\n            value: string;\n        };\n        [SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE]: {\n            discriminator: bigint | number;\n            maxRange: number;\n            minRange: number;\n        };\n        [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]: {\n            codecDescription: string;\n            max: bigint | number;\n            min: bigint | number;\n            value: bigint | number;\n        };\n        [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]: {\n            bytesLength: number;\n            codecDescription: string;\n            offset: number;\n        };\n        [SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES]: {\n            decodedBytes: ReadonlyUint8Array;\n            hexDecodedBytes: string;\n            hexSentinel: string;\n            sentinel: ReadonlyUint8Array;\n        };\n        [SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE]: {\n            maxRange: number;\n            minRange: number;\n            variant: number;\n        };\n        [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: {\n            encodedData: string;\n            index: number;\n        };\n        [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: {\n            code: number;\n            index: number;\n        };\n        [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: {\n            errorName: string;\n            index: number;\n            instructionErrorContext?: unknown;\n        };\n        [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: {\n            data?: Uint8Array;\n            programAddress: string;\n        };\n        [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: {\n            accountAddresses?: string[];\n            programAddress: string;\n        };\n        [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]: {\n            actualProgramAddress: string;\n            expectedProgramAddress: string;\n        };\n        [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__INVALID_NONCE]: {\n            actualNonceValue: string;\n            expectedNonceValue: string;\n        };\n        [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]: {\n            cacheKey: string;\n        };\n        [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]: {\n            unexpectedValue: unknown;\n        };\n        [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: {\n            contextSlot: number;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: {\n            numSlotsBehind?: number;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: Omit<\n            RpcSimulateTransactionResult,\n            'err'\n        >;\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: {\n            __serverMessage: string;\n        };\n        [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: {\n            byteLength: number;\n        };\n        [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]: {\n            actualLength: number;\n        };\n        [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: {\n            value: string;\n        };\n        [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: {\n            value: string;\n        };\n        [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: {\n            nonceAccountAddress: string;\n        };\n        [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST]: {\n            notificationName: string;\n        };\n        [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT]: {\n            errorEvent: Event;\n        };\n        [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]: {\n            argumentLabel: string;\n            keyPath: readonly (number | string | symbol)[];\n            methodName: string;\n            optionalPathLabel: string;\n            path?: string;\n            value: bigint;\n        };\n        [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: {\n            message: string;\n            statusCode: number;\n        };\n        [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]: {\n            headers: string[];\n        };\n        [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]: {\n            address: string;\n        };\n        [SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY]: {\n            key: CryptoKey;\n        };\n        [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: {\n            value: number;\n        };\n        [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]: {\n            index: number;\n        };\n        [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]: {\n            accountIndex: number;\n        };\n        [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]: {\n            accountIndex: number;\n        };\n        [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: {\n            errorName: string;\n            transactionErrorContext?: unknown;\n        };\n        [SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION]: {\n            expectedAddresses: string[];\n            unexpectedAddresses: string[];\n        };\n        [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: {\n            index: number;\n        };\n        [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]: {\n            lookupTableAddresses: string[];\n        };\n        [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]: {\n            highestKnownIndex: number;\n            highestRequestedIndex: number;\n            lookupTableAddress: string;\n        };\n        [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]: {\n            index: number;\n        };\n        [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]: {\n            programAddress: string;\n        };\n        [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]: {\n            programAddress: string;\n        };\n        [SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH]: {\n            numRequiredSignatures: number;\n            signaturesLength: number;\n            signerAddresses: string[];\n        };\n        [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: {\n            addresses: string[];\n        };\n        [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]: {\n            actualVersion: number;\n        };\n    }\n>;\n\nexport function decodeEncodedContext(encodedContext: string): object {\n    const decodedUrlString = __NODEJS__ ? Buffer.from(encodedContext, 'base64').toString('utf8') : atob(encodedContext);\n    return Object.fromEntries(new URLSearchParams(decodedUrlString).entries());\n}\n\nfunction encodeValue(value: unknown): string {\n    if (Array.isArray(value)) {\n        const commaSeparatedValues = value.map(encodeValue).join('%2C%20' /* \", \" */);\n        return '%5B' /* \"[\" */ + commaSeparatedValues + /* \"]\" */ '%5D';\n    } else if (typeof value === 'bigint') {\n        return `${value}n`;\n    } else {\n        return encodeURIComponent(\n            String(\n                value != null && Object.getPrototypeOf(value) === null\n                    ? // Plain objects with no prototype don't have a `toString` method.\n                      // Convert them before stringifying them.\n                      { ...(value as object) }\n                    : value,\n            ),\n        );\n    }\n}\n\nfunction encodeObjectContextEntry([key, value]: [string, unknown]): `${typeof key}=${string}` {\n    return `${key}=${encodeValue(value)}`;\n}\n\nexport function encodeContextObject(context: object): string {\n    const searchParamsString = Object.entries(context).map(encodeObjectContextEntry).join('&');\n    return __NODEJS__ ? Buffer.from(searchParamsString, 'utf8').toString('base64') : btoa(searchParamsString);\n}\n","import {\n    SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED,\n    SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT,\n    SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT,\n    SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND,\n    SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED,\n    SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS,\n    SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH,\n    SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY,\n    SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE,\n    SOLANA_ERROR__ADDRESSES__MALFORMED_PDA,\n    SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED,\n    SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED,\n    SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE,\n    SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER,\n    SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED,\n    SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY,\n    SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS,\n    SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH,\n    SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH,\n    SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH,\n    SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH,\n    SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE,\n    SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH,\n    SOLANA_ERROR__CODECS__INVALID_CONSTANT,\n    SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT,\n    SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT,\n    SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT,\n    SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS,\n    SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE,\n    SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES,\n    SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE,\n    SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS,\n    SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA,\n    SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW,\n    SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH,\n    SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,\n    SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX,\n    SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND,\n    SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER,\n    SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC,\n    SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE,\n    SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR,\n    SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH,\n    SOLANA_ERROR__INVALID_NONCE,\n    SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING,\n    SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE,\n    SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE,\n    SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING,\n    SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR,\n    SOLANA_ERROR__JSON_RPC__INVALID_PARAMS,\n    SOLANA_ERROR__JSON_RPC__INVALID_REQUEST,\n    SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND,\n    SOLANA_ERROR__JSON_RPC__PARSE_ERROR,\n    SOLANA_ERROR__JSON_RPC__SCAN_ERROR,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION,\n    SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH,\n    SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY,\n    SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE,\n    SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE,\n    SOLANA_ERROR__MALFORMED_BIGINT_STRING,\n    SOLANA_ERROR__MALFORMED_NUMBER_STRING,\n    SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__RPC__INTEGER_OVERFLOW,\n    SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR,\n    SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED,\n    SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT,\n    SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS,\n    SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER,\n    SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER,\n    SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS,\n    SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING,\n    SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY,\n    SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT,\n    SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING,\n    SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION,\n    SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES,\n    SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME,\n    SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT,\n    SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING,\n    SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING,\n    SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE,\n    SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING,\n    SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES,\n    SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE,\n    SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH,\n    SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING,\n    SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE,\n    SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING,\n    SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE,\n    SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE,\n    SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED,\n    SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP,\n    SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE,\n    SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION,\n    SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE,\n    SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT,\n    SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT,\n    SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED,\n    SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE,\n    SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND,\n    SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED,\n    SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED,\n    SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE,\n    SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE,\n    SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS,\n    SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION,\n    SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN,\n    SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION,\n    SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT,\n    SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT,\n    SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT,\n    SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT,\n    SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT,\n    SolanaErrorCode,\n} from './codes';\n\n/**\n * To add a new error, follow the instructions at\n * https://github.com/solana-labs/solana-web3.js/tree/master/packages/errors#adding-a-new-error\n *\n * WARNING:\n *   - Don't change the meaning of an error message.\n */\nexport const SolanaErrorMessages: Readonly<{\n    // This type makes this data structure exhaustive with respect to `SolanaErrorCode`.\n    // TypeScript will fail to build this project if add an error code without a message.\n    [P in SolanaErrorCode]: string;\n}> = {\n    [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: 'Account not found at address: $address',\n    [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]:\n        'Not all accounts were decoded. Encoded accounts found at addresses: $addresses.',\n    [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: 'Expected decoded account at address: $address',\n    [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: 'Failed to decode account data at address: $address',\n    [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: 'Accounts not found at addresses: $addresses',\n    [SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED]:\n        'Unable to find a viable program address bump seed.',\n    [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: '$putativeAddress is not a base58-encoded address.',\n    [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]:\n        'Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.',\n    [SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY]: 'The `CryptoKey` must be an `Ed25519` public key.',\n    [SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE]: 'Invalid seeds; point must fall off the Ed25519 curve.',\n    [SOLANA_ERROR__ADDRESSES__MALFORMED_PDA]:\n        'Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].',\n    [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]:\n        'A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.',\n    [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]:\n        'The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.',\n    [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]:\n        'Expected program derived address bump to be in the range [0, 255], got: $bump.',\n    [SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER]: 'Program address cannot end with PDA marker.',\n    [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]:\n        'Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.',\n    [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]:\n        'Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.',\n    [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]:\n        'The network has progressed past the last block for which this transaction could have been committed.',\n    [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]:\n        'Codec [$codecDescription] cannot decode empty byte arrays.',\n    [SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS]:\n        'Enum codec cannot use lexical values [$stringValues] as discriminators. Either remove all lexical values or set `useValuesAsDiscriminators` to `false`.',\n    [SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL]:\n        'Sentinel [$hexSentinel] must not be present in encoded bytes [$hexEncodedBytes].',\n    [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]:\n        'Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].',\n    [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]:\n        'Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].',\n    [SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH]:\n        'Encoder and decoder must either both be fixed-size or variable-size.',\n    [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]:\n        'Enum discriminator out of range. Expected a number in [$formattedValidDiscriminators], got $discriminator.',\n    [SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH]: 'Expected a fixed-size codec, got a variable-size one.',\n    [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]:\n        'Codec [$codecDescription] expected a positive byte length, got $bytesLength.',\n    [SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH]: 'Expected a variable-size codec, got a fixed-size one.',\n    [SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE]:\n        'Codec [$codecDescription] expected zero-value [$hexZeroValue] to have the same size as the provided fixed-size item [$expectedSize bytes].',\n    [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]:\n        'Codec [$codecDescription] expected $expected bytes, got $bytesLength.',\n    [SOLANA_ERROR__CODECS__INVALID_CONSTANT]:\n        'Expected byte array constant [$hexConstant] to be present in data [$hexData] at offset [$offset].',\n    [SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT]:\n        'Invalid discriminated union variant. Expected one of [$variants], got $value.',\n    [SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT]:\n        'Invalid enum variant. Expected one of [$stringValues] or a number in [$formattedNumericalValues], got $variant.',\n    [SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT]:\n        'Invalid literal union variant. Expected one of [$variants], got $value.',\n    [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]:\n        'Expected [$codecDescription] to have $expected items, got $actual.',\n    [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: 'Invalid value $value for base $base with alphabet $alphabet.',\n    [SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE]:\n        'Literal union discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.',\n    [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]:\n        'Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.',\n    [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]:\n        'Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.',\n    [SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES]:\n        'Expected sentinel [$hexSentinel] to be present in decoded bytes [$hexDecodedBytes].',\n    [SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE]:\n        'Union variant out of range. Expected an index between $minRange and $maxRange, got $variant.',\n    [SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED]: 'No random values implementation could be found.',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED]: 'instruction requires an uninitialized account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED]:\n        'instruction tries to borrow reference for an account which is already borrowed',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]:\n        'instruction left account with an outstanding borrowed reference',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED]:\n        \"program other than the account's owner changed the size of the account data\",\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL]: 'account data too small for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE]: 'instruction expected an executable account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT]:\n        'An account does not have enough lamports to be rent-exempt',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW]: 'Program arithmetic overflowed',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: 'Failed to serialize or deserialize account data: $encodedData',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS]:\n        'Builtin programs must consume compute units',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH]: 'Cross-program invocation call depth too deep',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED]: 'Computational budget exceeded',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: 'custom program error: #$code',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX]: 'instruction contains duplicate accounts',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC]:\n        'instruction modifications of multiply-passed account differ',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT]: 'executable accounts must be rent exempt',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED]: 'instruction changed executable accounts data',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE]:\n        'instruction changed the balance of an executable account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED]: 'instruction changed executable bit of an account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED]:\n        'instruction modified data of an account it does not own',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND]:\n        'instruction spent from the balance of an account it does not own',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR]: 'generic instruction error',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER]: 'Provided owner is not allowed',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE]: 'Account is immutable',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY]: 'Incorrect authority provided',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID]: 'incorrect program id for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS]: 'insufficient funds for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA]: 'invalid account data for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER]: 'Invalid account owner',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT]: 'invalid program argument',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR]: 'program returned invalid error code',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA]: 'invalid instruction data',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC]: 'Failed to reallocate account data',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS]: 'Provided seeds do not result in a valid address',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED]:\n        'Accounts data allocations exceeded the maximum allowed per transaction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED]: 'Max accounts exceeded',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED]: 'Max instruction trace length exceeded',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED]:\n        'Length of the seed is too long for address generation',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT]: 'An account required by the instruction is missing',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE]: 'missing required signature for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID]:\n        'instruction illegally modified the program id of an account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS]: 'insufficient account keys for instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION]:\n        'Cross-program invocation with unauthorized signer or writable account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE]:\n        'Failed to create program execution environment',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE]: 'Program failed to compile',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE]: 'Program failed to complete',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED]: 'instruction modified data of a read-only account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE]:\n        'instruction changed the balance of a read-only account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED]:\n        'Cross-program invocation reentrancy not allowed for this instruction',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED]: 'instruction modified rent epoch of an account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION]:\n        'sum of account balances before and after instruction do not match',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT]: 'instruction requires an initialized account',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: '',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID]: 'Unsupported program id',\n    [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR]: 'Unsupported sysvar',\n    [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: 'The instruction does not have any accounts.',\n    [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: 'The instruction does not have any data.',\n    [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]:\n        'Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.',\n    [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]:\n        'Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.',\n    [SOLANA_ERROR__INVALID_NONCE]:\n        'The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`',\n    [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]:\n        'Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It ' +\n        'should be impossible to hit this error; please file an issue at ' +\n        'https://sola.na/web3invariant',\n    [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]:\n        'Invariant violation: Switch statement non-exhaustive. Received unexpected value ' +\n        '`$unexpectedValue`. It should be impossible to hit this error; please file an issue at ' +\n        'https://sola.na/web3invariant',\n    [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE]:\n        'Invariant violation: WebSocket message iterator state is corrupt; iterated without first ' +\n        'resolving existing message promise. It should be impossible to hit this error; please ' +\n        'file an issue at https://sola.na/web3invariant',\n    [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING]:\n        'Invariant violation: WebSocket message iterator is missing state storage. It should be ' +\n        'impossible to hit this error; please file an issue at https://sola.na/web3invariant',\n    [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: 'JSON-RPC error: Internal JSON-RPC error ($__serverMessage)',\n    [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: 'JSON-RPC error: Invalid method parameter(s) ($__serverMessage)',\n    [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]:\n        'JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)',\n    [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]:\n        'JSON-RPC error: The method does not exist / is not available ($__serverMessage)',\n    [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]:\n        'JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)',\n    [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: 'Minimum context slot has not been reached',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: 'Node is unhealthy; behind by $numSlotsBehind slots',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT]: 'No snapshot',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: 'Transaction simulation failed',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE]:\n        'Transaction history is not available from this node',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: '$__serverMessage',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH]: 'Transaction signature length mismatch',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE]:\n        'Transaction signature verification failure',\n    [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: '$__serverMessage',\n    [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: 'Key pair bytes must be of length 64, got $byteLength.',\n    [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]:\n        'Expected private key bytes with length 32. Actual length: $actualLength.',\n    [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]:\n        'Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.',\n    [SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY]:\n        'The provided private key does not match the provided public key.',\n    [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]:\n        'Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.',\n    [SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE]: 'Lamports value must be in the range [0, 2e64-1]',\n    [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: '`$value` cannot be parsed as a `BigInt`',\n    [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: '`$value` cannot be parsed as a `Number`',\n    [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: 'No nonce account could be found at address `$nonceAccountAddress`',\n    [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST]:\n        \"Either the notification name must end in 'Notifications' or the API must supply a \" +\n        \"subscription creator function for the notification '$notificationName' to map between \" +\n        'the notification name and the subscribe/unsubscribe method names.',\n    [SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID]:\n        'Failed to obtain a subscription id from the server',\n    [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED]:\n        'WebSocket was closed before payload could be added to the send buffer',\n    [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED]: 'WebSocket connection closed',\n    [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT]: 'WebSocket failed to connect',\n    [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]:\n        'The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was ' +\n        '`$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds ' +\n        '`Number.MAX_SAFE_INTEGER`.',\n    [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: 'HTTP error ($statusCode): $message',\n    [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]:\n        'HTTP header(s) forbidden: $headers. Learn more at ' +\n        'https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.',\n    [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]:\n        'Multiple distinct signers were identified for address `$address`. Please ensure that ' +\n        'you are using the same signer instance for each address.',\n    [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]:\n        'The provided value does not implement the `KeyPairSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]:\n        'The provided value does not implement the `MessageModifyingSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]:\n        'The provided value does not implement the `MessagePartialSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]:\n        'The provided value does not implement any of the `MessageSigner` interfaces',\n    [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]:\n        'The provided value does not implement the `TransactionModifyingSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]:\n        'The provided value does not implement the `TransactionPartialSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]:\n        'The provided value does not implement the `TransactionSendingSigner` interface',\n    [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]:\n        'The provided value does not implement any of the `TransactionSigner` interfaces',\n    [SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS]:\n        'More than one `TransactionSendingSigner` was identified.',\n    [SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING]:\n        'No `TransactionSendingSigner` was identified. Please provide a valid ' +\n        '`ITransactionWithSingleSendingSigner` transaction.',\n    [SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED]:\n        'Wallet account signers do not support signing multiple messages/transactions in a single operation',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY]: 'Cannot export a non-extractable key.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED]: 'No digest implementation could be found.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT]:\n        'Cryptographic operations are only allowed in secure browser contexts. Read more ' +\n        'here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED]:\n        'This runtime does not support the generation of Ed25519 key pairs.\\n\\nInstall ' +\n        '@solana/webcrypto-ed25519-polyfill and call its `install` function before generating keys in ' +\n        'environments that do not support Ed25519.\\n\\nFor a list of runtimes that ' +\n        'currently support Ed25519 operations, visit ' +\n        'https://github.com/WICG/webcrypto-secure-curves/issues/20.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED]:\n        'No signature verification implementation could be found.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED]: 'No key generation implementation could be found.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED]: 'No signing implementation could be found.',\n    [SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED]: 'No key export implementation could be found.',\n    [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: 'Timestamp value must be in the range [-8.64e15, 8.64e15]. `$value` given',\n    [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]:\n        'Transaction processing left an account with an outstanding borrowed reference',\n    [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE]: 'Account in use',\n    [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE]: 'Account loaded twice',\n    [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND]:\n        'Attempt to debit an account but found no record of a prior credit.',\n    [SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND]:\n        \"Transaction loads an address table account that doesn't exist\",\n    [SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED]: 'This transaction has already been processed',\n    [SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND]: 'Blockhash not found',\n    [SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP]: 'Loader call chain is too deep',\n    [SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE]:\n        'Transactions are currently disabled due to cluster maintenance',\n    [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]:\n        'Transaction contains a duplicate instruction ($index) that is not allowed',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE]: 'Insufficient funds for fee',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]:\n        'Transaction results in an account ($accountIndex) with insufficient funds for rent',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE]: 'This account may not be used to pay transaction fees',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX]: 'Transaction contains an invalid account reference',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA]:\n        'Transaction loads an address table account with invalid data',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX]:\n        'Transaction address table lookup uses an invalid index',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER]:\n        'Transaction loads an address table account with an invalid owner',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT]:\n        'LoadedAccountsDataSizeLimit set for transaction must be greater than 0.',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION]:\n        'This program may not be used for executing instructions',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT]:\n        'Transaction leaves an account with a lower balance than rent-exempt minimum',\n    [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT]:\n        'Transaction loads a writable account that cannot be written',\n    [SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED]:\n        'Transaction exceeded max loaded accounts data size cap',\n    [SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE]:\n        'Transaction requires a fee but has no signature present',\n    [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND]: 'Attempt to load a program that does not exist',\n    [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]:\n        'Execution of the program referenced by account at index $accountIndex is temporarily restricted.',\n    [SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED]: 'ResanitizationNeeded',\n    [SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE]: 'Transaction failed to sanitize accounts offsets correctly',\n    [SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE]: 'Transaction did not pass signature verification',\n    [SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS]: 'Transaction locked too many accounts',\n    [SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION]:\n        'Sum of account balances before and after transaction do not match',\n    [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: 'The transaction failed with the error `$errorName`',\n    [SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION]: 'Transaction version is unsupported',\n    [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT]:\n        'Transaction would exceed account data limit within the block',\n    [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT]:\n        'Transaction would exceed total account data limit',\n    [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT]:\n        'Transaction would exceed max account limit within the block',\n    [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT]:\n        'Transaction would exceed max Block Cost Limit',\n    [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT]: 'Transaction would exceed max Vote Cost Limit',\n    [SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION]:\n        'Attempted to sign a transaction with an address that is not a signer for it',\n    [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: 'Transaction is missing an address at index: $index.',\n    [SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES]:\n        'Transaction has no expected signers therefore it cannot be encoded',\n    [SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME]: 'Transaction does not have a blockhash lifetime',\n    [SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME]: 'Transaction is not a durable nonce transaction',\n    [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]:\n        'Contents of these address lookup tables unknown: $lookupTableAddresses',\n    [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]:\n        'Lookup of address at index $highestRequestedIndex failed for lookup table ' +\n        '`$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table ' +\n        'may have been extended since its contents were retrieved',\n    [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING]: 'No fee payer set in CompiledTransaction',\n    [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]:\n        'Could not find program address at index $index',\n    [SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT]:\n        'Failed to estimate the compute unit consumption for this transaction message. This is ' +\n        'likely because simulating the transaction failed. Inspect the `cause` property of this ' +\n        'error to learn more',\n    [SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING]: 'Transaction is missing a fee payer.',\n    [SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING]:\n        \"Could not determine this transaction's signature. Make sure that the transaction has \" +\n        'been signed by its fee payer.',\n    [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE]:\n        'Transaction first instruction is not advance nonce account instruction.',\n    [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING]:\n        'Transaction with no instructions cannot be durable nonce transaction.',\n    [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]:\n        'This transaction includes an address (`$programAddress`) which is both ' +\n        'invoked and set as the fee payer. Program addresses may not pay fees',\n    [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]:\n        'This transaction includes an address (`$programAddress`) which is both invoked and ' +\n        'marked writable. Program addresses may not be writable',\n    [SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH]:\n        'The transaction message expected the transaction to have $signerAddressesLength signatures, got $signaturesLength.',\n    [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: 'Transaction is missing signatures for addresses: $addresses.',\n    [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]:\n        'Transaction version must be in the range [0, 127]. `$actualVersion` given',\n};\n","import { SolanaErrorCode } from './codes';\nimport { encodeContextObject } from './context';\nimport { SolanaErrorMessages } from './messages';\n\nconst enum StateType {\n    EscapeSequence,\n    Text,\n    Variable,\n}\ntype State = Readonly<{\n    [START_INDEX]: number;\n    [TYPE]: StateType;\n}>;\nconst START_INDEX = 'i';\nconst TYPE = 't';\n\nexport function getHumanReadableErrorMessage<TErrorCode extends SolanaErrorCode>(\n    code: TErrorCode,\n    context: object = {},\n): string {\n    const messageFormatString = SolanaErrorMessages[code];\n    if (messageFormatString.length === 0) {\n        return '';\n    }\n    let state: State;\n    function commitStateUpTo(endIndex?: number) {\n        if (state[TYPE] === StateType.Variable) {\n            const variableName = messageFormatString.slice(state[START_INDEX] + 1, endIndex);\n            fragments.push(\n                variableName in context ? `${context[variableName as keyof typeof context]}` : `$${variableName}`,\n            );\n        } else if (state[TYPE] === StateType.Text) {\n            fragments.push(messageFormatString.slice(state[START_INDEX], endIndex));\n        }\n    }\n    const fragments: string[] = [];\n    messageFormatString.split('').forEach((char, ii) => {\n        if (ii === 0) {\n            state = {\n                [START_INDEX]: 0,\n                [TYPE]:\n                    messageFormatString[0] === '\\\\'\n                        ? StateType.EscapeSequence\n                        : messageFormatString[0] === '$'\n                          ? StateType.Variable\n                          : StateType.Text,\n            };\n            return;\n        }\n        let nextState;\n        switch (state[TYPE]) {\n            case StateType.EscapeSequence:\n                nextState = { [START_INDEX]: ii, [TYPE]: StateType.Text };\n                break;\n            case StateType.Text:\n                if (char === '\\\\') {\n                    nextState = { [START_INDEX]: ii, [TYPE]: StateType.EscapeSequence };\n                } else if (char === '$') {\n                    nextState = { [START_INDEX]: ii, [TYPE]: StateType.Variable };\n                }\n                break;\n            case StateType.Variable:\n                if (char === '\\\\') {\n                    nextState = { [START_INDEX]: ii, [TYPE]: StateType.EscapeSequence };\n                } else if (char === '$') {\n                    nextState = { [START_INDEX]: ii, [TYPE]: StateType.Variable };\n                } else if (!char.match(/\\w/)) {\n                    nextState = { [START_INDEX]: ii, [TYPE]: StateType.Text };\n                }\n                break;\n        }\n        if (nextState) {\n            if (state !== nextState) {\n                commitStateUpTo(ii);\n            }\n            state = nextState;\n        }\n    });\n    commitStateUpTo();\n    return fragments.join('');\n}\n\nexport function getErrorMessage<TErrorCode extends SolanaErrorCode>(code: TErrorCode, context: object = {}): string {\n    if (process.env.NODE_ENV !== \"production\") {\n        return getHumanReadableErrorMessage(code, context);\n    } else {\n        let decodingAdviceMessage = `Solana error #${code}; Decode this error by running \\`npx @solana/errors decode -- ${code}`;\n        if (Object.keys(context).length) {\n            /**\n             * DANGER: Be sure that the shell command is escaped in such a way that makes it\n             *         impossible for someone to craft malicious context values that would result in\n             *         an exploit against anyone who bindly copy/pastes it into their terminal.\n             */\n            decodingAdviceMessage += ` '${encodeContextObject(context)}'`;\n        }\n        return `${decodingAdviceMessage}\\``;\n    }\n}\n","import { SolanaErrorCode, SolanaErrorCodeWithCause } from './codes';\nimport { SolanaErrorContext } from './context';\nimport { getErrorMessage } from './message-formatter';\n\nexport function isSolanaError<TErrorCode extends SolanaErrorCode>(\n    e: unknown,\n    code?: TErrorCode,\n): e is SolanaError<TErrorCode> {\n    const isSolanaError = e instanceof Error && e.name === 'SolanaError';\n    if (isSolanaError) {\n        if (code !== undefined) {\n            return (e as SolanaError<TErrorCode>).context.__code === code;\n        }\n        return true;\n    }\n    return false;\n}\n\ntype SolanaErrorCodedContext = Readonly<{\n    [P in SolanaErrorCode]: (SolanaErrorContext[P] extends undefined ? object : SolanaErrorContext[P]) & {\n        __code: P;\n    };\n}>;\n\nexport class SolanaError<TErrorCode extends SolanaErrorCode = SolanaErrorCode> extends Error {\n    readonly cause?: TErrorCode extends SolanaErrorCodeWithCause ? SolanaError : unknown = this.cause;\n    readonly context: SolanaErrorCodedContext[TErrorCode];\n    constructor(\n        ...[code, contextAndErrorOptions]: SolanaErrorContext[TErrorCode] extends undefined\n            ? [code: TErrorCode, errorOptions?: ErrorOptions | undefined]\n            : [code: TErrorCode, contextAndErrorOptions: SolanaErrorContext[TErrorCode] & (ErrorOptions | undefined)]\n    ) {\n        let context: SolanaErrorContext[TErrorCode] | undefined;\n        let errorOptions: ErrorOptions | undefined;\n        if (contextAndErrorOptions) {\n            // If the `ErrorOptions` type ever changes, update this code.\n            const { cause, ...contextRest } = contextAndErrorOptions;\n            if (cause) {\n                errorOptions = { cause };\n            }\n            if (Object.keys(contextRest).length > 0) {\n                context = contextRest as SolanaErrorContext[TErrorCode];\n            }\n        }\n        const message = getErrorMessage(code, context);\n        super(message, errorOptions);\n        this.context = {\n            __code: code,\n            ...context,\n        } as SolanaErrorCodedContext[TErrorCode];\n        // This is necessary so that `isSolanaError()` can identify a `SolanaError` without having\n        // to import the class for use in an `instanceof` check.\n        this.name = 'SolanaError';\n    }\n}\n","export function safeCaptureStackTrace(...args: Parameters<typeof Error.captureStackTrace>): void {\n    if ('captureStackTrace' in Error && typeof Error.captureStackTrace === 'function') {\n        Error.captureStackTrace(...args);\n    }\n}\n","import { SolanaErrorCode } from './codes';\nimport { SolanaErrorContext } from './context';\nimport { SolanaError } from './error';\nimport { safeCaptureStackTrace } from './stack-trace';\n\ntype Config = Readonly<{\n    /**\n     * Oh, hello. You might wonder what in tarnation is going on here. Allow us to explain.\n     *\n     * One of the goals of `@solana/errors` is to allow errors that are not interesting to your\n     * application to shake out of your app bundle in production. This means that we must never\n     * export large hardcoded maps of error codes/messages.\n     *\n     * Unfortunately, where instruction and transaction errors from the RPC are concerned, we have\n     * no choice but to keep a map between the RPC `rpcEnumError` enum name and its corresponding\n     * `SolanaError` code. In the interest of implementing that map in as few bytes of source code\n     * as possible, we do the following:\n     *\n     *   1. Reserve a block of sequential error codes for the enum in question\n     *   2. Hardcode the list of enum names in that same order\n     *   3. Match the enum error name from the RPC with its index in that list, and reconstruct the\n     *      `SolanaError` code by adding the `errorCodeBaseOffset` to that index\n     */\n    errorCodeBaseOffset: number;\n    getErrorContext: (\n        errorCode: SolanaErrorCode,\n        rpcErrorName: string,\n        rpcErrorContext?: unknown,\n    ) => SolanaErrorContext[SolanaErrorCode];\n    orderedErrorNames: string[];\n    rpcEnumError: string | { [key: string]: unknown };\n}>;\n\nexport function getSolanaErrorFromRpcError(\n    { errorCodeBaseOffset, getErrorContext, orderedErrorNames, rpcEnumError }: Config,\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    constructorOpt: Function,\n): SolanaError {\n    let rpcErrorName;\n    let rpcErrorContext;\n    if (typeof rpcEnumError === 'string') {\n        rpcErrorName = rpcEnumError;\n    } else {\n        rpcErrorName = Object.keys(rpcEnumError)[0];\n        rpcErrorContext = rpcEnumError[rpcErrorName];\n    }\n    const codeOffset = orderedErrorNames.indexOf(rpcErrorName);\n    const errorCode = (errorCodeBaseOffset + codeOffset) as SolanaErrorCode;\n    const errorContext = getErrorContext(errorCode, rpcErrorName, rpcErrorContext);\n    const err = new SolanaError(errorCode, errorContext);\n    safeCaptureStackTrace(err, constructorOpt);\n    return err;\n}\n","import {\n    SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR,\n    SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,\n    SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN,\n} from './codes';\nimport { SolanaError } from './error';\nimport { getSolanaErrorFromRpcError } from './rpc-enum-errors';\n\nconst ORDERED_ERROR_NAMES = [\n    // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/program/src/instruction.rs\n    // If this list ever gets too large, consider implementing a compression strategy like this:\n    // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n    'GenericError',\n    'InvalidArgument',\n    'InvalidInstructionData',\n    'InvalidAccountData',\n    'AccountDataTooSmall',\n    'InsufficientFunds',\n    'IncorrectProgramId',\n    'MissingRequiredSignature',\n    'AccountAlreadyInitialized',\n    'UninitializedAccount',\n    'UnbalancedInstruction',\n    'ModifiedProgramId',\n    'ExternalAccountLamportSpend',\n    'ExternalAccountDataModified',\n    'ReadonlyLamportChange',\n    'ReadonlyDataModified',\n    'DuplicateAccountIndex',\n    'ExecutableModified',\n    'RentEpochModified',\n    'NotEnoughAccountKeys',\n    'AccountDataSizeChanged',\n    'AccountNotExecutable',\n    'AccountBorrowFailed',\n    'AccountBorrowOutstanding',\n    'DuplicateAccountOutOfSync',\n    'Custom',\n    'InvalidError',\n    'ExecutableDataModified',\n    'ExecutableLamportChange',\n    'ExecutableAccountNotRentExempt',\n    'UnsupportedProgramId',\n    'CallDepth',\n    'MissingAccount',\n    'ReentrancyNotAllowed',\n    'MaxSeedLengthExceeded',\n    'InvalidSeeds',\n    'InvalidRealloc',\n    'ComputationalBudgetExceeded',\n    'PrivilegeEscalation',\n    'ProgramEnvironmentSetupFailure',\n    'ProgramFailedToComplete',\n    'ProgramFailedToCompile',\n    'Immutable',\n    'IncorrectAuthority',\n    'BorshIoError',\n    'AccountNotRentExempt',\n    'InvalidAccountOwner',\n    'ArithmeticOverflow',\n    'UnsupportedSysvar',\n    'IllegalOwner',\n    'MaxAccountsDataAllocationsExceeded',\n    'MaxAccountsExceeded',\n    'MaxInstructionTraceLengthExceeded',\n    'BuiltinProgramsMustConsumeComputeUnits',\n];\n\nexport function getSolanaErrorFromInstructionError(\n    index: number,\n    instructionError: string | { [key: string]: unknown },\n): SolanaError {\n    return getSolanaErrorFromRpcError(\n        {\n            errorCodeBaseOffset: 4615001,\n            getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n                if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN) {\n                    return {\n                        errorName: rpcErrorName,\n                        index,\n                        ...(rpcErrorContext !== undefined ? { instructionErrorContext: rpcErrorContext } : null),\n                    };\n                } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM) {\n                    return {\n                        code: rpcErrorContext as number,\n                        index,\n                    };\n                } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR) {\n                    return {\n                        encodedData: rpcErrorContext as string,\n                        index,\n                    };\n                }\n                return { index };\n            },\n            orderedErrorNames: ORDERED_ERROR_NAMES,\n            rpcEnumError: instructionError,\n        },\n        getSolanaErrorFromInstructionError,\n    );\n}\n","import {\n    SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION,\n    SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT,\n    SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED,\n    SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN,\n} from './codes';\nimport { SolanaError } from './error';\nimport { getSolanaErrorFromInstructionError } from './instruction-error';\nimport { getSolanaErrorFromRpcError } from './rpc-enum-errors';\n\n/**\n * How to add an error when an entry is added to the RPC `TransactionError` enum:\n *\n *   1. Follow the instructions in `./codes.ts` to add a corresponding Solana error code\n *   2. Add the `TransactionError` enum name in the same order as it appears in `./codes.ts`\n *   3. Add the new error name/code mapping to `./__tests__/transaction-error-test.ts`\n */\nconst ORDERED_ERROR_NAMES = [\n    // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/src/transaction/error.rs\n    // If this list ever gets too large, consider implementing a compression strategy like this:\n    // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n    'AccountInUse',\n    'AccountLoadedTwice',\n    'AccountNotFound',\n    'ProgramAccountNotFound',\n    'InsufficientFundsForFee',\n    'InvalidAccountForFee',\n    'AlreadyProcessed',\n    'BlockhashNotFound',\n    // `InstructionError` intentionally omitted; delegated to `getSolanaErrorFromInstructionError`\n    'CallChainTooDeep',\n    'MissingSignatureForFee',\n    'InvalidAccountIndex',\n    'SignatureFailure',\n    'InvalidProgramForExecution',\n    'SanitizeFailure',\n    'ClusterMaintenance',\n    'AccountBorrowOutstanding',\n    'WouldExceedMaxBlockCostLimit',\n    'UnsupportedVersion',\n    'InvalidWritableAccount',\n    'WouldExceedMaxAccountCostLimit',\n    'WouldExceedAccountDataBlockLimit',\n    'TooManyAccountLocks',\n    'AddressLookupTableNotFound',\n    'InvalidAddressLookupTableOwner',\n    'InvalidAddressLookupTableData',\n    'InvalidAddressLookupTableIndex',\n    'InvalidRentPayingAccount',\n    'WouldExceedMaxVoteCostLimit',\n    'WouldExceedAccountDataTotalLimit',\n    'DuplicateInstruction',\n    'InsufficientFundsForRent',\n    'MaxLoadedAccountsDataSizeExceeded',\n    'InvalidLoadedAccountsDataSizeLimit',\n    'ResanitizationNeeded',\n    'ProgramExecutionTemporarilyRestricted',\n    'UnbalancedTransaction',\n];\n\nexport function getSolanaErrorFromTransactionError(transactionError: string | { [key: string]: unknown }): SolanaError {\n    if (typeof transactionError === 'object' && 'InstructionError' in transactionError) {\n        return getSolanaErrorFromInstructionError(\n            ...(transactionError.InstructionError as Parameters<typeof getSolanaErrorFromInstructionError>),\n        );\n    }\n    return getSolanaErrorFromRpcError(\n        {\n            errorCodeBaseOffset: 7050001,\n            getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n                if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN) {\n                    return {\n                        errorName: rpcErrorName,\n                        ...(rpcErrorContext !== undefined ? { transactionErrorContext: rpcErrorContext } : null),\n                    };\n                } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION) {\n                    return {\n                        index: rpcErrorContext as number,\n                    };\n                } else if (\n                    errorCode === SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT ||\n                    errorCode === SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED\n                ) {\n                    return {\n                        accountIndex: (rpcErrorContext as { account_index: number }).account_index,\n                    };\n                }\n            },\n            orderedErrorNames: ORDERED_ERROR_NAMES,\n            rpcEnumError: transactionError,\n        },\n        getSolanaErrorFromTransactionError,\n    );\n}\n","import {\n    SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR,\n    SOLANA_ERROR__JSON_RPC__INVALID_PARAMS,\n    SOLANA_ERROR__JSON_RPC__INVALID_REQUEST,\n    SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND,\n    SOLANA_ERROR__JSON_RPC__PARSE_ERROR,\n    SOLANA_ERROR__JSON_RPC__SCAN_ERROR,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE,\n    SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION,\n    SolanaErrorCode,\n} from './codes';\nimport { SolanaErrorContext } from './context';\nimport { SolanaError } from './error';\nimport { safeCaptureStackTrace } from './stack-trace';\nimport { getSolanaErrorFromTransactionError } from './transaction-error';\n\ninterface RpcErrorResponse {\n    code: number;\n    data?: unknown;\n    message: string;\n}\n\ntype TransactionError = string | { [key: string]: unknown };\n\n// Keep in sync with https://github.com/anza-xyz/agave/blob/master/rpc-client-api/src/response.rs\nexport interface RpcSimulateTransactionResult {\n    accounts:\n        | ({\n              data:\n                  | string // LegacyBinary\n                  | {\n                        // Json\n                        parsed: unknown;\n                        program: string;\n                        space: number;\n                    }\n                  // Binary\n                  | [encodedBytes: string, encoding: 'base58' | 'base64' | 'base64+zstd' | 'binary' | 'jsonParsed'];\n              executable: boolean;\n              lamports: number;\n              owner: string;\n              rentEpoch: number;\n              space?: number;\n          } | null)[]\n        | null;\n    err: TransactionError | null;\n    // Enabled by `enable_cpi_recording`\n    innerInstructions?:\n        | {\n              index: number;\n              instructions: (\n                  | {\n                        // Compiled\n                        accounts: number[];\n                        data: string;\n                        programIdIndex: number;\n                        stackHeight?: number;\n                    }\n                  | {\n                        // Parsed\n                        parsed: unknown;\n                        program: string;\n                        programId: string;\n                        stackHeight?: number;\n                    }\n                  | {\n                        // PartiallyDecoded\n                        accounts: string[];\n                        data: string;\n                        programId: string;\n                        stackHeight?: number;\n                    }\n              )[];\n          }[]\n        | null;\n    logs: string[] | null;\n    returnData: {\n        data: [string, 'base64'];\n        programId: string;\n    } | null;\n    unitsConsumed: number | null;\n}\n\nexport function getSolanaErrorFromJsonRpcError({ code, data, message }: RpcErrorResponse): SolanaError {\n    let out: SolanaError;\n    if (code === SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE) {\n        const { err, ...preflightErrorContext } = data as RpcSimulateTransactionResult;\n        const causeObject = err ? { cause: getSolanaErrorFromTransactionError(err) } : null;\n        out = new SolanaError(SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, {\n            ...preflightErrorContext,\n            ...causeObject,\n        });\n    } else {\n        let errorContext;\n        switch (code) {\n            case SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR:\n            case SOLANA_ERROR__JSON_RPC__INVALID_PARAMS:\n            case SOLANA_ERROR__JSON_RPC__INVALID_REQUEST:\n            case SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND:\n            case SOLANA_ERROR__JSON_RPC__PARSE_ERROR:\n            case SOLANA_ERROR__JSON_RPC__SCAN_ERROR:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:\n            case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:\n                // The server supplies no structured data, but rather a pre-formatted message. Put\n                // the server message in `context` so as not to completely lose the data. The long\n                // term fix for this is to add data to the server responses and modify the\n                // messages in `@solana/errors` to be actual format strings.\n                errorContext = { __serverMessage: message };\n                break;\n            default:\n                if (typeof data === 'object' && !Array.isArray(data)) {\n                    errorContext = data;\n                }\n        }\n        out = new SolanaError(code as SolanaErrorCode, errorContext as SolanaErrorContext[SolanaErrorCode]);\n    }\n    safeCaptureStackTrace(out, getSolanaErrorFromJsonRpcError);\n    return out;\n}\n"],"names":["isSolanaError","ORDERED_ERROR_NAMES"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9],"debugId":null}},
    {"offset": {"line": 4357, "column": 0}, "map": {"version":3,"file":"index.node.mjs","sources":["file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/bytes.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/codec.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/combine-codec.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/add-codec-sentinel.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/assertions.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/add-codec-size-prefix.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/fix-codec-size.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/offset-codec.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/resize-codec.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/pad-codec.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/reverse-codec.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-core%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-core/src/transform-codec.ts"],"sourcesContent":["import { ReadonlyUint8Array } from './readonly-uint8array';\n\n/**\n * Concatenates an array of `Uint8Array`s into a single `Uint8Array`.\n * Reuses the original byte array when applicable.\n */\nexport const mergeBytes = (byteArrays: Uint8Array[]): Uint8Array => {\n    const nonEmptyByteArrays = byteArrays.filter(arr => arr.length);\n    if (nonEmptyByteArrays.length === 0) {\n        return byteArrays.length ? byteArrays[0] : new Uint8Array();\n    }\n\n    if (nonEmptyByteArrays.length === 1) {\n        return nonEmptyByteArrays[0];\n    }\n\n    const totalLength = nonEmptyByteArrays.reduce((total, arr) => total + arr.length, 0);\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    nonEmptyByteArrays.forEach(arr => {\n        result.set(arr, offset);\n        offset += arr.length;\n    });\n    return result;\n};\n\n/**\n * Pads a `Uint8Array` with zeroes to the specified length.\n * If the array is longer than the specified length, it is returned as-is.\n */\nexport const padBytes = (bytes: ReadonlyUint8Array | Uint8Array, length: number): ReadonlyUint8Array | Uint8Array => {\n    if (bytes.length >= length) return bytes;\n    const paddedBytes = new Uint8Array(length).fill(0);\n    paddedBytes.set(bytes);\n    return paddedBytes;\n};\n\n/**\n * Fixes a `Uint8Array` to the specified length.\n * If the array is longer than the specified length, it is truncated.\n * If the array is shorter than the specified length, it is padded with zeroes.\n */\nexport const fixBytes = (bytes: ReadonlyUint8Array | Uint8Array, length: number): ReadonlyUint8Array | Uint8Array =>\n    padBytes(bytes.length <= length ? bytes : bytes.slice(0, length), length);\n\n/**\n * Returns true if and only if the provided `data` byte array contains\n * the provided `bytes` byte array at the specified `offset`.\n */\nexport function containsBytes(\n    data: ReadonlyUint8Array | Uint8Array,\n    bytes: ReadonlyUint8Array | Uint8Array,\n    offset: number,\n): boolean {\n    const slice = offset === 0 && data.length === bytes.length ? data : data.slice(offset, offset + bytes.length);\n    if (slice.length !== bytes.length) return false;\n    return bytes.every((b, i) => b === slice[i]);\n}\n","import {\n    SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH,\n    SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH,\n    SolanaError,\n} from '@solana/errors';\n\nimport { ReadonlyUint8Array } from './readonly-uint8array';\n\n/**\n * Defines an offset in bytes.\n */\nexport type Offset = number;\n\ntype BaseEncoder<TFrom> = {\n    /** Encode the provided value and return the encoded bytes directly. */\n    readonly encode: (value: TFrom) => ReadonlyUint8Array;\n    /**\n     * Writes the encoded value into the provided byte array at the given offset.\n     * Returns the offset of the next byte after the encoded value.\n     */\n    readonly write: (value: TFrom, bytes: Uint8Array, offset: Offset) => Offset;\n};\n\nexport type FixedSizeEncoder<TFrom, TSize extends number = number> = BaseEncoder<TFrom> & {\n    /** The fixed size of the encoded value in bytes. */\n    readonly fixedSize: TSize;\n};\n\nexport type VariableSizeEncoder<TFrom> = BaseEncoder<TFrom> & {\n    /** The total size of the encoded value in bytes. */\n    readonly getSizeFromValue: (value: TFrom) => number;\n    /** The maximum size an encoded value can be in bytes, if applicable. */\n    readonly maxSize?: number;\n};\n\n/**\n * An object that can encode a value to a `Uint8Array`.\n */\nexport type Encoder<TFrom> = FixedSizeEncoder<TFrom> | VariableSizeEncoder<TFrom>;\n\ntype BaseDecoder<TTo> = {\n    /** Decodes the provided byte array at the given offset (or zero) and returns the value directly. */\n    readonly decode: (bytes: ReadonlyUint8Array | Uint8Array, offset?: Offset) => TTo;\n    /**\n     * Reads the encoded value from the provided byte array at the given offset.\n     * Returns the decoded value and the offset of the next byte after the encoded value.\n     */\n    readonly read: (bytes: ReadonlyUint8Array | Uint8Array, offset: Offset) => [TTo, Offset];\n};\n\nexport type FixedSizeDecoder<TTo, TSize extends number = number> = BaseDecoder<TTo> & {\n    /** The fixed size of the encoded value in bytes. */\n    readonly fixedSize: TSize;\n};\n\nexport type VariableSizeDecoder<TTo> = BaseDecoder<TTo> & {\n    /** The maximum size an encoded value can be in bytes, if applicable. */\n    readonly maxSize?: number;\n};\n\n/**\n * An object that can decode a value from a `Uint8Array`.\n */\nexport type Decoder<TTo> = FixedSizeDecoder<TTo> | VariableSizeDecoder<TTo>;\n\nexport type FixedSizeCodec<TFrom, TTo extends TFrom = TFrom, TSize extends number = number> = FixedSizeDecoder<\n    TTo,\n    TSize\n> &\n    FixedSizeEncoder<TFrom, TSize>;\n\nexport type VariableSizeCodec<TFrom, TTo extends TFrom = TFrom> = VariableSizeDecoder<TTo> & VariableSizeEncoder<TFrom>;\n\n/**\n * An object that can encode and decode a value to and from a `Uint8Array`.\n * It supports encoding looser types than it decodes for convenience.\n * For example, a `bigint` encoder will always decode to a `bigint`\n * but can be used to encode a `number`.\n *\n * @typeParam TFrom - The type of the value to encode.\n * @typeParam TTo - The type of the decoded value. Defaults to `TFrom`.\n */\nexport type Codec<TFrom, TTo extends TFrom = TFrom> = FixedSizeCodec<TFrom, TTo> | VariableSizeCodec<TFrom, TTo>;\n\n/**\n * Get the encoded size of a given value in bytes.\n */\nexport function getEncodedSize<TFrom>(\n    value: TFrom,\n    encoder: { fixedSize: number } | { getSizeFromValue: (value: TFrom) => number },\n): number {\n    return 'fixedSize' in encoder ? encoder.fixedSize : encoder.getSizeFromValue(value);\n}\n\n/** Fills the missing `encode` function using the existing `write` function. */\nexport function createEncoder<TFrom, TSize extends number>(\n    encoder: Omit<FixedSizeEncoder<TFrom, TSize>, 'encode'>,\n): FixedSizeEncoder<TFrom, TSize>;\nexport function createEncoder<TFrom>(encoder: Omit<VariableSizeEncoder<TFrom>, 'encode'>): VariableSizeEncoder<TFrom>;\nexport function createEncoder<TFrom>(\n    encoder: Omit<FixedSizeEncoder<TFrom>, 'encode'> | Omit<VariableSizeEncoder<TFrom>, 'encode'>,\n): Encoder<TFrom>;\nexport function createEncoder<TFrom>(\n    encoder: Omit<FixedSizeEncoder<TFrom>, 'encode'> | Omit<VariableSizeEncoder<TFrom>, 'encode'>,\n): Encoder<TFrom> {\n    return Object.freeze({\n        ...encoder,\n        encode: value => {\n            const bytes = new Uint8Array(getEncodedSize(value, encoder));\n            encoder.write(value, bytes, 0);\n            return bytes;\n        },\n    });\n}\n\n/** Fills the missing `decode` function using the existing `read` function. */\nexport function createDecoder<TTo, TSize extends number>(\n    decoder: Omit<FixedSizeDecoder<TTo, TSize>, 'decode'>,\n): FixedSizeDecoder<TTo, TSize>;\nexport function createDecoder<TTo>(decoder: Omit<VariableSizeDecoder<TTo>, 'decode'>): VariableSizeDecoder<TTo>;\nexport function createDecoder<TTo>(\n    decoder: Omit<FixedSizeDecoder<TTo>, 'decode'> | Omit<VariableSizeDecoder<TTo>, 'decode'>,\n): Decoder<TTo>;\nexport function createDecoder<TTo>(\n    decoder: Omit<FixedSizeDecoder<TTo>, 'decode'> | Omit<VariableSizeDecoder<TTo>, 'decode'>,\n): Decoder<TTo> {\n    return Object.freeze({\n        ...decoder,\n        decode: (bytes, offset = 0) => decoder.read(bytes, offset)[0],\n    });\n}\n\n/** Fills the missing `encode` and `decode` function using the existing `write` and `read` functions. */\nexport function createCodec<TFrom, TTo extends TFrom = TFrom, TSize extends number = number>(\n    codec: Omit<FixedSizeCodec<TFrom, TTo, TSize>, 'decode' | 'encode'>,\n): FixedSizeCodec<TFrom, TTo, TSize>;\nexport function createCodec<TFrom, TTo extends TFrom = TFrom>(\n    codec: Omit<VariableSizeCodec<TFrom, TTo>, 'decode' | 'encode'>,\n): VariableSizeCodec<TFrom, TTo>;\nexport function createCodec<TFrom, TTo extends TFrom = TFrom>(\n    codec:\n        | Omit<FixedSizeCodec<TFrom, TTo>, 'decode' | 'encode'>\n        | Omit<VariableSizeCodec<TFrom, TTo>, 'decode' | 'encode'>,\n): Codec<TFrom, TTo>;\nexport function createCodec<TFrom, TTo extends TFrom = TFrom>(\n    codec:\n        | Omit<FixedSizeCodec<TFrom, TTo>, 'decode' | 'encode'>\n        | Omit<VariableSizeCodec<TFrom, TTo>, 'decode' | 'encode'>,\n): Codec<TFrom, TTo> {\n    return Object.freeze({\n        ...codec,\n        decode: (bytes, offset = 0) => codec.read(bytes, offset)[0],\n        encode: value => {\n            const bytes = new Uint8Array(getEncodedSize(value, codec));\n            codec.write(value, bytes, 0);\n            return bytes;\n        },\n    });\n}\n\nexport function isFixedSize<TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize> | VariableSizeEncoder<TFrom>,\n): encoder is FixedSizeEncoder<TFrom, TSize>;\nexport function isFixedSize<TTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TTo, TSize> | VariableSizeDecoder<TTo>,\n): decoder is FixedSizeDecoder<TTo, TSize>;\nexport function isFixedSize<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize> | VariableSizeCodec<TFrom, TTo>,\n): codec is FixedSizeCodec<TFrom, TTo, TSize>;\nexport function isFixedSize<TSize extends number>(\n    codec: { fixedSize: TSize } | { maxSize?: number },\n): codec is { fixedSize: TSize };\nexport function isFixedSize(codec: { fixedSize: number } | { maxSize?: number }): codec is { fixedSize: number } {\n    return 'fixedSize' in codec && typeof codec.fixedSize === 'number';\n}\n\nexport function assertIsFixedSize<TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize> | VariableSizeEncoder<TFrom>,\n): asserts encoder is FixedSizeEncoder<TFrom, TSize>;\nexport function assertIsFixedSize<TTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TTo, TSize> | VariableSizeDecoder<TTo>,\n): asserts decoder is FixedSizeDecoder<TTo, TSize>;\nexport function assertIsFixedSize<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize> | VariableSizeCodec<TFrom, TTo>,\n): asserts codec is FixedSizeCodec<TFrom, TTo, TSize>;\nexport function assertIsFixedSize<TSize extends number>(\n    codec: { fixedSize: TSize } | { maxSize?: number },\n): asserts codec is { fixedSize: TSize };\nexport function assertIsFixedSize(\n    codec: { fixedSize: number } | { maxSize?: number },\n): asserts codec is { fixedSize: number } {\n    if (!isFixedSize(codec)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH);\n    }\n}\n\nexport function isVariableSize<TFrom>(encoder: Encoder<TFrom>): encoder is VariableSizeEncoder<TFrom>;\nexport function isVariableSize<TTo>(decoder: Decoder<TTo>): decoder is VariableSizeDecoder<TTo>;\nexport function isVariableSize<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n): codec is VariableSizeCodec<TFrom, TTo>;\nexport function isVariableSize(codec: { fixedSize: number } | { maxSize?: number }): codec is { maxSize?: number };\nexport function isVariableSize(codec: { fixedSize: number } | { maxSize?: number }): codec is { maxSize?: number } {\n    return !isFixedSize(codec);\n}\n\nexport function assertIsVariableSize<T>(encoder: Encoder<T>): asserts encoder is VariableSizeEncoder<T>;\nexport function assertIsVariableSize<T>(decoder: Decoder<T>): asserts decoder is VariableSizeDecoder<T>;\nexport function assertIsVariableSize<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n): asserts codec is VariableSizeCodec<TFrom, TTo>;\nexport function assertIsVariableSize(\n    codec: { fixedSize: number } | { maxSize?: number },\n): asserts codec is { maxSize?: number };\nexport function assertIsVariableSize(\n    codec: { fixedSize: number } | { maxSize?: number },\n): asserts codec is { maxSize?: number } {\n    if (!isVariableSize(codec)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH);\n    }\n}\n","import {\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH,\n    SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH,\n    SolanaError,\n} from '@solana/errors';\n\nimport {\n    Codec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isFixedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from './codec';\n\n/**\n * Combines an encoder and a decoder into a codec.\n * The encoder and decoder must have the same fixed size, max size and description.\n * If a description is provided, it will override the encoder and decoder descriptions.\n */\nexport function combineCodec<TFrom, TTo extends TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize>,\n    decoder: FixedSizeDecoder<TTo, TSize>,\n): FixedSizeCodec<TFrom, TTo, TSize>;\nexport function combineCodec<TFrom, TTo extends TFrom>(\n    encoder: VariableSizeEncoder<TFrom>,\n    decoder: VariableSizeDecoder<TTo>,\n): VariableSizeCodec<TFrom, TTo>;\nexport function combineCodec<TFrom, TTo extends TFrom>(\n    encoder: Encoder<TFrom>,\n    decoder: Decoder<TTo>,\n): Codec<TFrom, TTo>;\nexport function combineCodec<TFrom, TTo extends TFrom>(\n    encoder: Encoder<TFrom>,\n    decoder: Decoder<TTo>,\n): Codec<TFrom, TTo> {\n    if (isFixedSize(encoder) !== isFixedSize(decoder)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH);\n    }\n\n    if (isFixedSize(encoder) && isFixedSize(decoder) && encoder.fixedSize !== decoder.fixedSize) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, {\n            decoderFixedSize: decoder.fixedSize,\n            encoderFixedSize: encoder.fixedSize,\n        });\n    }\n\n    if (!isFixedSize(encoder) && !isFixedSize(decoder) && encoder.maxSize !== decoder.maxSize) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, {\n            decoderMaxSize: decoder.maxSize,\n            encoderMaxSize: encoder.maxSize,\n        });\n    }\n\n    return {\n        ...decoder,\n        ...encoder,\n        decode: decoder.decode,\n        encode: encoder.encode,\n        read: decoder.read,\n        write: encoder.write,\n    };\n}\n","import {\n    SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL,\n    SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES,\n    SolanaError,\n} from '@solana/errors';\n\nimport { containsBytes } from './bytes';\nimport {\n    Codec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isFixedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from './codec';\nimport { combineCodec } from './combine-codec';\nimport { ReadonlyUint8Array } from './readonly-uint8array';\n\n/**\n * Creates an encoder that writes a `Uint8Array` sentinel after the encoded value.\n * This is useful to delimit the encoded value when being read by a decoder.\n *\n * Note that, if the sentinel is found in the encoded value, an error is thrown.\n */\nexport function addEncoderSentinel<TFrom>(\n    encoder: FixedSizeEncoder<TFrom>,\n    sentinel: ReadonlyUint8Array,\n): FixedSizeEncoder<TFrom>;\nexport function addEncoderSentinel<TFrom>(\n    encoder: Encoder<TFrom>,\n    sentinel: ReadonlyUint8Array,\n): VariableSizeEncoder<TFrom>;\nexport function addEncoderSentinel<TFrom>(encoder: Encoder<TFrom>, sentinel: ReadonlyUint8Array): Encoder<TFrom> {\n    const write = ((value, bytes, offset) => {\n        // Here we exceptionally use the `encode` function instead of the `write`\n        // function to contain the content of the encoder within its own bounds\n        // and to avoid writing the sentinel as part of the encoded value.\n        const encoderBytes = encoder.encode(value);\n        if (findSentinelIndex(encoderBytes, sentinel) >= 0) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, {\n                encodedBytes: encoderBytes,\n                hexEncodedBytes: hexBytes(encoderBytes),\n                hexSentinel: hexBytes(sentinel),\n                sentinel,\n            });\n        }\n        bytes.set(encoderBytes, offset);\n        offset += encoderBytes.length;\n        bytes.set(sentinel, offset);\n        offset += sentinel.length;\n        return offset;\n    }) as Encoder<TFrom>['write'];\n\n    if (isFixedSize(encoder)) {\n        return createEncoder({ ...encoder, fixedSize: encoder.fixedSize + sentinel.length, write });\n    }\n\n    return createEncoder({\n        ...encoder,\n        ...(encoder.maxSize != null ? { maxSize: encoder.maxSize + sentinel.length } : {}),\n        getSizeFromValue: value => encoder.getSizeFromValue(value) + sentinel.length,\n        write,\n    });\n}\n\n/**\n * Creates a decoder that continues reading until a `Uint8Array` sentinel is found.\n *\n * If the sentinel is not found in the byte array to decode, an error is thrown.\n */\nexport function addDecoderSentinel<TTo>(\n    decoder: FixedSizeDecoder<TTo>,\n    sentinel: ReadonlyUint8Array,\n): FixedSizeDecoder<TTo>;\nexport function addDecoderSentinel<TTo>(decoder: Decoder<TTo>, sentinel: ReadonlyUint8Array): VariableSizeDecoder<TTo>;\nexport function addDecoderSentinel<TTo>(decoder: Decoder<TTo>, sentinel: ReadonlyUint8Array): Decoder<TTo> {\n    const read = ((bytes, offset) => {\n        const candidateBytes = offset === 0 ? bytes : bytes.slice(offset);\n        const sentinelIndex = findSentinelIndex(candidateBytes, sentinel);\n        if (sentinelIndex === -1) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, {\n                decodedBytes: candidateBytes,\n                hexDecodedBytes: hexBytes(candidateBytes),\n                hexSentinel: hexBytes(sentinel),\n                sentinel,\n            });\n        }\n        const preSentinelBytes = candidateBytes.slice(0, sentinelIndex);\n        // Here we exceptionally use the `decode` function instead of the `read`\n        // function to contain the content of the decoder within its own bounds\n        // and ensure that the sentinel is not part of the decoded value.\n        return [decoder.decode(preSentinelBytes), offset + preSentinelBytes.length + sentinel.length];\n    }) as Decoder<TTo>['read'];\n\n    if (isFixedSize(decoder)) {\n        return createDecoder({ ...decoder, fixedSize: decoder.fixedSize + sentinel.length, read });\n    }\n\n    return createDecoder({\n        ...decoder,\n        ...(decoder.maxSize != null ? { maxSize: decoder.maxSize + sentinel.length } : {}),\n        read,\n    });\n}\n\n/**\n * Creates a Codec that writes a `Uint8Array` sentinel after the encoded\n * value and, when decoding, continues reading until the sentinel is found.\n *\n * Note that, if the sentinel is found in the encoded value\n * or not found in the byte array to decode, an error is thrown.\n */\nexport function addCodecSentinel<TFrom, TTo extends TFrom>(\n    codec: FixedSizeCodec<TFrom, TTo>,\n    sentinel: ReadonlyUint8Array,\n): FixedSizeCodec<TFrom, TTo>;\nexport function addCodecSentinel<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    sentinel: ReadonlyUint8Array,\n): VariableSizeCodec<TFrom, TTo>;\nexport function addCodecSentinel<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    sentinel: ReadonlyUint8Array,\n): Codec<TFrom, TTo> {\n    return combineCodec(addEncoderSentinel(codec, sentinel), addDecoderSentinel(codec, sentinel));\n}\n\nfunction findSentinelIndex(bytes: ReadonlyUint8Array, sentinel: ReadonlyUint8Array) {\n    return bytes.findIndex((byte, index, arr) => {\n        if (sentinel.length === 1) return byte === sentinel[0];\n        return containsBytes(arr, sentinel, index);\n    });\n}\n\nfunction hexBytes(bytes: ReadonlyUint8Array): string {\n    return bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n}\n","import {\n    SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY,\n    SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH,\n    SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE,\n    SolanaError,\n} from '@solana/errors';\n\nimport { ReadonlyUint8Array } from './readonly-uint8array';\n\n/**\n * Asserts that a given byte array is not empty.\n */\nexport function assertByteArrayIsNotEmptyForCodec(\n    codecDescription: string,\n    bytes: ReadonlyUint8Array | Uint8Array,\n    offset = 0,\n) {\n    if (bytes.length - offset <= 0) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, {\n            codecDescription,\n        });\n    }\n}\n\n/**\n * Asserts that a given byte array has enough bytes to decode.\n */\nexport function assertByteArrayHasEnoughBytesForCodec(\n    codecDescription: string,\n    expected: number,\n    bytes: ReadonlyUint8Array | Uint8Array,\n    offset = 0,\n) {\n    const bytesLength = bytes.length - offset;\n    if (bytesLength < expected) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, {\n            bytesLength,\n            codecDescription,\n            expected,\n        });\n    }\n}\n\n/**\n * Asserts that a given offset is within the byte array bounds.\n * This range is between 0 and the byte array length and is inclusive.\n * An offset equals to the byte array length is considered a valid offset\n * as it allows the post-offset of codecs to signal the end of the byte array.\n */\nexport function assertByteArrayOffsetIsNotOutOfRange(codecDescription: string, offset: number, bytesLength: number) {\n    if (offset < 0 || offset > bytesLength) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, {\n            bytesLength,\n            codecDescription,\n            offset,\n        });\n    }\n}\n","import { assertByteArrayHasEnoughBytesForCodec } from './assertions';\nimport {\n    Codec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    getEncodedSize,\n    isFixedSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from './codec';\nimport { combineCodec } from './combine-codec';\n\ntype NumberEncoder = Encoder<bigint | number> | Encoder<number>;\ntype FixedSizeNumberEncoder<TSize extends number = number> =\n    | FixedSizeEncoder<bigint | number, TSize>\n    | FixedSizeEncoder<number, TSize>;\ntype NumberDecoder = Decoder<bigint> | Decoder<number>;\ntype FixedSizeNumberDecoder<TSize extends number = number> =\n    | FixedSizeDecoder<bigint, TSize>\n    | FixedSizeDecoder<number, TSize>;\ntype NumberCodec = Codec<bigint | number, bigint> | Codec<number>;\ntype FixedSizeNumberCodec<TSize extends number = number> =\n    | FixedSizeCodec<bigint | number, bigint, TSize>\n    | FixedSizeCodec<number, number, TSize>;\n\n/**\n * Stores the size of the `encoder` in bytes as a prefix using the `prefix` encoder.\n */\nexport function addEncoderSizePrefix<TFrom>(\n    encoder: FixedSizeEncoder<TFrom>,\n    prefix: FixedSizeNumberEncoder,\n): FixedSizeEncoder<TFrom>;\nexport function addEncoderSizePrefix<TFrom>(encoder: Encoder<TFrom>, prefix: NumberEncoder): VariableSizeEncoder<TFrom>;\nexport function addEncoderSizePrefix<TFrom>(encoder: Encoder<TFrom>, prefix: NumberEncoder): Encoder<TFrom> {\n    const write = ((value, bytes, offset) => {\n        // Here we exceptionally use the `encode` function instead of the `write`\n        // function to contain the content of the encoder within its own bounds.\n        const encoderBytes = encoder.encode(value);\n        offset = prefix.write(encoderBytes.length, bytes, offset);\n        bytes.set(encoderBytes, offset);\n        return offset + encoderBytes.length;\n    }) as Encoder<TFrom>['write'];\n\n    if (isFixedSize(prefix) && isFixedSize(encoder)) {\n        return createEncoder({ ...encoder, fixedSize: prefix.fixedSize + encoder.fixedSize, write });\n    }\n\n    const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : (prefix.maxSize ?? null);\n    const encoderMaxSize = isFixedSize(encoder) ? encoder.fixedSize : (encoder.maxSize ?? null);\n    const maxSize = prefixMaxSize !== null && encoderMaxSize !== null ? prefixMaxSize + encoderMaxSize : null;\n\n    return createEncoder({\n        ...encoder,\n        ...(maxSize !== null ? { maxSize } : {}),\n        getSizeFromValue: value => {\n            const encoderSize = getEncodedSize(value, encoder);\n            return getEncodedSize(encoderSize, prefix) + encoderSize;\n        },\n        write,\n    });\n}\n\n/**\n * Bounds the size of the `decoder` by reading the `prefix` encoder prefix.\n */\nexport function addDecoderSizePrefix<TTo>(\n    decoder: FixedSizeDecoder<TTo>,\n    prefix: FixedSizeNumberDecoder,\n): FixedSizeDecoder<TTo>;\nexport function addDecoderSizePrefix<TTo>(decoder: Decoder<TTo>, prefix: NumberDecoder): VariableSizeDecoder<TTo>;\nexport function addDecoderSizePrefix<TTo>(decoder: Decoder<TTo>, prefix: NumberDecoder): Decoder<TTo> {\n    const read = ((bytes, offset) => {\n        const [bigintSize, decoderOffset] = prefix.read(bytes, offset);\n        const size = Number(bigintSize);\n        offset = decoderOffset;\n        // Slice the byte array to the contained size if necessary.\n        if (offset > 0 || bytes.length > size) {\n            bytes = bytes.slice(offset, offset + size);\n        }\n        assertByteArrayHasEnoughBytesForCodec('addDecoderSizePrefix', size, bytes);\n        // Here we exceptionally use the `decode` function instead of the `read`\n        // function to contain the content of the decoder within its own bounds.\n        return [decoder.decode(bytes), offset + size];\n    }) as Decoder<TTo>['read'];\n\n    if (isFixedSize(prefix) && isFixedSize(decoder)) {\n        return createDecoder({ ...decoder, fixedSize: prefix.fixedSize + decoder.fixedSize, read });\n    }\n\n    const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : (prefix.maxSize ?? null);\n    const decoderMaxSize = isFixedSize(decoder) ? decoder.fixedSize : (decoder.maxSize ?? null);\n    const maxSize = prefixMaxSize !== null && decoderMaxSize !== null ? prefixMaxSize + decoderMaxSize : null;\n    return createDecoder({ ...decoder, ...(maxSize !== null ? { maxSize } : {}), read });\n}\n\n/**\n * Bounds the size of the `codec` using the provided `prefix` codec prefix.\n */\nexport function addCodecSizePrefix<TFrom, TTo extends TFrom>(\n    codec: FixedSizeCodec<TFrom, TTo>,\n    prefix: FixedSizeNumberCodec,\n): FixedSizeCodec<TFrom, TTo>;\nexport function addCodecSizePrefix<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    prefix: NumberCodec,\n): VariableSizeCodec<TFrom, TTo>;\nexport function addCodecSizePrefix<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    prefix: NumberCodec,\n): Codec<TFrom, TTo> {\n    return combineCodec(addEncoderSizePrefix(codec, prefix), addDecoderSizePrefix(codec, prefix));\n}\n","import { assertByteArrayHasEnoughBytesForCodec } from './assertions';\nimport { fixBytes } from './bytes';\nimport {\n    Codec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isFixedSize,\n    Offset,\n} from './codec';\nimport { combineCodec } from './combine-codec';\n\n/**\n * Creates a fixed-size encoder from a given encoder.\n *\n * @param encoder - The encoder to wrap into a fixed-size encoder.\n * @param fixedBytes - The fixed number of bytes to write.\n */\nexport function fixEncoderSize<TFrom, TSize extends number>(\n    encoder: Encoder<TFrom>,\n    fixedBytes: TSize,\n): FixedSizeEncoder<TFrom, TSize> {\n    return createEncoder({\n        fixedSize: fixedBytes,\n        write: (value: TFrom, bytes: Uint8Array, offset: Offset) => {\n            // Here we exceptionally use the `encode` function instead of the `write`\n            // function as using the nested `write` function on a fixed-sized byte\n            // array may result in a out-of-bounds error on the nested encoder.\n            const variableByteArray = encoder.encode(value);\n            const fixedByteArray =\n                variableByteArray.length > fixedBytes ? variableByteArray.slice(0, fixedBytes) : variableByteArray;\n            bytes.set(fixedByteArray, offset);\n            return offset + fixedBytes;\n        },\n    });\n}\n\n/**\n * Creates a fixed-size decoder from a given decoder.\n *\n * @param decoder - The decoder to wrap into a fixed-size decoder.\n * @param fixedBytes - The fixed number of bytes to read.\n */\nexport function fixDecoderSize<TTo, TSize extends number>(\n    decoder: Decoder<TTo>,\n    fixedBytes: TSize,\n): FixedSizeDecoder<TTo, TSize> {\n    return createDecoder({\n        fixedSize: fixedBytes,\n        read: (bytes, offset) => {\n            assertByteArrayHasEnoughBytesForCodec('fixCodecSize', fixedBytes, bytes, offset);\n            // Slice the byte array to the fixed size if necessary.\n            if (offset > 0 || bytes.length > fixedBytes) {\n                bytes = bytes.slice(offset, offset + fixedBytes);\n            }\n            // If the nested decoder is fixed-size, pad and truncate the byte array accordingly.\n            if (isFixedSize(decoder)) {\n                bytes = fixBytes(bytes, decoder.fixedSize);\n            }\n            // Decode the value using the nested decoder.\n            const [value] = decoder.read(bytes, 0);\n            return [value, offset + fixedBytes];\n        },\n    });\n}\n\n/**\n * Creates a fixed-size codec from a given codec.\n *\n * @param codec - The codec to wrap into a fixed-size codec.\n * @param fixedBytes - The fixed number of bytes to read/write.\n */\nexport function fixCodecSize<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: Codec<TFrom, TTo>,\n    fixedBytes: TSize,\n): FixedSizeCodec<TFrom, TTo, TSize> {\n    return combineCodec(fixEncoderSize(codec, fixedBytes), fixDecoderSize(codec, fixedBytes));\n}\n","import { assertByteArrayOffsetIsNotOutOfRange } from './assertions';\nimport { Codec, createDecoder, createEncoder, Decoder, Encoder, Offset } from './codec';\nimport { combineCodec } from './combine-codec';\nimport { ReadonlyUint8Array } from './readonly-uint8array';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyEncoder = Encoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyDecoder = Decoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyCodec = Codec<any>;\n\ntype OffsetConfig = {\n    postOffset?: PostOffsetFunction;\n    preOffset?: PreOffsetFunction;\n};\n\ntype PreOffsetFunctionScope = {\n    /** The entire byte array. */\n    bytes: ReadonlyUint8Array | Uint8Array;\n    /** The original offset prior to encode or decode. */\n    preOffset: Offset;\n    /** Wraps the offset to the byte array length. */\n    wrapBytes: (offset: Offset) => Offset;\n};\n\ntype PreOffsetFunction = (scope: PreOffsetFunctionScope) => Offset;\ntype PostOffsetFunction = (\n    scope: PreOffsetFunctionScope & {\n        /** The modified offset used to encode or decode. */\n        newPreOffset: Offset;\n        /** The original offset returned by the encoder or decoder. */\n        postOffset: Offset;\n    },\n) => Offset;\n\n/**\n * Moves the offset of a given encoder.\n */\nexport function offsetEncoder<TEncoder extends AnyEncoder>(encoder: TEncoder, config: OffsetConfig): TEncoder {\n    return createEncoder({\n        ...encoder,\n        write: (value, bytes, preOffset) => {\n            const wrapBytes = (offset: Offset) => modulo(offset, bytes.length);\n            const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetEncoder', newPreOffset, bytes.length);\n            const postOffset = encoder.write(value, bytes, newPreOffset);\n            const newPostOffset = config.postOffset\n                ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes })\n                : postOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetEncoder', newPostOffset, bytes.length);\n            return newPostOffset;\n        },\n    }) as TEncoder;\n}\n\n/**\n * Moves the offset of a given decoder.\n */\nexport function offsetDecoder<TDecoder extends AnyDecoder>(decoder: TDecoder, config: OffsetConfig): TDecoder {\n    return createDecoder({\n        ...decoder,\n        read: (bytes, preOffset) => {\n            const wrapBytes = (offset: Offset) => modulo(offset, bytes.length);\n            const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetDecoder', newPreOffset, bytes.length);\n            const [value, postOffset] = decoder.read(bytes, newPreOffset);\n            const newPostOffset = config.postOffset\n                ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes })\n                : postOffset;\n            assertByteArrayOffsetIsNotOutOfRange('offsetDecoder', newPostOffset, bytes.length);\n            return [value, newPostOffset];\n        },\n    }) as TDecoder;\n}\n\n/**\n * Moves the offset of a given codec.\n */\nexport function offsetCodec<TCodec extends AnyCodec>(codec: TCodec, config: OffsetConfig): TCodec {\n    return combineCodec(offsetEncoder(codec, config), offsetDecoder(codec, config)) as TCodec;\n}\n\n/** A modulo function that handles negative dividends and zero divisors. */\nfunction modulo(dividend: number, divisor: number) {\n    if (divisor === 0) return 0;\n    return ((dividend % divisor) + divisor) % divisor;\n}\n","import { SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SolanaError } from '@solana/errors';\n\nimport {\n    Codec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isFixedSize,\n} from './codec';\nimport { combineCodec } from './combine-codec';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyEncoder = Encoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyDecoder = Decoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyCodec = Codec<any>;\n\n/**\n * Updates the size of a given encoder.\n */\nexport function resizeEncoder<TFrom, TSize extends number, TNewSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize>,\n    resize: (size: TSize) => TNewSize,\n): FixedSizeEncoder<TFrom, TNewSize>;\nexport function resizeEncoder<TEncoder extends AnyEncoder>(\n    encoder: TEncoder,\n    resize: (size: number) => number,\n): TEncoder;\nexport function resizeEncoder<TEncoder extends AnyEncoder>(\n    encoder: TEncoder,\n    resize: (size: number) => number,\n): TEncoder {\n    if (isFixedSize(encoder)) {\n        const fixedSize = resize(encoder.fixedSize);\n        if (fixedSize < 0) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n                bytesLength: fixedSize,\n                codecDescription: 'resizeEncoder',\n            });\n        }\n        return createEncoder({ ...encoder, fixedSize }) as TEncoder;\n    }\n    return createEncoder({\n        ...encoder,\n        getSizeFromValue: value => {\n            const newSize = resize(encoder.getSizeFromValue(value));\n            if (newSize < 0) {\n                throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n                    bytesLength: newSize,\n                    codecDescription: 'resizeEncoder',\n                });\n            }\n            return newSize;\n        },\n    }) as TEncoder;\n}\n\n/**\n * Updates the size of a given decoder.\n */\n\nexport function resizeDecoder<TFrom, TSize extends number, TNewSize extends number>(\n    decoder: FixedSizeDecoder<TFrom, TSize>,\n    resize: (size: TSize) => TNewSize,\n): FixedSizeDecoder<TFrom, TNewSize>;\nexport function resizeDecoder<TDecoder extends AnyDecoder>(\n    decoder: TDecoder,\n    resize: (size: number) => number,\n): TDecoder;\nexport function resizeDecoder<TDecoder extends AnyDecoder>(\n    decoder: TDecoder,\n    resize: (size: number) => number,\n): TDecoder {\n    if (isFixedSize(decoder)) {\n        const fixedSize = resize(decoder.fixedSize);\n        if (fixedSize < 0) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n                bytesLength: fixedSize,\n                codecDescription: 'resizeDecoder',\n            });\n        }\n        return createDecoder({ ...decoder, fixedSize }) as TDecoder;\n    }\n    return decoder;\n}\n\n/**\n * Updates the size of a given codec.\n */\nexport function resizeCodec<TFrom, TTo extends TFrom, TSize extends number, TNewSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize>,\n    resize: (size: TSize) => TNewSize,\n): FixedSizeCodec<TFrom, TTo, TNewSize>;\nexport function resizeCodec<TCodec extends AnyCodec>(codec: TCodec, resize: (size: number) => number): TCodec;\nexport function resizeCodec<TCodec extends AnyCodec>(codec: TCodec, resize: (size: number) => number): TCodec {\n    return combineCodec(resizeEncoder(codec, resize), resizeDecoder(codec, resize)) as TCodec;\n}\n","import { Codec, Decoder, Encoder, Offset } from './codec';\nimport { combineCodec } from './combine-codec';\nimport { offsetDecoder, offsetEncoder } from './offset-codec';\nimport { resizeDecoder, resizeEncoder } from './resize-codec';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyEncoder = Encoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyDecoder = Decoder<any>;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyCodec = Codec<any>;\n\n/**\n * Adds left padding to the given encoder.\n */\nexport function padLeftEncoder<TEncoder extends AnyEncoder>(encoder: TEncoder, offset: Offset): TEncoder {\n    return offsetEncoder(\n        resizeEncoder(encoder, size => size + offset),\n        { preOffset: ({ preOffset }) => preOffset + offset },\n    );\n}\n\n/**\n * Adds right padding to the given encoder.\n */\nexport function padRightEncoder<TEncoder extends AnyEncoder>(encoder: TEncoder, offset: Offset): TEncoder {\n    return offsetEncoder(\n        resizeEncoder(encoder, size => size + offset),\n        { postOffset: ({ postOffset }) => postOffset + offset },\n    );\n}\n\n/**\n * Adds left padding to the given decoder.\n */\nexport function padLeftDecoder<TDecoder extends AnyDecoder>(decoder: TDecoder, offset: Offset): TDecoder {\n    return offsetDecoder(\n        resizeDecoder(decoder, size => size + offset),\n        { preOffset: ({ preOffset }) => preOffset + offset },\n    );\n}\n\n/**\n * Adds right padding to the given decoder.\n */\nexport function padRightDecoder<TDecoder extends AnyDecoder>(decoder: TDecoder, offset: Offset): TDecoder {\n    return offsetDecoder(\n        resizeDecoder(decoder, size => size + offset),\n        { postOffset: ({ postOffset }) => postOffset + offset },\n    );\n}\n\n/**\n * Adds left padding to the given codec.\n */\nexport function padLeftCodec<TCodec extends AnyCodec>(codec: TCodec, offset: Offset): TCodec {\n    return combineCodec(padLeftEncoder(codec, offset), padLeftDecoder(codec, offset)) as TCodec;\n}\n\n/**\n * Adds right padding to the given codec.\n */\nexport function padRightCodec<TCodec extends AnyCodec>(codec: TCodec, offset: Offset): TCodec {\n    return combineCodec(padRightEncoder(codec, offset), padRightDecoder(codec, offset)) as TCodec;\n}\n","import {\n    assertIsFixedSize,\n    createDecoder,\n    createEncoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n} from './codec';\nimport { combineCodec } from './combine-codec';\nimport { ReadonlyUint8Array } from './readonly-uint8array';\n\nfunction copySourceToTargetInReverse(\n    source: ReadonlyUint8Array,\n    target_WILL_MUTATE: Uint8Array,\n    sourceOffset: number,\n    sourceLength: number,\n    targetOffset: number = 0,\n) {\n    while (sourceOffset < --sourceLength) {\n        const leftValue = source[sourceOffset];\n        target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceLength];\n        target_WILL_MUTATE[sourceLength + targetOffset] = leftValue;\n        sourceOffset++;\n    }\n    if (sourceOffset === sourceLength) {\n        target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceOffset];\n    }\n}\n\n/**\n * Reverses the bytes of a fixed-size encoder.\n */\nexport function reverseEncoder<TFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TFrom, TSize>,\n): FixedSizeEncoder<TFrom, TSize> {\n    assertIsFixedSize(encoder);\n    return createEncoder({\n        ...encoder,\n        write: (value: TFrom, bytes, offset) => {\n            const newOffset = encoder.write(value, bytes, offset);\n            copySourceToTargetInReverse(\n                bytes /* source */,\n                bytes /* target_WILL_MUTATE */,\n                offset /* sourceOffset */,\n                offset + encoder.fixedSize /* sourceLength */,\n            );\n            return newOffset;\n        },\n    });\n}\n\n/**\n * Reverses the bytes of a fixed-size decoder.\n */\nexport function reverseDecoder<TTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TTo, TSize>,\n): FixedSizeDecoder<TTo, TSize> {\n    assertIsFixedSize(decoder);\n    return createDecoder({\n        ...decoder,\n        read: (bytes, offset) => {\n            const reversedBytes = bytes.slice();\n            copySourceToTargetInReverse(\n                bytes /* source */,\n                reversedBytes /* target_WILL_MUTATE */,\n                offset /* sourceOffset */,\n                offset + decoder.fixedSize /* sourceLength */,\n            );\n            return decoder.read(reversedBytes, offset);\n        },\n    });\n}\n\n/**\n * Reverses the bytes of a fixed-size codec.\n */\nexport function reverseCodec<TFrom, TTo extends TFrom, TSize extends number>(\n    codec: FixedSizeCodec<TFrom, TTo, TSize>,\n): FixedSizeCodec<TFrom, TTo, TSize> {\n    return combineCodec(reverseEncoder(codec), reverseDecoder(codec));\n}\n","import {\n    Codec,\n    createCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    isVariableSize,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from './codec';\nimport { ReadonlyUint8Array } from './readonly-uint8array';\n\n/**\n * Converts an encoder A to a encoder B by mapping their values.\n */\nexport function transformEncoder<TOldFrom, TNewFrom, TSize extends number>(\n    encoder: FixedSizeEncoder<TOldFrom, TSize>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): FixedSizeEncoder<TNewFrom, TSize>;\nexport function transformEncoder<TOldFrom, TNewFrom>(\n    encoder: VariableSizeEncoder<TOldFrom>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): VariableSizeEncoder<TNewFrom>;\nexport function transformEncoder<TOldFrom, TNewFrom>(\n    encoder: Encoder<TOldFrom>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): Encoder<TNewFrom>;\nexport function transformEncoder<TOldFrom, TNewFrom>(\n    encoder: Encoder<TOldFrom>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): Encoder<TNewFrom> {\n    return createEncoder({\n        ...(isVariableSize(encoder)\n            ? { ...encoder, getSizeFromValue: (value: TNewFrom) => encoder.getSizeFromValue(unmap(value)) }\n            : encoder),\n        write: (value: TNewFrom, bytes, offset) => encoder.write(unmap(value), bytes, offset),\n    });\n}\n\n/**\n * Converts an decoder A to a decoder B by mapping their values.\n */\nexport function transformDecoder<TOldTo, TNewTo, TSize extends number>(\n    decoder: FixedSizeDecoder<TOldTo, TSize>,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): FixedSizeDecoder<TNewTo, TSize>;\nexport function transformDecoder<TOldTo, TNewTo>(\n    decoder: VariableSizeDecoder<TOldTo>,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): VariableSizeDecoder<TNewTo>;\nexport function transformDecoder<TOldTo, TNewTo>(\n    decoder: Decoder<TOldTo>,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): Decoder<TNewTo>;\nexport function transformDecoder<TOldTo, TNewTo>(\n    decoder: Decoder<TOldTo>,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): Decoder<TNewTo> {\n    return createDecoder({\n        ...decoder,\n        read: (bytes: ReadonlyUint8Array | Uint8Array, offset) => {\n            const [value, newOffset] = decoder.read(bytes, offset);\n            return [map(value, bytes, offset), newOffset];\n        },\n    });\n}\n\n/**\n * Converts a codec A to a codec B by mapping their values.\n */\nexport function transformCodec<TOldFrom, TNewFrom, TTo extends TNewFrom & TOldFrom, TSize extends number>(\n    codec: FixedSizeCodec<TOldFrom, TTo, TSize>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): FixedSizeCodec<TNewFrom, TTo, TSize>;\nexport function transformCodec<TOldFrom, TNewFrom, TTo extends TNewFrom & TOldFrom>(\n    codec: VariableSizeCodec<TOldFrom, TTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): VariableSizeCodec<TNewFrom, TTo>;\nexport function transformCodec<TOldFrom, TNewFrom, TTo extends TNewFrom & TOldFrom>(\n    codec: Codec<TOldFrom, TTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n): Codec<TNewFrom, TTo>;\nexport function transformCodec<\n    TOldFrom,\n    TNewFrom,\n    TOldTo extends TOldFrom,\n    TNewTo extends TNewFrom,\n    TSize extends number,\n>(\n    codec: FixedSizeCodec<TOldFrom, TOldTo, TSize>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): FixedSizeCodec<TNewFrom, TNewTo, TSize>;\nexport function transformCodec<TOldFrom, TNewFrom, TOldTo extends TOldFrom, TNewTo extends TNewFrom>(\n    codec: VariableSizeCodec<TOldFrom, TOldTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): VariableSizeCodec<TNewFrom, TNewTo>;\nexport function transformCodec<TOldFrom, TNewFrom, TOldTo extends TOldFrom, TNewTo extends TNewFrom>(\n    codec: Codec<TOldFrom, TOldTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): Codec<TNewFrom, TNewTo>;\nexport function transformCodec<TOldFrom, TNewFrom, TOldTo extends TOldFrom, TNewTo extends TNewFrom>(\n    codec: Codec<TOldFrom, TOldTo>,\n    unmap: (value: TNewFrom) => TOldFrom,\n    map?: (value: TOldTo, bytes: ReadonlyUint8Array | Uint8Array, offset: number) => TNewTo,\n): Codec<TNewFrom, TNewTo> {\n    return createCodec({\n        ...transformEncoder(codec, unmap),\n        read: map ? transformDecoder(codec, map).read : (codec.read as unknown as Decoder<TNewTo>['read']),\n    });\n}\n"],"names":["SolanaError"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11],"debugId":null}},
    {"offset": {"line": 4917, "column": 0}, "map": {"version":3,"file":"index.node.mjs","sources":["file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/assertions.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/common.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/utils.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/f32.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/f64.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/i128.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/i16.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/i32.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/i64.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/i8.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/short-u16.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/u128.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/u16.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/u32.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/u64.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-numbers%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-numbers/src/u8.ts"],"sourcesContent":["import { SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, SolanaError } from '@solana/errors';\n\n/**\n * Asserts that a given number is between a given range.\n */\nexport function assertNumberIsBetweenForCodec(\n    codecDescription: string,\n    min: bigint | number,\n    max: bigint | number,\n    value: bigint | number,\n) {\n    if (value < min || value > max) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, {\n            codecDescription,\n            max,\n            min,\n            value,\n        });\n    }\n}\n","import { Codec, Decoder, Encoder, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\n/** Defines a encoder for numbers and bigints. */\nexport type NumberEncoder = Encoder<bigint | number>;\n\n/** Defines a fixed-size encoder for numbers and bigints. */\nexport type FixedSizeNumberEncoder<TSize extends number = number> = FixedSizeEncoder<bigint | number, TSize>;\n\n/** Defines a decoder for numbers and bigints. */\nexport type NumberDecoder = Decoder<bigint> | Decoder<number>;\n\n/** Defines a fixed-size decoder for numbers and bigints. */\nexport type FixedSizeNumberDecoder<TSize extends number = number> =\n    | FixedSizeDecoder<bigint, TSize>\n    | FixedSizeDecoder<number, TSize>;\n\n/** Defines a codec for numbers and bigints. */\nexport type NumberCodec = Codec<bigint | number, bigint> | Codec<bigint | number, number>;\n\n/** Defines a fixed-size codec for numbers and bigints. */\nexport type FixedSizeNumberCodec<TSize extends number = number> =\n    | FixedSizeCodec<bigint | number, bigint, TSize>\n    | FixedSizeCodec<bigint | number, number, TSize>;\n\n/** Defines the config for number codecs that use more than one byte. */\nexport type NumberCodecConfig = {\n    /**\n     * Whether the serializer should use little-endian or big-endian encoding.\n     * @defaultValue `Endian.Little`\n     */\n    endian?: Endian;\n};\n\n/** Defines the endianness of a number serializer. */\nexport enum Endian {\n    Little,\n    Big,\n}\n","import {\n    assertByteArrayHasEnoughBytesForCodec,\n    assertByteArrayIsNotEmptyForCodec,\n    createDecoder,\n    createEncoder,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    Offset,\n    ReadonlyUint8Array,\n} from '@solana/codecs-core';\n\nimport { assertNumberIsBetweenForCodec } from './assertions';\nimport { Endian, NumberCodecConfig } from './common';\n\ntype NumberFactorySharedInput<TSize extends number> = {\n    config?: NumberCodecConfig;\n    name: string;\n    size: TSize;\n};\n\ntype NumberFactoryEncoderInput<TFrom, TSize extends number> = NumberFactorySharedInput<TSize> & {\n    range?: [bigint | number, bigint | number];\n    set: (view: DataView, value: TFrom, littleEndian?: boolean) => void;\n};\n\ntype NumberFactoryDecoderInput<TTo, TSize extends number> = NumberFactorySharedInput<TSize> & {\n    get: (view: DataView, littleEndian?: boolean) => TTo;\n};\n\nfunction isLittleEndian(config?: NumberCodecConfig): boolean {\n    return config?.endian === Endian.Big ? false : true;\n}\n\nexport function numberEncoderFactory<TFrom extends bigint | number, TSize extends number>(\n    input: NumberFactoryEncoderInput<TFrom, TSize>,\n): FixedSizeEncoder<TFrom, TSize> {\n    return createEncoder({\n        fixedSize: input.size,\n        write(value: TFrom, bytes: Uint8Array, offset: Offset): Offset {\n            if (input.range) {\n                assertNumberIsBetweenForCodec(input.name, input.range[0], input.range[1], value);\n            }\n            const arrayBuffer = new ArrayBuffer(input.size);\n            input.set(new DataView(arrayBuffer), value, isLittleEndian(input.config));\n            bytes.set(new Uint8Array(arrayBuffer), offset);\n            return offset + input.size;\n        },\n    });\n}\n\nexport function numberDecoderFactory<TTo extends bigint | number, TSize extends number>(\n    input: NumberFactoryDecoderInput<TTo, TSize>,\n): FixedSizeDecoder<TTo, TSize> {\n    return createDecoder({\n        fixedSize: input.size,\n        read(bytes, offset = 0): [TTo, number] {\n            assertByteArrayIsNotEmptyForCodec(input.name, bytes, offset);\n            assertByteArrayHasEnoughBytesForCodec(input.name, input.size, bytes, offset);\n            const view = new DataView(toArrayBuffer(bytes, offset, input.size));\n            return [input.get(view, isLittleEndian(input.config)), offset + input.size];\n        },\n    });\n}\n\n/**\n * Helper function to ensure that the ArrayBuffer is converted properly from a Uint8Array\n * Source: https://stackoverflow.com/questions/37228285/uint8array-to-arraybuffer\n */\nfunction toArrayBuffer(bytes: ReadonlyUint8Array | Uint8Array, offset?: number, length?: number): ArrayBuffer {\n    const bytesOffset = bytes.byteOffset + (offset ?? 0);\n    const bytesLength = length ?? bytes.byteLength;\n    return bytes.buffer.slice(bytesOffset, bytesOffset + bytesLength);\n}\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getF32Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 4> =>\n    numberEncoderFactory({\n        config,\n        name: 'f32',\n        set: (view, value, le) => view.setFloat32(0, Number(value), le),\n        size: 4,\n    });\n\nexport const getF32Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 4> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getFloat32(0, le),\n        name: 'f32',\n        size: 4,\n    });\n\nexport const getF32Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 4> =>\n    combineCodec(getF32Encoder(config), getF32Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getF64Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 8> =>\n    numberEncoderFactory({\n        config,\n        name: 'f64',\n        set: (view, value, le) => view.setFloat64(0, Number(value), le),\n        size: 8,\n    });\n\nexport const getF64Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 8> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getFloat64(0, le),\n        name: 'f64',\n        size: 8,\n    });\n\nexport const getF64Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 8> =>\n    combineCodec(getF64Encoder(config), getF64Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getI128Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 16> =>\n    numberEncoderFactory({\n        config,\n        name: 'i128',\n        range: [-BigInt('0x7fffffffffffffffffffffffffffffff') - 1n, BigInt('0x7fffffffffffffffffffffffffffffff')],\n        set: (view, value, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const rightMask = 0xffffffffffffffffn;\n            view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n            view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n        },\n        size: 16,\n    });\n\nexport const getI128Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 16> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const left = view.getBigInt64(leftOffset, le);\n            const right = view.getBigUint64(rightOffset, le);\n            return (left << 64n) + right;\n        },\n        name: 'i128',\n        size: 16,\n    });\n\nexport const getI128Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 16> =>\n    combineCodec(getI128Encoder(config), getI128Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getI16Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 2> =>\n    numberEncoderFactory({\n        config,\n        name: 'i16',\n        range: [-Number('0x7fff') - 1, Number('0x7fff')],\n        set: (view, value, le) => view.setInt16(0, Number(value), le),\n        size: 2,\n    });\n\nexport const getI16Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 2> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getInt16(0, le),\n        name: 'i16',\n        size: 2,\n    });\n\nexport const getI16Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 2> =>\n    combineCodec(getI16Encoder(config), getI16Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getI32Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 4> =>\n    numberEncoderFactory({\n        config,\n        name: 'i32',\n        range: [-Number('0x7fffffff') - 1, Number('0x7fffffff')],\n        set: (view, value, le) => view.setInt32(0, Number(value), le),\n        size: 4,\n    });\n\nexport const getI32Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 4> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getInt32(0, le),\n        name: 'i32',\n        size: 4,\n    });\n\nexport const getI32Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 4> =>\n    combineCodec(getI32Encoder(config), getI32Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getI64Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 8> =>\n    numberEncoderFactory({\n        config,\n        name: 'i64',\n        range: [-BigInt('0x7fffffffffffffff') - 1n, BigInt('0x7fffffffffffffff')],\n        set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n        size: 8,\n    });\n\nexport const getI64Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 8> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getBigInt64(0, le),\n        name: 'i64',\n        size: 8,\n    });\n\nexport const getI64Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 8> =>\n    combineCodec(getI64Encoder(config), getI64Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getI8Encoder = (): FixedSizeEncoder<bigint | number, 1> =>\n    numberEncoderFactory({\n        name: 'i8',\n        range: [-Number('0x7f') - 1, Number('0x7f')],\n        set: (view, value) => view.setInt8(0, Number(value)),\n        size: 1,\n    });\n\nexport const getI8Decoder = (): FixedSizeDecoder<number, 1> =>\n    numberDecoderFactory({\n        get: view => view.getInt8(0),\n        name: 'i8',\n        size: 1,\n    });\n\nexport const getI8Codec = (): FixedSizeCodec<bigint | number, number, 1> =>\n    combineCodec(getI8Encoder(), getI8Decoder());\n","import {\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Offset,\n    ReadonlyUint8Array,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\n\nimport { assertNumberIsBetweenForCodec } from './assertions';\n\n/**\n * Encodes short u16 numbers.\n * @see {@link getShortU16Codec} for a more detailed description.\n */\nexport const getShortU16Encoder = (): VariableSizeEncoder<bigint | number> =>\n    createEncoder({\n        getSizeFromValue: (value: bigint | number): number => {\n            if (value <= 0b01111111) return 1;\n            if (value <= 0b0011111111111111) return 2;\n            return 3;\n        },\n        maxSize: 3,\n        write: (value: bigint | number, bytes: Uint8Array, offset: Offset): Offset => {\n            assertNumberIsBetweenForCodec('shortU16', 0, 65535, value);\n            const shortU16Bytes = [0];\n            for (let ii = 0; ; ii += 1) {\n                // Shift the bits of the value over such that the next 7 bits are at the right edge.\n                const alignedValue = Number(value) >> (ii * 7);\n                if (alignedValue === 0) {\n                    // No more bits to consume.\n                    break;\n                }\n                // Extract those 7 bits using a mask.\n                const nextSevenBits = 0b1111111 & alignedValue;\n                shortU16Bytes[ii] = nextSevenBits;\n                if (ii > 0) {\n                    // Set the continuation bit of the previous slice.\n                    shortU16Bytes[ii - 1] |= 0b10000000;\n                }\n            }\n            bytes.set(shortU16Bytes, offset);\n            return offset + shortU16Bytes.length;\n        },\n    });\n\n/**\n * Decodes short u16 numbers.\n * @see {@link getShortU16Codec} for a more detailed description.\n */\nexport const getShortU16Decoder = (): VariableSizeDecoder<number> =>\n    createDecoder({\n        maxSize: 3,\n        read: (bytes: ReadonlyUint8Array | Uint8Array, offset): [number, Offset] => {\n            let value = 0;\n            let byteCount = 0;\n            while (++byteCount) {\n                const byteIndex = byteCount - 1;\n                const currentByte = bytes[offset + byteIndex];\n                const nextSevenBits = 0b1111111 & currentByte;\n                // Insert the next group of seven bits into the correct slot of the output value.\n                value |= nextSevenBits << (byteIndex * 7);\n                if ((currentByte & 0b10000000) === 0) {\n                    // This byte does not have its continuation bit set. We're done.\n                    break;\n                }\n            }\n            return [value, offset + byteCount];\n        },\n    });\n\n/**\n * Encodes and decodes short u16 numbers.\n *\n * Short u16 numbers are the same as u16, but serialized with 1 to 3 bytes.\n * If the value is above 0x7f, the top bit is set and the remaining\n * value is stored in the next bytes. Each byte follows the same\n * pattern until the 3rd byte. The 3rd byte, if needed, uses\n * all 8 bits to store the last byte of the original value.\n */\nexport const getShortU16Codec = (): VariableSizeCodec<bigint | number, number> =>\n    combineCodec(getShortU16Encoder(), getShortU16Decoder());\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getU128Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 16> =>\n    numberEncoderFactory({\n        config,\n        name: 'u128',\n        range: [0n, BigInt('0xffffffffffffffffffffffffffffffff')],\n        set: (view, value, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const rightMask = 0xffffffffffffffffn;\n            view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n            view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n        },\n        size: 16,\n    });\n\nexport const getU128Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 16> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => {\n            const leftOffset = le ? 8 : 0;\n            const rightOffset = le ? 0 : 8;\n            const left = view.getBigUint64(leftOffset, le);\n            const right = view.getBigUint64(rightOffset, le);\n            return (left << 64n) + right;\n        },\n        name: 'u128',\n        size: 16,\n    });\n\nexport const getU128Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 16> =>\n    combineCodec(getU128Encoder(config), getU128Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getU16Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 2> =>\n    numberEncoderFactory({\n        config,\n        name: 'u16',\n        range: [0, Number('0xffff')],\n        set: (view, value, le) => view.setUint16(0, Number(value), le),\n        size: 2,\n    });\n\nexport const getU16Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 2> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getUint16(0, le),\n        name: 'u16',\n        size: 2,\n    });\n\nexport const getU16Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 2> =>\n    combineCodec(getU16Encoder(config), getU16Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getU32Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 4> =>\n    numberEncoderFactory({\n        config,\n        name: 'u32',\n        range: [0, Number('0xffffffff')],\n        set: (view, value, le) => view.setUint32(0, Number(value), le),\n        size: 4,\n    });\n\nexport const getU32Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<number, 4> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getUint32(0, le),\n        name: 'u32',\n        size: 4,\n    });\n\nexport const getU32Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, number, 4> =>\n    combineCodec(getU32Encoder(config), getU32Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { NumberCodecConfig } from './common';\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getU64Encoder = (config: NumberCodecConfig = {}): FixedSizeEncoder<bigint | number, 8> =>\n    numberEncoderFactory({\n        config,\n        name: 'u64',\n        range: [0n, BigInt('0xffffffffffffffff')],\n        set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n        size: 8,\n    });\n\nexport const getU64Decoder = (config: NumberCodecConfig = {}): FixedSizeDecoder<bigint, 8> =>\n    numberDecoderFactory({\n        config,\n        get: (view, le) => view.getBigUint64(0, le),\n        name: 'u64',\n        size: 8,\n    });\n\nexport const getU64Codec = (config: NumberCodecConfig = {}): FixedSizeCodec<bigint | number, bigint, 8> =>\n    combineCodec(getU64Encoder(config), getU64Decoder(config));\n","import { combineCodec, FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';\n\nimport { numberDecoderFactory, numberEncoderFactory } from './utils';\n\nexport const getU8Encoder = (): FixedSizeEncoder<bigint | number, 1> =>\n    numberEncoderFactory({\n        name: 'u8',\n        range: [0, Number('0xff')],\n        set: (view, value) => view.setUint8(0, Number(value)),\n        size: 1,\n    });\n\nexport const getU8Decoder = (): FixedSizeDecoder<number, 1> =>\n    numberDecoderFactory({\n        get: view => view.getUint8(0),\n        name: 'u8',\n        size: 1,\n    });\n\nexport const getU8Codec = (): FixedSizeCodec<bigint | number, number, 1> =>\n    combineCodec(getU8Encoder(), getU8Decoder());\n"],"names":["Endian","combineCodec","createEncoder","createDecoder"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"debugId":null}},
    {"offset": {"line": 5291, "column": 0}, "map": {"version":3,"file":"index.node.mjs","sources":["file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/assertions.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/utils.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/array.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/bit-array.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/boolean.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/bytes.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-strings/src/base16.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/constant.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/tuple.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/union.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/discriminated-union.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/enum-helpers.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/enum.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/hidden-prefix.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/hidden-suffix.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/map.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/unit.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/nullable.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/set.ts","file:///Users/mac/Working/Demo/demo_solana/node_modules/.pnpm/%40solana%2Bcodecs-data-structures%402.0.0-rc.1_typescript%405.8.3/node_modules/%40solana/codecs-data-structures/src/struct.ts"],"sourcesContent":["import { SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SolanaError } from '@solana/errors';\n\n/** Checks the number of items in an array-like structure is expected. */\nexport function assertValidNumberOfItemsForCodec(\n    codecDescription: string,\n    expected: bigint | number,\n    actual: bigint | number,\n) {\n    if (expected !== actual) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, {\n            actual,\n            codecDescription,\n            expected,\n        });\n    }\n}\n","import { isFixedSize } from '@solana/codecs-core';\n\n/**\n * Functionally, this type helper is equivalent to the identity type — i.e. `type Identity<T> = T`.\n * However, wrapping generic object mappings in this type significantly reduces the number\n * of instantiation expressions processed, which increases TypeScript performance and\n * prevents \"Type instantiation is excessively deep and possibly infinite\" errors.\n *\n * This works because TypeScript doesn't create a new level of nesting when encountering conditional generic types.\n * @see https://github.com/microsoft/TypeScript/issues/34933\n * @see https://github.com/kysely-org/kysely/pull/483\n */\nexport type DrainOuterGeneric<T> = [T] extends [unknown] ? T : never;\n\nexport function maxCodecSizes(sizes: (number | null)[]): number | null {\n    return sizes.reduce(\n        (all, size) => (all === null || size === null ? null : Math.max(all, size)),\n        0 as number | null,\n    );\n}\n\nexport function sumCodecSizes(sizes: (number | null)[]): number | null {\n    return sizes.reduce((all, size) => (all === null || size === null ? null : all + size), 0 as number | null);\n}\n\nexport function getFixedSize(codec: { fixedSize: number } | { maxSize?: number }): number | null {\n    return isFixedSize(codec) ? codec.fixedSize : null;\n}\n\nexport function getMaxSize(codec: { fixedSize: number } | { maxSize?: number }): number | null {\n    return isFixedSize(codec) ? codec.fixedSize : (codec.maxSize ?? null);\n}\n","import {\n    Codec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    getEncodedSize,\n    ReadonlyUint8Array,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport { getU32Decoder, getU32Encoder, NumberCodec, NumberDecoder, NumberEncoder } from '@solana/codecs-numbers';\n\nimport { assertValidNumberOfItemsForCodec } from './assertions';\nimport { getFixedSize, getMaxSize } from './utils';\n\n/**\n * Represents all the size options for array-like codecs\n * — i.e. `array`, `map` and `set`.\n *\n * It can be one of the following:\n * - a {@link NumberCodec} that prefixes its content with its size.\n * - a fixed number of items.\n * - or `'remainder'` to infer the number of items by dividing\n *   the rest of the byte array by the fixed size of its item.\n *   Note that this option is only available for fixed-size items.\n */\nexport type ArrayLikeCodecSize<TPrefix extends NumberCodec | NumberDecoder | NumberEncoder> =\n    | TPrefix\n    | number\n    | 'remainder';\n\n/** Defines the configs for array codecs. */\nexport type ArrayCodecConfig<TPrefix extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The size of the array.\n     * @defaultValue u32 prefix.\n     */\n    size?: ArrayLikeCodecSize<TPrefix>;\n};\n\n/**\n * Encodes an array of items.\n *\n * @param item - The encoder to use for the array's items.\n * @param config - A set of config for the encoder.\n */\nexport function getArrayEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config: ArrayCodecConfig<NumberEncoder> & { size: 0 },\n): FixedSizeEncoder<TFrom[], 0>;\nexport function getArrayEncoder<TFrom>(\n    item: FixedSizeEncoder<TFrom>,\n    config: ArrayCodecConfig<NumberEncoder> & { size: number },\n): FixedSizeEncoder<TFrom[]>;\nexport function getArrayEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config?: ArrayCodecConfig<NumberEncoder>,\n): VariableSizeEncoder<TFrom[]>;\nexport function getArrayEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config: ArrayCodecConfig<NumberEncoder> = {},\n): Encoder<TFrom[]> {\n    const size = config.size ?? getU32Encoder();\n    const fixedSize = computeArrayLikeCodecSize(size, getFixedSize(item));\n    const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? undefined;\n\n    return createEncoder({\n        ...(fixedSize !== null\n            ? { fixedSize }\n            : {\n                  getSizeFromValue: (array: TFrom[]) => {\n                      const prefixSize = typeof size === 'object' ? getEncodedSize(array.length, size) : 0;\n                      return prefixSize + [...array].reduce((all, value) => all + getEncodedSize(value, item), 0);\n                  },\n                  maxSize,\n              }),\n        write: (array: TFrom[], bytes, offset) => {\n            if (typeof size === 'number') {\n                assertValidNumberOfItemsForCodec('array', size, array.length);\n            }\n            if (typeof size === 'object') {\n                offset = size.write(array.length, bytes, offset);\n            }\n            array.forEach(value => {\n                offset = item.write(value, bytes, offset);\n            });\n            return offset;\n        },\n    });\n}\n\n/**\n * Decodes an array of items.\n *\n * @param item - The encoder to use for the array's items.\n * @param config - A set of config for the encoder.\n */\nexport function getArrayDecoder<TTo>(\n    item: Decoder<TTo>,\n    config: ArrayCodecConfig<NumberDecoder> & { size: 0 },\n): FixedSizeDecoder<TTo[], 0>;\nexport function getArrayDecoder<TTo>(\n    item: FixedSizeDecoder<TTo>,\n    config: ArrayCodecConfig<NumberDecoder> & { size: number },\n): FixedSizeDecoder<TTo[]>;\nexport function getArrayDecoder<TTo>(\n    item: Decoder<TTo>,\n    config?: ArrayCodecConfig<NumberDecoder>,\n): VariableSizeDecoder<TTo[]>;\nexport function getArrayDecoder<TTo>(item: Decoder<TTo>, config: ArrayCodecConfig<NumberDecoder> = {}): Decoder<TTo[]> {\n    const size = config.size ?? getU32Decoder();\n    const itemSize = getFixedSize(item);\n    const fixedSize = computeArrayLikeCodecSize(size, itemSize);\n    const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? undefined;\n\n    return createDecoder({\n        ...(fixedSize !== null ? { fixedSize } : { maxSize }),\n        read: (bytes: ReadonlyUint8Array | Uint8Array, offset) => {\n            const array: TTo[] = [];\n            if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n                return [array, offset];\n            }\n\n            if (size === 'remainder') {\n                while (offset < bytes.length) {\n                    const [value, newOffset] = item.read(bytes, offset);\n                    offset = newOffset;\n                    array.push(value);\n                }\n                return [array, offset];\n            }\n\n            const [resolvedSize, newOffset] = typeof size === 'number' ? [size, offset] : size.read(bytes, offset);\n            offset = newOffset;\n            for (let i = 0; i < resolvedSize; i += 1) {\n                const [value, newOffset] = item.read(bytes, offset);\n                offset = newOffset;\n                array.push(value);\n            }\n            return [array, offset];\n        },\n    });\n}\n\n/**\n * Creates a codec for an array of items.\n *\n * @param item - The codec to use for the array's items.\n * @param config - A set of config for the codec.\n */\nexport function getArrayCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config: ArrayCodecConfig<NumberCodec> & { size: 0 },\n): FixedSizeCodec<TFrom[], TTo[], 0>;\nexport function getArrayCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: FixedSizeCodec<TFrom, TTo>,\n    config: ArrayCodecConfig<NumberCodec> & { size: number },\n): FixedSizeCodec<TFrom[], TTo[]>;\nexport function getArrayCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config?: ArrayCodecConfig<NumberCodec>,\n): VariableSizeCodec<TFrom[], TTo[]>;\nexport function getArrayCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config: ArrayCodecConfig<NumberCodec> = {},\n): Codec<TFrom[], TTo[]> {\n    return combineCodec(getArrayEncoder(item, config as object), getArrayDecoder(item, config as object));\n}\n\nfunction computeArrayLikeCodecSize(size: number | object | 'remainder', itemSize: number | null): number | null {\n    if (typeof size !== 'number') return null;\n    if (size === 0) return 0;\n    return itemSize === null ? null : itemSize * size;\n}\n","import {\n    assertByteArrayHasEnoughBytesForCodec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n} from '@solana/codecs-core';\n\n/** Defines the config for bitArray codecs. */\nexport type BitArrayCodecConfig = {\n    /**\n     * Whether to read the bits in reverse order.\n     * @defaultValue `false`\n     */\n    backward?: boolean;\n};\n\n/**\n * Encodes an array of booleans into bits.\n *\n * @param size - The amount of bytes to use for the bit array.\n * @param config - A set of config for the encoder.\n */\nexport function getBitArrayEncoder<TSize extends number>(\n    size: TSize,\n    config: BitArrayCodecConfig | boolean = {},\n): FixedSizeEncoder<boolean[], TSize> {\n    const parsedConfig: BitArrayCodecConfig = typeof config === 'boolean' ? { backward: config } : config;\n    const backward = parsedConfig.backward ?? false;\n    return createEncoder({\n        fixedSize: size,\n        write(value: boolean[], bytes, offset) {\n            const bytesToAdd: number[] = [];\n\n            for (let i = 0; i < size; i += 1) {\n                let byte = 0;\n                for (let j = 0; j < 8; j += 1) {\n                    const feature = Number(value[i * 8 + j] ?? 0);\n                    byte |= feature << (backward ? j : 7 - j);\n                }\n                if (backward) {\n                    bytesToAdd.unshift(byte);\n                } else {\n                    bytesToAdd.push(byte);\n                }\n            }\n\n            bytes.set(bytesToAdd, offset);\n            return size;\n        },\n    });\n}\n\n/**\n * Decodes bits into an array of booleans.\n *\n * @param size - The amount of bytes to use for the bit array.\n * @param config - A set of config for the decoder.\n */\nexport function getBitArrayDecoder<TSize extends number>(\n    size: TSize,\n    config: BitArrayCodecConfig | boolean = {},\n): FixedSizeDecoder<boolean[], TSize> {\n    const parsedConfig: BitArrayCodecConfig = typeof config === 'boolean' ? { backward: config } : config;\n    const backward = parsedConfig.backward ?? false;\n    return createDecoder({\n        fixedSize: size,\n        read(bytes, offset) {\n            assertByteArrayHasEnoughBytesForCodec('bitArray', size, bytes, offset);\n            const booleans: boolean[] = [];\n            let slice = bytes.slice(offset, offset + size);\n            slice = backward ? slice.reverse() : slice;\n\n            slice.forEach(byte => {\n                for (let i = 0; i < 8; i += 1) {\n                    if (backward) {\n                        booleans.push(Boolean(byte & 1));\n                        byte >>= 1;\n                    } else {\n                        booleans.push(Boolean(byte & 0b1000_0000));\n                        byte <<= 1;\n                    }\n                }\n            });\n\n            return [booleans, offset + size];\n        },\n    });\n}\n\n/**\n * An array of boolean codec that converts booleans to bits and vice versa.\n *\n * @param size - The amount of bytes to use for the bit array.\n * @param config - A set of config for the codec.\n */\nexport function getBitArrayCodec<TSize extends number>(\n    size: TSize,\n    config: BitArrayCodecConfig | boolean = {},\n): FixedSizeCodec<boolean[], boolean[], TSize> {\n    return combineCodec(getBitArrayEncoder(size, config), getBitArrayDecoder(size, config));\n}\n","import {\n    Codec,\n    combineCodec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    transformDecoder,\n    transformEncoder,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport {\n    FixedSizeNumberCodec,\n    FixedSizeNumberDecoder,\n    FixedSizeNumberEncoder,\n    getU8Decoder,\n    getU8Encoder,\n    NumberCodec,\n    NumberDecoder,\n    NumberEncoder,\n} from '@solana/codecs-numbers';\n\n/** Defines the config for boolean codecs. */\nexport type BooleanCodecConfig<TSize extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The number codec to delegate to.\n     * @defaultValue u8 size.\n     */\n    size?: TSize;\n};\n\n/**\n * Encodes booleans.\n *\n * @param config - A set of config for the encoder.\n */\nexport function getBooleanEncoder(): FixedSizeEncoder<boolean, 1>;\nexport function getBooleanEncoder<TSize extends number>(\n    config: BooleanCodecConfig<NumberEncoder> & { size: FixedSizeNumberEncoder<TSize> },\n): FixedSizeEncoder<boolean, TSize>;\nexport function getBooleanEncoder(config: BooleanCodecConfig<NumberEncoder>): VariableSizeEncoder<boolean>;\nexport function getBooleanEncoder(config: BooleanCodecConfig<NumberEncoder> = {}): Encoder<boolean> {\n    return transformEncoder(config.size ?? getU8Encoder(), (value: boolean) => (value ? 1 : 0));\n}\n\n/**\n * Decodes booleans.\n *\n * @param config - A set of config for the decoder.\n */\nexport function getBooleanDecoder(): FixedSizeDecoder<boolean, 1>;\nexport function getBooleanDecoder<TSize extends number>(\n    config: BooleanCodecConfig<NumberDecoder> & { size: FixedSizeNumberDecoder<TSize> },\n): FixedSizeDecoder<boolean, TSize>;\nexport function getBooleanDecoder(config: BooleanCodecConfig<NumberDecoder>): VariableSizeDecoder<boolean>;\nexport function getBooleanDecoder(config: BooleanCodecConfig<NumberDecoder> = {}): Decoder<boolean> {\n    return transformDecoder(config.size ?? getU8Decoder(), (value: bigint | number): boolean => Number(value) === 1);\n}\n\n/**\n * Creates a boolean codec.\n *\n * @param config - A set of config for the codec.\n */\nexport function getBooleanCodec(): FixedSizeCodec<boolean, boolean, 1>;\nexport function getBooleanCodec<TSize extends number>(\n    config: BooleanCodecConfig<NumberCodec> & { size: FixedSizeNumberCodec<TSize> },\n): FixedSizeCodec<boolean, boolean, TSize>;\nexport function getBooleanCodec(config: BooleanCodecConfig<NumberCodec>): VariableSizeCodec<boolean>;\nexport function getBooleanCodec(config: BooleanCodecConfig<NumberCodec> = {}): Codec<boolean> {\n    return combineCodec(getBooleanEncoder(config), getBooleanDecoder(config));\n}\n","import {\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    ReadonlyUint8Array,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\n\n/**\n * Encodes byte arrays as provided.\n *\n * To control the size of the encoded byte array, you can use\n * the `fixEncoderSize` or `addEncoderSizePrefix` functions.\n */\nexport function getBytesEncoder(): VariableSizeEncoder<ReadonlyUint8Array | Uint8Array> {\n    return createEncoder({\n        getSizeFromValue: value => value.length,\n        write: (value, bytes, offset) => {\n            bytes.set(value, offset);\n            return offset + value.length;\n        },\n    });\n}\n\n/**\n * Decodes byte arrays as-is.\n *\n * To control the size of the decoded byte array, you can use\n * the `fixDecoderSize` or `addDecoderSizePrefix` functions.\n */\nexport function getBytesDecoder(): VariableSizeDecoder<ReadonlyUint8Array> {\n    return createDecoder({\n        read: (bytes, offset) => {\n            const slice = bytes.slice(offset);\n            return [slice, offset + slice.length];\n        },\n    });\n}\n\n/**\n * Creates a sized bytes codec.\n *\n * To control the size of the encoded and decoded byte arrays,\n * you can use the `fixCodecSize` or `addCodecSizePrefix` functions.\n */\nexport function getBytesCodec(): VariableSizeCodec<ReadonlyUint8Array | Uint8Array, ReadonlyUint8Array> {\n    return combineCodec(getBytesEncoder(), getBytesDecoder());\n}\n","import {\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport { SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, SolanaError } from '@solana/errors';\n\nconst enum HexC {\n    ZERO = 48, // 0\n    NINE = 57, // 9\n    A_UP = 65, // A\n    F_UP = 70, // F\n    A_LO = 97, // a\n    F_LO = 102, // f\n}\n\nconst INVALID_STRING_ERROR_BASE_CONFIG = {\n    alphabet: '0123456789abcdef',\n    base: 16,\n} as const;\n\nfunction charCodeToBase16(char: number) {\n    if (char >= HexC.ZERO && char <= HexC.NINE) return char - HexC.ZERO;\n    if (char >= HexC.A_UP && char <= HexC.F_UP) return char - (HexC.A_UP - 10);\n    if (char >= HexC.A_LO && char <= HexC.F_LO) return char - (HexC.A_LO - 10);\n}\n\n/** Encodes strings in base16. */\nexport const getBase16Encoder = (): VariableSizeEncoder<string> =>\n    createEncoder({\n        getSizeFromValue: (value: string) => Math.ceil(value.length / 2),\n        write(value: string, bytes, offset) {\n            const len = value.length;\n            const al = len / 2;\n            if (len === 1) {\n                const c = value.charCodeAt(0);\n                const n = charCodeToBase16(c);\n                if (n === undefined) {\n                    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n                        ...INVALID_STRING_ERROR_BASE_CONFIG,\n                        value,\n                    });\n                }\n                bytes.set([n], offset);\n                return 1 + offset;\n            }\n            const hexBytes = new Uint8Array(al);\n            for (let i = 0, j = 0; i < al; i++) {\n                const c1 = value.charCodeAt(j++);\n                const c2 = value.charCodeAt(j++);\n\n                const n1 = charCodeToBase16(c1);\n                const n2 = charCodeToBase16(c2);\n                if (n1 === undefined || (n2 === undefined && !Number.isNaN(c2))) {\n                    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n                        ...INVALID_STRING_ERROR_BASE_CONFIG,\n                        value,\n                    });\n                }\n                hexBytes[i] = !Number.isNaN(c2) ? (n1 << 4) | (n2 ?? 0) : n1;\n            }\n\n            bytes.set(hexBytes, offset);\n            return hexBytes.length + offset;\n        },\n    });\n\n/** Decodes strings in base16. */\nexport const getBase16Decoder = (): VariableSizeDecoder<string> =>\n    createDecoder({\n        read(bytes, offset) {\n            const value = bytes.slice(offset).reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n            return [value, bytes.length];\n        },\n    });\n\n/** Encodes and decodes strings in base16. */\nexport const getBase16Codec = (): VariableSizeCodec<string> => combineCodec(getBase16Encoder(), getBase16Decoder());\n","import {\n    combineCodec,\n    containsBytes,\n    createDecoder,\n    createEncoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    ReadonlyUint8Array,\n} from '@solana/codecs-core';\nimport { getBase16Decoder } from '@solana/codecs-strings';\nimport { SOLANA_ERROR__CODECS__INVALID_CONSTANT, SolanaError } from '@solana/errors';\n\n/**\n * Creates a void encoder that always sets the provided byte array when encoding.\n */\nexport function getConstantEncoder<TConstant extends ReadonlyUint8Array>(\n    constant: TConstant,\n): FixedSizeEncoder<void, TConstant['length']> {\n    return createEncoder({\n        fixedSize: constant.length,\n        write: (_, bytes, offset) => {\n            bytes.set(constant, offset);\n            return offset + constant.length;\n        },\n    });\n}\n\n/**\n * Creates a void decoder that reads the next bytes and fails if they do not match the provided constant.\n */\nexport function getConstantDecoder<TConstant extends ReadonlyUint8Array>(\n    constant: TConstant,\n): FixedSizeDecoder<void, TConstant['length']> {\n    return createDecoder({\n        fixedSize: constant.length,\n        read: (bytes, offset) => {\n            const base16 = getBase16Decoder();\n            if (!containsBytes(bytes, constant, offset)) {\n                throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_CONSTANT, {\n                    constant,\n                    data: bytes,\n                    hexConstant: base16.decode(constant),\n                    hexData: base16.decode(bytes),\n                    offset,\n                });\n            }\n            return [undefined, offset + constant.length];\n        },\n    });\n}\n\n/**\n * Creates a void codec that always sets the provided byte array\n * when encoding and, when decoding, asserts that the next\n * bytes match the provided byte array.\n */\nexport function getConstantCodec<TConstant extends ReadonlyUint8Array>(\n    constant: TConstant,\n): FixedSizeCodec<void, void, TConstant['length']> {\n    return combineCodec(getConstantEncoder(constant), getConstantDecoder(constant));\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n    Codec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    getEncodedSize,\n    ReadonlyUint8Array,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\n\nimport { assertValidNumberOfItemsForCodec } from './assertions';\nimport { DrainOuterGeneric, getFixedSize, getMaxSize, sumCodecSizes } from './utils';\n\ntype GetEncoderTypeFromItems<TItems extends readonly Encoder<any>[]> = DrainOuterGeneric<{\n    [I in keyof TItems]: TItems[I] extends Encoder<infer TFrom> ? TFrom : never;\n}>;\n\ntype GetDecoderTypeFromItems<TItems extends readonly Decoder<any>[]> = DrainOuterGeneric<{\n    [I in keyof TItems]: TItems[I] extends Decoder<infer TTo> ? TTo : never;\n}>;\n\n/**\n * Creates a encoder for a tuple-like array.\n *\n * @param items - The encoders to use for each item in the tuple.\n */\nexport function getTupleEncoder<const TItems extends readonly FixedSizeEncoder<any>[]>(\n    items: TItems,\n): FixedSizeEncoder<GetEncoderTypeFromItems<TItems>>;\nexport function getTupleEncoder<const TItems extends readonly Encoder<any>[]>(\n    items: TItems,\n): VariableSizeEncoder<GetEncoderTypeFromItems<TItems>>;\nexport function getTupleEncoder<const TItems extends readonly Encoder<any>[]>(\n    items: TItems,\n): Encoder<GetEncoderTypeFromItems<TItems>> {\n    type TFrom = GetEncoderTypeFromItems<TItems>;\n    const fixedSize = sumCodecSizes(items.map(getFixedSize));\n    const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? undefined;\n\n    return createEncoder({\n        ...(fixedSize === null\n            ? {\n                  getSizeFromValue: (value: TFrom) =>\n                      items.map((item, index) => getEncodedSize(value[index], item)).reduce((all, one) => all + one, 0),\n                  maxSize,\n              }\n            : { fixedSize }),\n        write: (value: TFrom, bytes, offset) => {\n            assertValidNumberOfItemsForCodec('tuple', items.length, value.length);\n            items.forEach((item, index) => {\n                offset = item.write(value[index], bytes, offset);\n            });\n            return offset;\n        },\n    });\n}\n\n/**\n * Creates a decoder for a tuple-like array.\n *\n * @param items - The decoders to use for each item in the tuple.\n */\n\nexport function getTupleDecoder<const TItems extends readonly FixedSizeDecoder<any>[]>(\n    items: TItems,\n): FixedSizeDecoder<GetDecoderTypeFromItems<TItems>>;\nexport function getTupleDecoder<const TItems extends readonly Decoder<any>[]>(\n    items: TItems,\n): VariableSizeDecoder<GetDecoderTypeFromItems<TItems>>;\nexport function getTupleDecoder<const TItems extends readonly Decoder<any>[]>(\n    items: TItems,\n): Decoder<GetDecoderTypeFromItems<TItems>> {\n    type TTo = GetDecoderTypeFromItems<TItems>;\n    const fixedSize = sumCodecSizes(items.map(getFixedSize));\n    const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? undefined;\n\n    return createDecoder({\n        ...(fixedSize === null ? { maxSize } : { fixedSize }),\n        read: (bytes: ReadonlyUint8Array | Uint8Array, offset) => {\n            const values = [] as Array<any> & TTo;\n            items.forEach(item => {\n                const [newValue, newOffset] = item.read(bytes, offset);\n                values.push(newValue);\n                offset = newOffset;\n            });\n            return [values, offset];\n        },\n    });\n}\n\n/**\n * Creates a codec for a tuple-like array.\n *\n * @param items - The codecs to use for each item in the tuple.\n */\nexport function getTupleCodec<const TItems extends readonly FixedSizeCodec<any>[]>(\n    items: TItems,\n): FixedSizeCodec<GetEncoderTypeFromItems<TItems>, GetDecoderTypeFromItems<TItems> & GetEncoderTypeFromItems<TItems>>;\nexport function getTupleCodec<const TItems extends readonly Codec<any>[]>(\n    items: TItems,\n): VariableSizeCodec<\n    GetEncoderTypeFromItems<TItems>,\n    GetDecoderTypeFromItems<TItems> & GetEncoderTypeFromItems<TItems>\n>;\nexport function getTupleCodec<const TItems extends readonly Codec<any>[]>(\n    items: TItems,\n): Codec<GetEncoderTypeFromItems<TItems>, GetDecoderTypeFromItems<TItems> & GetEncoderTypeFromItems<TItems>> {\n    return combineCodec(\n        getTupleEncoder(items),\n        getTupleDecoder(items) as Decoder<GetDecoderTypeFromItems<TItems> & GetEncoderTypeFromItems<TItems>>,\n    );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n    Codec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    getEncodedSize,\n    isFixedSize,\n    Offset,\n    ReadonlyUint8Array,\n} from '@solana/codecs-core';\nimport { SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, SolanaError } from '@solana/errors';\n\nimport { DrainOuterGeneric, getMaxSize, maxCodecSizes } from './utils';\n\ntype GetEncoderTypeFromVariants<TVariants extends readonly Encoder<any>[]> = DrainOuterGeneric<{\n    [I in keyof TVariants]: TVariants[I] extends Encoder<infer TFrom> ? TFrom : never;\n}>[number];\n\ntype GetDecoderTypeFromVariants<TVariants extends readonly Decoder<any>[]> = DrainOuterGeneric<{\n    [I in keyof TVariants]: TVariants[I] extends Decoder<infer TFrom> ? TFrom : never;\n}>[number];\n\n/**\n * Creates a union encoder from the provided array of encoder.\n *\n * @param variants - The variant encoders of the union.\n * @param getIndexFromValue - A function that returns the index of the variant from the provided value.\n */\nexport function getUnionEncoder<const TVariants extends readonly Encoder<any>[]>(\n    variants: TVariants,\n    getIndexFromValue: (value: GetEncoderTypeFromVariants<TVariants>) => number,\n): Encoder<GetEncoderTypeFromVariants<TVariants>> {\n    type TFrom = GetEncoderTypeFromVariants<TVariants>;\n    const fixedSize = getUnionFixedSize(variants);\n    const write: Encoder<TFrom>['write'] = (variant, bytes, offset) => {\n        const index = getIndexFromValue(variant);\n        assertValidVariantIndex(variants, index);\n        return variants[index].write(variant, bytes, offset);\n    };\n\n    if (fixedSize !== null) {\n        return createEncoder({ fixedSize, write });\n    }\n\n    const maxSize = getUnionMaxSize(variants);\n    return createEncoder({\n        ...(maxSize !== null ? { maxSize } : {}),\n        getSizeFromValue: variant => {\n            const index = getIndexFromValue(variant);\n            assertValidVariantIndex(variants, index);\n            return getEncodedSize(variant, variants[index]);\n        },\n        write,\n    });\n}\n\n/**\n * Creates a union decoder from the provided array of decoder.\n *\n * @param variants - The variant decoders of the union.\n * @param getIndexFromBytes - A function that returns the index of the variant from the byte array.\n */\nexport function getUnionDecoder<const TVariants extends readonly Decoder<any>[]>(\n    variants: TVariants,\n    getIndexFromBytes: (bytes: ReadonlyUint8Array, offset: Offset) => number,\n): Decoder<GetDecoderTypeFromVariants<TVariants>> {\n    type TTo = GetDecoderTypeFromVariants<TVariants>;\n    const fixedSize = getUnionFixedSize(variants);\n    const read: Decoder<TTo>['read'] = (bytes, offset) => {\n        const index = getIndexFromBytes(bytes, offset);\n        assertValidVariantIndex(variants, index);\n        return variants[index].read(bytes, offset);\n    };\n\n    if (fixedSize !== null) {\n        return createDecoder({ fixedSize, read });\n    }\n\n    const maxSize = getUnionMaxSize(variants);\n    return createDecoder({ ...(maxSize !== null ? { maxSize } : {}), read });\n}\n\n/**\n * Creates a union codec from the provided array of codec.\n *\n * @param variants - The variant codecs of the union.\n * @param getIndexFromValue - A function that returns the index of the variant from the provided value.\n * @param getIndexFromBytes - A function that returns the index of the variant from the byte array.\n */\nexport function getUnionCodec<const TVariants extends readonly Codec<any>[]>(\n    variants: TVariants,\n    getIndexFromValue: (value: GetEncoderTypeFromVariants<TVariants>) => number,\n    getIndexFromBytes: (bytes: ReadonlyUint8Array, offset: Offset) => number,\n): Codec<\n    GetEncoderTypeFromVariants<TVariants>,\n    GetDecoderTypeFromVariants<TVariants> & GetEncoderTypeFromVariants<TVariants>\n> {\n    return combineCodec(\n        getUnionEncoder(variants, getIndexFromValue),\n        getUnionDecoder(variants, getIndexFromBytes) as Decoder<\n            GetDecoderTypeFromVariants<TVariants> & GetEncoderTypeFromVariants<TVariants>\n        >,\n    );\n}\n\nfunction assertValidVariantIndex(variants: readonly unknown[], index: number) {\n    if (typeof variants[index] === 'undefined') {\n        throw new SolanaError(SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, {\n            maxRange: variants.length - 1,\n            minRange: 0,\n            variant: index,\n        });\n    }\n}\n\nfunction getUnionFixedSize<const TVariants extends readonly (Decoder<any> | Encoder<any>)[]>(variants: TVariants) {\n    if (variants.length === 0) return 0;\n    if (!isFixedSize(variants[0])) return null;\n    const variantSize = variants[0].fixedSize;\n    const sameSizedVariants = variants.every(variant => isFixedSize(variant) && variant.fixedSize === variantSize);\n    return sameSizedVariants ? variantSize : null;\n}\n\nfunction getUnionMaxSize<const TVariants extends readonly (Decoder<any> | Encoder<any>)[]>(variants: TVariants) {\n    return maxCodecSizes(variants.map(variant => getMaxSize(variant)));\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Codec, combineCodec, Decoder, Encoder, transformDecoder, transformEncoder } from '@solana/codecs-core';\nimport { getU8Decoder, getU8Encoder, NumberCodec, NumberDecoder, NumberEncoder } from '@solana/codecs-numbers';\nimport { SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, SolanaError } from '@solana/errors';\n\nimport { getTupleDecoder, getTupleEncoder } from './tuple';\nimport { getUnionDecoder, getUnionEncoder } from './union';\nimport { DrainOuterGeneric } from './utils';\n\n/**\n * Defines a discriminated union using discriminated union types.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * ```\n */\nexport type DiscriminatedUnion<\n    TDiscriminatorProperty extends string = '__kind',\n    TDiscriminatorValue extends string = string,\n> = {\n    [P in TDiscriminatorProperty]: TDiscriminatorValue;\n};\n\n/**\n * Extracts a variant from a discriminated union.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * type ClickEvent = GetDiscriminatedUnionVariant<WebPageEvent, '__kind', 'click'>;\n * // -> { __kind: 'click', x: number, y: number }\n * ```\n */\nexport type GetDiscriminatedUnionVariant<\n    TUnion extends DiscriminatedUnion<TDiscriminatorProperty>,\n    TDiscriminatorProperty extends string,\n    TDiscriminatorValue extends TUnion[TDiscriminatorProperty],\n> = Extract<TUnion, DiscriminatedUnion<TDiscriminatorProperty, TDiscriminatorValue>>;\n\n/**\n * Extracts a variant from a discriminated union without its discriminator.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * type ClickEvent = GetDiscriminatedUnionVariantContent<WebPageEvent, '__kind', 'click'>;\n * // -> { x: number, y: number }\n * ```\n */\nexport type GetDiscriminatedUnionVariantContent<\n    TUnion extends DiscriminatedUnion<TDiscriminatorProperty>,\n    TDiscriminatorProperty extends string,\n    TDiscriminatorValue extends TUnion[TDiscriminatorProperty],\n> = Omit<GetDiscriminatedUnionVariant<TUnion, TDiscriminatorProperty, TDiscriminatorValue>, TDiscriminatorProperty>;\n\n/** Defines the config for discriminated union codecs. */\nexport type DiscriminatedUnionCodecConfig<\n    TDiscriminatorProperty extends string = '__kind',\n    TDiscriminatorSize = NumberCodec | NumberDecoder | NumberEncoder,\n> = {\n    /**\n     * The property name of the discriminator.\n     * @defaultValue `__kind`.\n     */\n    discriminator?: TDiscriminatorProperty;\n    /**\n     * The codec to use for the enum discriminator prefixing the variant.\n     * @defaultValue u8 prefix.\n     */\n    size?: TDiscriminatorSize;\n};\n\ntype DiscriminatorValue = bigint | boolean | number | string | null | undefined;\ntype Variants<T> = readonly (readonly [DiscriminatorValue, T])[];\ntype ArrayIndices<T extends readonly unknown[]> = Exclude<Partial<T>['length'], T['length']> & number;\n\ntype GetEncoderTypeFromVariants<\n    TVariants extends Variants<Encoder<any>>,\n    TDiscriminatorProperty extends string,\n> = DrainOuterGeneric<{\n    [I in ArrayIndices<TVariants>]: (TVariants[I][1] extends Encoder<infer TFrom>\n        ? TFrom extends object\n            ? TFrom\n            : object\n        : never) & { [P in TDiscriminatorProperty]: TVariants[I][0] };\n}>[ArrayIndices<TVariants>];\n\ntype GetDecoderTypeFromVariants<\n    TVariants extends Variants<Decoder<any>>,\n    TDiscriminatorProperty extends string,\n> = DrainOuterGeneric<{\n    [I in ArrayIndices<TVariants>]: (TVariants[I][1] extends Decoder<infer TTo>\n        ? TTo extends object\n            ? TTo\n            : object\n        : never) & { [P in TDiscriminatorProperty]: TVariants[I][0] };\n}>[ArrayIndices<TVariants>];\n\n/**\n * Creates a discriminated union encoder.\n *\n * @param variants - The variant encoders of the discriminated union.\n * @param config - A set of config for the encoder.\n */\nexport function getDiscriminatedUnionEncoder<\n    const TVariants extends Variants<Encoder<any>>,\n    const TDiscriminatorProperty extends string = '__kind',\n>(\n    variants: TVariants,\n    config: DiscriminatedUnionCodecConfig<TDiscriminatorProperty, NumberEncoder> = {},\n): Encoder<GetEncoderTypeFromVariants<TVariants, TDiscriminatorProperty>> {\n    type TFrom = GetEncoderTypeFromVariants<TVariants, TDiscriminatorProperty>;\n    const discriminatorProperty = (config.discriminator ?? '__kind') as TDiscriminatorProperty;\n    const prefix = config.size ?? getU8Encoder();\n    return getUnionEncoder(\n        variants.map(([, variant], index) =>\n            transformEncoder(getTupleEncoder([prefix, variant]), (value: TFrom): [number, TFrom] => [index, value]),\n        ),\n        value => getVariantDiscriminator(variants, value[discriminatorProperty]),\n    );\n}\n\n/**\n * Creates a discriminated union decoder.\n *\n * @param variants - The variant decoders of the discriminated union.\n * @param config - A set of config for the decoder.\n */\nexport function getDiscriminatedUnionDecoder<\n    const TVariants extends Variants<Decoder<any>>,\n    const TDiscriminatorProperty extends string = '__kind',\n>(\n    variants: TVariants,\n    config: DiscriminatedUnionCodecConfig<TDiscriminatorProperty, NumberDecoder> = {},\n): Decoder<GetDecoderTypeFromVariants<TVariants, TDiscriminatorProperty>> {\n    const discriminatorProperty = config.discriminator ?? '__kind';\n    const prefix = config.size ?? getU8Decoder();\n    return getUnionDecoder(\n        variants.map(([discriminator, variant]) =>\n            transformDecoder(getTupleDecoder([prefix, variant]), ([, value]) => ({\n                [discriminatorProperty]: discriminator,\n                ...value,\n            })),\n        ),\n        (bytes, offset) => Number(prefix.read(bytes, offset)[0]),\n    );\n}\n\n/**\n * Creates a discriminated union codec.\n *\n * @param variants - The variant codecs of the discriminated union.\n * @param config - A set of config for the codec.\n */\nexport function getDiscriminatedUnionCodec<\n    const TVariants extends Variants<Codec<any, any>>,\n    const TDiscriminatorProperty extends string = '__kind',\n>(\n    variants: TVariants,\n    config: DiscriminatedUnionCodecConfig<TDiscriminatorProperty, NumberCodec> = {},\n): Codec<\n    GetEncoderTypeFromVariants<TVariants, TDiscriminatorProperty>,\n    GetDecoderTypeFromVariants<TVariants, TDiscriminatorProperty> &\n        GetEncoderTypeFromVariants<TVariants, TDiscriminatorProperty>\n> {\n    return combineCodec(\n        getDiscriminatedUnionEncoder(variants, config),\n        getDiscriminatedUnionDecoder(variants, config) as Decoder<\n            GetDecoderTypeFromVariants<TVariants, TDiscriminatorProperty> &\n                GetEncoderTypeFromVariants<TVariants, TDiscriminatorProperty>\n        >,\n    );\n}\n\nfunction getVariantDiscriminator<const TVariants extends Variants<Decoder<any> | Encoder<any>>>(\n    variants: TVariants,\n    discriminatorValue: DiscriminatorValue,\n) {\n    const discriminator = variants.findIndex(([key]) => discriminatorValue === key);\n    if (discriminator < 0) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, {\n            value: discriminatorValue,\n            variants: variants.map(([key]) => key),\n        });\n    }\n    return discriminator;\n}\n\n/** @deprecated Use `getDiscriminatedUnionEncoder` instead. */\nexport const getDataEnumEncoder = getDiscriminatedUnionEncoder;\n\n/** @deprecated Use `getDiscriminatedUnionDecoder` instead. */\nexport const getDataEnumDecoder = getDiscriminatedUnionDecoder;\n\n/** @deprecated Use `getDiscriminatedUnionCodec` instead. */\nexport const getDataEnumCodec = getDiscriminatedUnionCodec;\n","/**\n * Defines the \"lookup object\" of an enum.\n *\n * @example\n * ```ts\n * enum Direction { Left, Right };\n * ```\n */\nexport type EnumLookupObject = { [key: string]: number | string };\n\n/**\n * Returns the allowed input for an enum.\n *\n * @example\n * ```ts\n * enum Direction { Left, Right };\n * type DirectionInput = GetEnumFrom<Direction>; // \"Left\" | \"Right\" | 0 | 1\n * ```\n */\nexport type GetEnumFrom<TEnum extends EnumLookupObject> = TEnum[keyof TEnum] | keyof TEnum;\n\n/**\n * Returns all the available variants of an enum.\n *\n * @example\n * ```ts\n * enum Direction { Left, Right };\n * type DirectionOutput = GetEnumTo<Direction>; // 0 | 1\n * ```\n */\nexport type GetEnumTo<TEnum extends EnumLookupObject> = TEnum[keyof TEnum];\n\nexport function getEnumStats(constructor: EnumLookupObject) {\n    const numericalValues = [\n        ...new Set(Object.values(constructor).filter(v => typeof v === 'number') as number[]),\n    ].sort();\n    const enumRecord = Object.fromEntries(Object.entries(constructor).slice(numericalValues.length)) as Record<\n        string,\n        number | string\n    >;\n    const enumKeys = Object.keys(enumRecord);\n    const enumValues = Object.values(enumRecord);\n    const stringValues: string[] = [\n        ...new Set([...enumKeys, ...enumValues.filter((v): v is string => typeof v === 'string')]),\n    ];\n\n    return { enumKeys, enumRecord, enumValues, numericalValues, stringValues };\n}\n\nexport function getEnumIndexFromVariant({\n    enumKeys,\n    enumValues,\n    variant,\n}: {\n    enumKeys: string[];\n    enumValues: (number | string)[];\n    variant: number | string | symbol;\n}): number {\n    const valueIndex = findLastIndex(enumValues, value => value === variant);\n    if (valueIndex >= 0) return valueIndex;\n    return enumKeys.findIndex(key => key === variant);\n}\n\nexport function getEnumIndexFromDiscriminator({\n    discriminator,\n    enumKeys,\n    enumValues,\n    useValuesAsDiscriminators,\n}: {\n    discriminator: number;\n    enumKeys: string[];\n    enumValues: (number | string)[];\n    useValuesAsDiscriminators: boolean;\n}): number {\n    if (!useValuesAsDiscriminators) {\n        return discriminator >= 0 && discriminator < enumKeys.length ? discriminator : -1;\n    }\n    return findLastIndex(enumValues, value => value === discriminator);\n}\n\nfunction findLastIndex<T>(array: Array<T>, predicate: (value: T, index: number, obj: T[]) => boolean): number {\n    let l = array.length;\n    while (l--) {\n        if (predicate(array[l], l, array)) return l;\n    }\n    return -1;\n}\n\nexport function formatNumericalValues(values: number[]): string {\n    if (values.length === 0) return '';\n    let range: [number, number] = [values[0], values[0]];\n    const ranges: string[] = [];\n    for (let index = 1; index < values.length; index++) {\n        const value = values[index];\n        if (range[1] + 1 === value) {\n            range[1] = value;\n        } else {\n            ranges.push(range[0] === range[1] ? `${range[0]}` : `${range[0]}-${range[1]}`);\n            range = [value, value];\n        }\n    }\n    ranges.push(range[0] === range[1] ? `${range[0]}` : `${range[0]}-${range[1]}`);\n    return ranges.join(', ');\n}\n","import {\n    Codec,\n    combineCodec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    transformDecoder,\n    transformEncoder,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport {\n    FixedSizeNumberCodec,\n    FixedSizeNumberDecoder,\n    FixedSizeNumberEncoder,\n    getU8Decoder,\n    getU8Encoder,\n    NumberCodec,\n    NumberDecoder,\n    NumberEncoder,\n} from '@solana/codecs-numbers';\nimport {\n    SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS,\n    SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE,\n    SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT,\n    SolanaError,\n} from '@solana/errors';\n\nimport {\n    EnumLookupObject,\n    formatNumericalValues,\n    GetEnumFrom,\n    getEnumIndexFromDiscriminator,\n    getEnumIndexFromVariant,\n    getEnumStats,\n    GetEnumTo,\n} from './enum-helpers';\n\n/** Defines the config for enum codecs. */\nexport type EnumCodecConfig<TDiscriminator extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The codec to use for the enum discriminator.\n     * @defaultValue u8 discriminator.\n     */\n    size?: TDiscriminator;\n\n    /**\n     * When set to `true`, numeric values will be used as discriminantors and\n     * an error will be thrown if a string value is found on the enum.\n     * @defaultValue `false`\n     */\n    useValuesAsDiscriminators?: boolean;\n};\n\n/**\n * Creates an enum encoder.\n *\n * @param constructor - The constructor of the enum.\n * @param config - A set of config for the encoder.\n */\nexport function getEnumEncoder<TEnum extends EnumLookupObject>(\n    constructor: TEnum,\n    config?: Omit<EnumCodecConfig<NumberEncoder>, 'size'>,\n): FixedSizeEncoder<GetEnumFrom<TEnum>, 1>;\nexport function getEnumEncoder<TEnum extends EnumLookupObject, TSize extends number>(\n    constructor: TEnum,\n    config: EnumCodecConfig<NumberEncoder> & { size: FixedSizeNumberEncoder<TSize> },\n): FixedSizeEncoder<GetEnumFrom<TEnum>, TSize>;\nexport function getEnumEncoder<TEnum extends EnumLookupObject>(\n    constructor: TEnum,\n    config?: EnumCodecConfig<NumberEncoder>,\n): VariableSizeEncoder<GetEnumFrom<TEnum>>;\nexport function getEnumEncoder<TEnum extends EnumLookupObject>(\n    constructor: TEnum,\n    config: EnumCodecConfig<NumberEncoder> = {},\n): Encoder<GetEnumFrom<TEnum>> {\n    const prefix = config.size ?? getU8Encoder();\n    const useValuesAsDiscriminators = config.useValuesAsDiscriminators ?? false;\n    const { enumKeys, enumValues, numericalValues, stringValues } = getEnumStats(constructor);\n    if (useValuesAsDiscriminators && enumValues.some(value => typeof value === 'string')) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, {\n            stringValues: enumValues.filter((v): v is string => typeof v === 'string'),\n        });\n    }\n    return transformEncoder(prefix, (variant: GetEnumFrom<TEnum>): number => {\n        const index = getEnumIndexFromVariant({ enumKeys, enumValues, variant });\n        if (index < 0) {\n            throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, {\n                formattedNumericalValues: formatNumericalValues(numericalValues),\n                numericalValues,\n                stringValues,\n                variant,\n            });\n        }\n        return useValuesAsDiscriminators ? (enumValues[index] as number) : index;\n    });\n}\n\n/**\n * Creates an enum decoder.\n *\n * @param constructor - The constructor of the enum.\n * @param config - A set of config for the decoder.\n */\nexport function getEnumDecoder<TEnum extends EnumLookupObject>(\n    constructor: TEnum,\n    config?: Omit<EnumCodecConfig<NumberDecoder>, 'size'>,\n): FixedSizeDecoder<GetEnumTo<TEnum>, 1>;\nexport function getEnumDecoder<TEnum extends EnumLookupObject, TSize extends number>(\n    constructor: TEnum,\n    config: EnumCodecConfig<NumberDecoder> & { size: FixedSizeNumberDecoder<TSize> },\n): FixedSizeDecoder<GetEnumTo<TEnum>, TSize>;\nexport function getEnumDecoder<TEnum extends EnumLookupObject>(\n    constructor: TEnum,\n    config?: EnumCodecConfig<NumberDecoder>,\n): VariableSizeDecoder<GetEnumTo<TEnum>>;\nexport function getEnumDecoder<TEnum extends EnumLookupObject>(\n    constructor: TEnum,\n    config: EnumCodecConfig<NumberDecoder> = {},\n): Decoder<GetEnumTo<TEnum>> {\n    const prefix = config.size ?? getU8Decoder();\n    const useValuesAsDiscriminators = config.useValuesAsDiscriminators ?? false;\n    const { enumKeys, enumValues, numericalValues } = getEnumStats(constructor);\n    if (useValuesAsDiscriminators && enumValues.some(value => typeof value === 'string')) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, {\n            stringValues: enumValues.filter((v): v is string => typeof v === 'string'),\n        });\n    }\n    return transformDecoder(prefix, (value: bigint | number): GetEnumTo<TEnum> => {\n        const discriminator = Number(value);\n        const index = getEnumIndexFromDiscriminator({\n            discriminator,\n            enumKeys,\n            enumValues,\n            useValuesAsDiscriminators,\n        });\n        if (index < 0) {\n            const validDiscriminators = useValuesAsDiscriminators\n                ? numericalValues\n                : [...Array(enumKeys.length).keys()];\n            throw new SolanaError(SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, {\n                discriminator,\n                formattedValidDiscriminators: formatNumericalValues(validDiscriminators),\n                validDiscriminators,\n            });\n        }\n        return enumValues[index] as GetEnumTo<TEnum>;\n    });\n}\n\n/**\n * Creates an enum codec.\n *\n * @param constructor - The constructor of the enum.\n * @param config - A set of config for the codec.\n */\nexport function getEnumCodec<TEnum extends EnumLookupObject>(\n    constructor: TEnum,\n    config?: Omit<EnumCodecConfig<NumberCodec>, 'size'>,\n): FixedSizeCodec<GetEnumFrom<TEnum>, GetEnumTo<TEnum>, 1>;\nexport function getEnumCodec<TEnum extends EnumLookupObject, TSize extends number>(\n    constructor: TEnum,\n    config: EnumCodecConfig<NumberCodec> & { size: FixedSizeNumberCodec<TSize> },\n): FixedSizeCodec<GetEnumFrom<TEnum>, GetEnumTo<TEnum>, TSize>;\nexport function getEnumCodec<TEnum extends EnumLookupObject>(\n    constructor: TEnum,\n    config?: EnumCodecConfig<NumberCodec>,\n): VariableSizeCodec<GetEnumFrom<TEnum>, GetEnumTo<TEnum>>;\nexport function getEnumCodec<TEnum extends EnumLookupObject>(\n    constructor: TEnum,\n    config: EnumCodecConfig<NumberCodec> = {},\n): Codec<GetEnumFrom<TEnum>, GetEnumTo<TEnum>> {\n    return combineCodec(getEnumEncoder(constructor, config), getEnumDecoder(constructor, config));\n}\n\n/** @deprecated Use `getEnumEncoder` instead. */\nexport const getScalarEnumEncoder = getEnumEncoder;\n\n/** @deprecated Use `getEnumDecoder` instead. */\nexport const getScalarEnumDecoder = getEnumDecoder;\n\n/** @deprecated Use `getEnumCodec` instead. */\nexport const getScalarEnumCodec = getEnumCodec;\n","import {\n    Codec,\n    combineCodec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    transformDecoder,\n    transformEncoder,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\n\nimport { getTupleDecoder, getTupleEncoder } from './tuple';\n\n/**\n * Prefixes a given encoder with a list of void encoders.\n * All void encoders are hidden from the returned encoder.\n */\nexport function getHiddenPrefixEncoder<TFrom>(\n    encoder: FixedSizeEncoder<TFrom>,\n    prefixedEncoders: readonly FixedSizeEncoder<void>[],\n): FixedSizeEncoder<TFrom>;\nexport function getHiddenPrefixEncoder<TFrom>(\n    encoder: Encoder<TFrom>,\n    prefixedEncoders: readonly Encoder<void>[],\n): VariableSizeEncoder<TFrom>;\nexport function getHiddenPrefixEncoder<TFrom>(\n    encoder: Encoder<TFrom>,\n    prefixedEncoders: readonly Encoder<void>[],\n): Encoder<TFrom> {\n    return transformEncoder(\n        getTupleEncoder([...prefixedEncoders, encoder]) as Encoder<readonly [...void[], TFrom]>,\n        (value: TFrom) => [...prefixedEncoders.map(() => undefined), value] as const,\n    );\n}\n\n/**\n * Prefixes a given decoder with a list of void decoder.\n * All void decoder are hidden from the returned decoder.\n */\nexport function getHiddenPrefixDecoder<TTo>(\n    decoder: FixedSizeDecoder<TTo>,\n    prefixedDecoders: readonly FixedSizeDecoder<void>[],\n): FixedSizeDecoder<TTo>;\nexport function getHiddenPrefixDecoder<TTo>(\n    decoder: Decoder<TTo>,\n    prefixedDecoders: readonly Decoder<void>[],\n): VariableSizeDecoder<TTo>;\nexport function getHiddenPrefixDecoder<TTo>(\n    decoder: Decoder<TTo>,\n    prefixedDecoders: readonly Decoder<void>[],\n): Decoder<TTo> {\n    return transformDecoder(\n        getTupleDecoder([...prefixedDecoders, decoder]) as Decoder<readonly [...void[], TTo]>,\n        tuple => tuple[tuple.length - 1] as TTo,\n    );\n}\n\n/**\n * Prefixes a given codec with a list of void codec.\n * All void codec are hidden from the returned codec.\n */\nexport function getHiddenPrefixCodec<TFrom, TTo extends TFrom>(\n    codec: FixedSizeCodec<TFrom, TTo>,\n    prefixedCodecs: readonly FixedSizeCodec<void>[],\n): FixedSizeCodec<TFrom, TTo>;\nexport function getHiddenPrefixCodec<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    prefixedCodecs: readonly Codec<void>[],\n): VariableSizeCodec<TFrom, TTo>;\nexport function getHiddenPrefixCodec<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    prefixedCodecs: readonly Codec<void>[],\n): Codec<TFrom, TTo> {\n    return combineCodec(getHiddenPrefixEncoder(codec, prefixedCodecs), getHiddenPrefixDecoder(codec, prefixedCodecs));\n}\n","import {\n    Codec,\n    combineCodec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    transformDecoder,\n    transformEncoder,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\n\nimport { getTupleDecoder, getTupleEncoder } from './tuple';\n\n/**\n * Suffixes a given encoder with a list of void encoders.\n * All void encoders are hidden from the returned encoder.\n */\nexport function getHiddenSuffixEncoder<TFrom>(\n    encoder: FixedSizeEncoder<TFrom>,\n    suffixedEncoders: readonly FixedSizeEncoder<void>[],\n): FixedSizeEncoder<TFrom>;\nexport function getHiddenSuffixEncoder<TFrom>(\n    encoder: Encoder<TFrom>,\n    suffixedEncoders: readonly Encoder<void>[],\n): VariableSizeEncoder<TFrom>;\nexport function getHiddenSuffixEncoder<TFrom>(\n    encoder: Encoder<TFrom>,\n    suffixedEncoders: readonly Encoder<void>[],\n): Encoder<TFrom> {\n    return transformEncoder(\n        getTupleEncoder([encoder, ...suffixedEncoders]) as Encoder<readonly [TFrom, ...void[]]>,\n        (value: TFrom) => [value, ...suffixedEncoders.map(() => undefined)] as const,\n    );\n}\n\n/**\n * Suffixes a given decoder with a list of void decoder.\n * All void decoder are hidden from the returned decoder.\n */\nexport function getHiddenSuffixDecoder<TTo>(\n    decoder: FixedSizeDecoder<TTo>,\n    suffixedDecoders: readonly FixedSizeDecoder<void>[],\n): FixedSizeDecoder<TTo>;\nexport function getHiddenSuffixDecoder<TTo>(\n    decoder: Decoder<TTo>,\n    suffixedDecoders: readonly Decoder<void>[],\n): VariableSizeDecoder<TTo>;\nexport function getHiddenSuffixDecoder<TTo>(\n    decoder: Decoder<TTo>,\n    suffixedDecoders: readonly Decoder<void>[],\n): Decoder<TTo> {\n    return transformDecoder(\n        getTupleDecoder([decoder, ...suffixedDecoders]) as Decoder<readonly [TTo, ...void[]]>,\n        tuple => tuple[0],\n    );\n}\n\n/**\n * Suffixes a given codec with a list of void codec.\n * All void codec are hidden from the returned codec.\n */\nexport function getHiddenSuffixCodec<TFrom, TTo extends TFrom>(\n    codec: FixedSizeCodec<TFrom, TTo>,\n    suffixedCodecs: readonly FixedSizeCodec<void>[],\n): FixedSizeCodec<TFrom, TTo>;\nexport function getHiddenSuffixCodec<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    suffixedCodecs: readonly Codec<void>[],\n): VariableSizeCodec<TFrom, TTo>;\nexport function getHiddenSuffixCodec<TFrom, TTo extends TFrom>(\n    codec: Codec<TFrom, TTo>,\n    suffixedCodecs: readonly Codec<void>[],\n): Codec<TFrom, TTo> {\n    return combineCodec(getHiddenSuffixEncoder(codec, suffixedCodecs), getHiddenSuffixDecoder(codec, suffixedCodecs));\n}\n","import {\n    Codec,\n    combineCodec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    transformDecoder,\n    transformEncoder,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport { NumberCodec, NumberDecoder, NumberEncoder } from '@solana/codecs-numbers';\n\nimport { ArrayLikeCodecSize, getArrayDecoder, getArrayEncoder } from './array';\nimport { getTupleDecoder, getTupleEncoder } from './tuple';\n\n/** Defines the config for Map codecs. */\nexport type MapCodecConfig<TPrefix extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The size of the array.\n     * @defaultValue u32 prefix.\n     */\n    size?: ArrayLikeCodecSize<TPrefix>;\n};\n\n/**\n * Creates a encoder for a map.\n *\n * @param key - The encoder to use for the map's keys.\n * @param value - The encoder to use for the map's values.\n * @param config - A set of config for the encoder.\n */\nexport function getMapEncoder<TFromKey, TFromValue>(\n    key: Encoder<TFromKey>,\n    value: Encoder<TFromValue>,\n    config: MapCodecConfig<NumberEncoder> & { size: 0 },\n): FixedSizeEncoder<Map<TFromKey, TFromValue>, 0>;\nexport function getMapEncoder<TFromKey, TFromValue>(\n    key: FixedSizeEncoder<TFromKey>,\n    value: FixedSizeEncoder<TFromValue>,\n    config: MapCodecConfig<NumberEncoder> & { size: number },\n): FixedSizeEncoder<Map<TFromKey, TFromValue>>;\nexport function getMapEncoder<TFromKey, TFromValue>(\n    key: Encoder<TFromKey>,\n    value: Encoder<TFromValue>,\n    config?: MapCodecConfig<NumberEncoder>,\n): VariableSizeEncoder<Map<TFromKey, TFromValue>>;\nexport function getMapEncoder<TFromKey, TFromValue>(\n    key: Encoder<TFromKey>,\n    value: Encoder<TFromValue>,\n    config: MapCodecConfig<NumberEncoder> = {},\n): Encoder<Map<TFromKey, TFromValue>> {\n    return transformEncoder(\n        getArrayEncoder(getTupleEncoder([key, value]), config as object),\n        (map: Map<TFromKey, TFromValue>): [TFromKey, TFromValue][] => [...map.entries()],\n    );\n}\n\n/**\n * Creates a decoder for a map.\n *\n * @param key - The decoder to use for the map's keys.\n * @param value - The decoder to use for the map's values.\n * @param config - A set of config for the decoder.\n */\nexport function getMapDecoder<TToKey, TToValue>(\n    key: Decoder<TToKey>,\n    value: Decoder<TToValue>,\n    config: MapCodecConfig<NumberDecoder> & { size: 0 },\n): FixedSizeDecoder<Map<TToKey, TToValue>, 0>;\nexport function getMapDecoder<TToKey, TToValue>(\n    key: FixedSizeDecoder<TToKey>,\n    value: FixedSizeDecoder<TToValue>,\n    config: MapCodecConfig<NumberDecoder> & { size: number },\n): FixedSizeDecoder<Map<TToKey, TToValue>>;\nexport function getMapDecoder<TToKey, TToValue>(\n    key: Decoder<TToKey>,\n    value: Decoder<TToValue>,\n    config?: MapCodecConfig<NumberDecoder>,\n): VariableSizeDecoder<Map<TToKey, TToValue>>;\nexport function getMapDecoder<TToKey, TToValue>(\n    key: Decoder<TToKey>,\n    value: Decoder<TToValue>,\n    config: MapCodecConfig<NumberDecoder> = {},\n): Decoder<Map<TToKey, TToValue>> {\n    return transformDecoder(\n        getArrayDecoder(getTupleDecoder([key, value]), config as object) as Decoder<[TToKey, TToValue][]>,\n        (entries: [TToKey, TToValue][]): Map<TToKey, TToValue> => new Map(entries),\n    );\n}\n\n/**\n * Creates a codec for a map.\n *\n * @param key - The codec to use for the map's keys.\n * @param value - The codec to use for the map's values.\n * @param config - A set of config for the codec.\n */\nexport function getMapCodec<\n    TFromKey,\n    TFromValue,\n    TToKey extends TFromKey = TFromKey,\n    TToValue extends TFromValue = TFromValue,\n>(\n    key: Codec<TFromKey, TToKey>,\n    value: Codec<TFromValue, TToValue>,\n    config: MapCodecConfig<NumberCodec> & { size: 0 },\n): FixedSizeCodec<Map<TFromKey, TFromValue>, Map<TToKey, TToValue>, 0>;\nexport function getMapCodec<\n    TFromKey,\n    TFromValue,\n    TToKey extends TFromKey = TFromKey,\n    TToValue extends TFromValue = TFromValue,\n>(\n    key: FixedSizeCodec<TFromKey, TToKey>,\n    value: FixedSizeCodec<TFromValue, TToValue>,\n    config: MapCodecConfig<NumberCodec> & { size: number },\n): FixedSizeCodec<Map<TFromKey, TFromValue>, Map<TToKey, TToValue>>;\nexport function getMapCodec<\n    TFromKey,\n    TFromValue,\n    TToKey extends TFromKey = TFromKey,\n    TToValue extends TFromValue = TFromValue,\n>(\n    key: Codec<TFromKey, TToKey>,\n    value: Codec<TFromValue, TToValue>,\n    config?: MapCodecConfig<NumberCodec>,\n): VariableSizeCodec<Map<TFromKey, TFromValue>, Map<TToKey, TToValue>>;\nexport function getMapCodec<\n    TFromKey,\n    TFromValue,\n    TToKey extends TFromKey = TFromKey,\n    TToValue extends TFromValue = TFromValue,\n>(\n    key: Codec<TFromKey, TToKey>,\n    value: Codec<TFromValue, TToValue>,\n    config: MapCodecConfig<NumberCodec> = {},\n): Codec<Map<TFromKey, TFromValue>, Map<TToKey, TToValue>> {\n    return combineCodec(getMapEncoder(key, value, config as object), getMapDecoder(key, value, config as object));\n}\n","import {\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    ReadonlyUint8Array,\n} from '@solana/codecs-core';\n\n/**\n * Creates a void encoder.\n */\nexport function getUnitEncoder(): FixedSizeEncoder<void, 0> {\n    return createEncoder({\n        fixedSize: 0,\n        write: (_value, _bytes, offset) => offset,\n    });\n}\n\n/**\n * Creates a void decoder.\n */\nexport function getUnitDecoder(): FixedSizeDecoder<void, 0> {\n    return createDecoder({\n        fixedSize: 0,\n        read: (_bytes: ReadonlyUint8Array | Uint8Array, offset) => [undefined, offset],\n    });\n}\n\n/**\n * Creates a void codec.\n */\nexport function getUnitCodec(): FixedSizeCodec<void, void, 0> {\n    return combineCodec(getUnitEncoder(), getUnitDecoder());\n}\n","import {\n    assertIsFixedSize,\n    Codec,\n    combineCodec,\n    containsBytes,\n    Decoder,\n    Encoder,\n    fixDecoderSize,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    fixEncoderSize,\n    ReadonlyUint8Array,\n    transformDecoder,\n    transformEncoder,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport {\n    FixedSizeNumberCodec,\n    FixedSizeNumberDecoder,\n    FixedSizeNumberEncoder,\n    getU8Decoder,\n    getU8Encoder,\n    NumberCodec,\n    NumberDecoder,\n    NumberEncoder,\n} from '@solana/codecs-numbers';\n\nimport { getBooleanDecoder, getBooleanEncoder } from './boolean';\nimport { getConstantDecoder, getConstantEncoder } from './constant';\nimport { getTupleDecoder, getTupleEncoder } from './tuple';\nimport { getUnionDecoder, getUnionEncoder } from './union';\nimport { getUnitDecoder, getUnitEncoder } from './unit';\n\n/** Defines the config for nullable codecs. */\nexport type NullableCodecConfig<TPrefix extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * Defines how the `None` (or `null`) value should be represented.\n     *\n     * By default, no none value is used. This means a `null` value will be\n     * represented by the absence of the item.\n     *\n     * When `'zeroes'` is provided, a `null` value will skip the bytes that would\n     * have been used for the item. Note that this returns a fixed-size codec\n     * and thus will only work if the item codec is of fixed size.\n     *\n     * When a custom byte array is provided, a `null` value will be represented\n     * by the provided byte array. Note that this returns a variable-size codec\n     * since the byte array representing `null` does not need to match the size\n     * of the item codec.\n     *\n     * @defaultValue No none value is used.\n     */\n    noneValue?: ReadonlyUint8Array | 'zeroes';\n\n    /**\n     * The codec to use for the boolean prefix, if any.\n     *\n     * By default a `u8` number is used as a prefix to determine if the value is `null`.\n     * The value `0` is encoded for `null` and `1` if the value is present.\n     * This can be set to any number codec to customize the prefix.\n     *\n     * When `null` is provided, no prefix is used and the `noneValue` is used to\n     * determine if the value is `null`. If no `noneValue` is provided, then the\n     * absence of any bytes is used to determine if the value is `null`.\n     *\n     * @defaultValue `u8` prefix.\n     */\n    prefix?: TPrefix | null;\n};\n\n/**\n * Creates a encoder for an optional value using `null` as the `None` value.\n *\n * @param item - The encoder to use for the value that may be present.\n * @param config - A set of config for the encoder.\n */\nexport function getNullableEncoder<TFrom, TSize extends number>(\n    item: FixedSizeEncoder<TFrom, TSize>,\n    config: NullableCodecConfig<NumberEncoder> & { noneValue: 'zeroes'; prefix: null },\n): FixedSizeEncoder<TFrom | null, TSize>;\nexport function getNullableEncoder<TFrom>(\n    item: FixedSizeEncoder<TFrom>,\n    config: NullableCodecConfig<FixedSizeNumberEncoder> & { noneValue: 'zeroes' },\n): FixedSizeEncoder<TFrom | null>;\nexport function getNullableEncoder<TFrom>(\n    item: FixedSizeEncoder<TFrom>,\n    config: NullableCodecConfig<NumberEncoder> & { noneValue: 'zeroes' },\n): VariableSizeEncoder<TFrom | null>;\nexport function getNullableEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config?: NullableCodecConfig<NumberEncoder> & { noneValue?: ReadonlyUint8Array },\n): VariableSizeEncoder<TFrom | null>;\nexport function getNullableEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config: NullableCodecConfig<NumberEncoder> = {},\n): Encoder<TFrom | null> {\n    const prefix = (() => {\n        if (config.prefix === null) {\n            return transformEncoder(getUnitEncoder(), (_boolean: boolean) => undefined);\n        }\n        return getBooleanEncoder({ size: config.prefix ?? getU8Encoder() });\n    })();\n    const noneValue = (() => {\n        if (config.noneValue === 'zeroes') {\n            assertIsFixedSize(item);\n            return fixEncoderSize(getUnitEncoder(), item.fixedSize);\n        }\n        if (!config.noneValue) {\n            return getUnitEncoder();\n        }\n        return getConstantEncoder(config.noneValue);\n    })();\n\n    return getUnionEncoder(\n        [\n            transformEncoder(getTupleEncoder([prefix, noneValue]), (_value: null): [boolean, void] => [\n                false,\n                undefined,\n            ]),\n            transformEncoder(getTupleEncoder([prefix, item]), (value: TFrom): [boolean, TFrom] => [true, value]),\n        ],\n        variant => Number(variant !== null),\n    );\n}\n\n/**\n * Creates a decoder for an optional value using `null` as the `None` value.\n *\n * @param item - The decoder to use for the value that may be present.\n * @param config - A set of config for the decoder.\n */\nexport function getNullableDecoder<TTo, TSize extends number>(\n    item: FixedSizeDecoder<TTo, TSize>,\n    config: NullableCodecConfig<NumberDecoder> & { noneValue: 'zeroes'; prefix: null },\n): FixedSizeDecoder<TTo | null, TSize>;\nexport function getNullableDecoder<TTo>(\n    item: FixedSizeDecoder<TTo>,\n    config: NullableCodecConfig<FixedSizeNumberDecoder> & { noneValue: 'zeroes' },\n): FixedSizeDecoder<TTo | null>;\nexport function getNullableDecoder<TTo>(\n    item: FixedSizeDecoder<TTo>,\n    config: NullableCodecConfig<NumberDecoder> & { noneValue: 'zeroes' },\n): VariableSizeDecoder<TTo | null>;\nexport function getNullableDecoder<TTo>(\n    item: Decoder<TTo>,\n    config?: NullableCodecConfig<NumberDecoder> & { noneValue?: ReadonlyUint8Array },\n): VariableSizeDecoder<TTo | null>;\nexport function getNullableDecoder<TTo>(\n    item: Decoder<TTo>,\n    config: NullableCodecConfig<NumberDecoder> = {},\n): Decoder<TTo | null> {\n    const prefix = (() => {\n        if (config.prefix === null) {\n            return transformDecoder(getUnitDecoder(), () => false);\n        }\n        return getBooleanDecoder({ size: config.prefix ?? getU8Decoder() });\n    })();\n    const noneValue = (() => {\n        if (config.noneValue === 'zeroes') {\n            assertIsFixedSize(item);\n            return fixDecoderSize(getUnitDecoder(), item.fixedSize);\n        }\n        if (!config.noneValue) {\n            return getUnitDecoder();\n        }\n        return getConstantDecoder(config.noneValue);\n    })();\n\n    return getUnionDecoder(\n        [\n            transformDecoder(getTupleDecoder([prefix, noneValue]), () => null),\n            transformDecoder(getTupleDecoder([prefix, item]), ([, value]): TTo => value),\n        ],\n        (bytes, offset) => {\n            if (config.prefix === null && !config.noneValue) {\n                return Number(offset < bytes.length);\n            }\n            if (config.prefix === null && config.noneValue != null) {\n                const zeroValue =\n                    config.noneValue === 'zeroes' ? new Uint8Array(noneValue.fixedSize).fill(0) : config.noneValue;\n                return containsBytes(bytes, zeroValue, offset) ? 0 : 1;\n            }\n            return Number(prefix.read(bytes, offset)[0]);\n        },\n    );\n}\n\n/**\n * Creates a codec for an optional value using `null` as the `None` value.\n *\n * @param item - The codec to use for the value that may be present.\n * @param config - A set of config for the codec.\n */\nexport function getNullableCodec<TFrom, TTo extends TFrom, TSize extends number>(\n    item: FixedSizeCodec<TFrom, TTo, TSize>,\n    config: NullableCodecConfig<NumberCodec> & { noneValue: 'zeroes'; prefix: null },\n): FixedSizeCodec<TFrom | null, TTo | null, TSize>;\nexport function getNullableCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: FixedSizeCodec<TFrom, TTo>,\n    config: NullableCodecConfig<FixedSizeNumberCodec> & { noneValue: 'zeroes' },\n): FixedSizeCodec<TFrom | null, TTo | null>;\nexport function getNullableCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: FixedSizeCodec<TFrom, TTo>,\n    config: NullableCodecConfig<NumberCodec> & { noneValue: 'zeroes' },\n): VariableSizeCodec<TFrom | null, TTo | null>;\nexport function getNullableCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config?: NullableCodecConfig<NumberCodec> & { noneValue?: ReadonlyUint8Array },\n): VariableSizeCodec<TFrom | null, TTo | null>;\nexport function getNullableCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config: NullableCodecConfig<NumberCodec> = {},\n): Codec<TFrom | null, TTo | null> {\n    type ConfigCast = NullableCodecConfig<NumberCodec> & { noneValue?: ReadonlyUint8Array };\n    return combineCodec(\n        getNullableEncoder<TFrom>(item, config as ConfigCast),\n        getNullableDecoder<TTo>(item, config as ConfigCast),\n    );\n}\n","import {\n    Codec,\n    combineCodec,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    transformDecoder,\n    transformEncoder,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\nimport { NumberCodec, NumberDecoder, NumberEncoder } from '@solana/codecs-numbers';\n\nimport { ArrayLikeCodecSize, getArrayDecoder, getArrayEncoder } from './array';\n\n/** Defines the config for set codecs. */\nexport type SetCodecConfig<TPrefix extends NumberCodec | NumberDecoder | NumberEncoder> = {\n    /**\n     * The size of the set.\n     * @defaultValue u32 prefix.\n     */\n    size?: ArrayLikeCodecSize<TPrefix>;\n};\n\n/**\n * Encodes an set of items.\n *\n * @param item - The encoder to use for the set's items.\n * @param config - A set of config for the encoder.\n */\nexport function getSetEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config: SetCodecConfig<NumberEncoder> & { size: 0 },\n): FixedSizeEncoder<Set<TFrom>, 0>;\nexport function getSetEncoder<TFrom>(\n    item: FixedSizeEncoder<TFrom>,\n    config: SetCodecConfig<NumberEncoder> & { size: number },\n): FixedSizeEncoder<Set<TFrom>>;\nexport function getSetEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config?: SetCodecConfig<NumberEncoder>,\n): VariableSizeEncoder<Set<TFrom>>;\nexport function getSetEncoder<TFrom>(\n    item: Encoder<TFrom>,\n    config: SetCodecConfig<NumberEncoder> = {},\n): Encoder<Set<TFrom>> {\n    return transformEncoder(getArrayEncoder(item, config as object), (set: Set<TFrom>): TFrom[] => [...set]);\n}\n\n/**\n * Decodes an set of items.\n *\n * @param item - The encoder to use for the set's items.\n * @param config - A set of config for the encoder.\n */\nexport function getSetDecoder<TTo>(\n    item: Decoder<TTo>,\n    config: SetCodecConfig<NumberDecoder> & { size: 0 },\n): FixedSizeDecoder<Set<TTo>, 0>;\nexport function getSetDecoder<TTo>(\n    item: FixedSizeDecoder<TTo>,\n    config: SetCodecConfig<NumberDecoder> & { size: number },\n): FixedSizeDecoder<Set<TTo>>;\nexport function getSetDecoder<TTo>(\n    item: Decoder<TTo>,\n    config?: SetCodecConfig<NumberDecoder>,\n): VariableSizeDecoder<Set<TTo>>;\nexport function getSetDecoder<TTo>(item: Decoder<TTo>, config: SetCodecConfig<NumberDecoder> = {}): Decoder<Set<TTo>> {\n    return transformDecoder(getArrayDecoder(item, config as object), (entries: TTo[]): Set<TTo> => new Set(entries));\n}\n\n/**\n * Creates a codec for an set of items.\n *\n * @param item - The codec to use for the set's items.\n * @param config - A set of config for the codec.\n */\nexport function getSetCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config: SetCodecConfig<NumberCodec> & { size: 0 },\n): FixedSizeCodec<Set<TFrom>, Set<TTo>, 0>;\nexport function getSetCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: FixedSizeCodec<TFrom, TTo>,\n    config: SetCodecConfig<NumberCodec> & { size: number },\n): FixedSizeCodec<Set<TFrom>, Set<TTo>>;\nexport function getSetCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config?: SetCodecConfig<NumberCodec>,\n): VariableSizeCodec<Set<TFrom>, Set<TTo>>;\nexport function getSetCodec<TFrom, TTo extends TFrom = TFrom>(\n    item: Codec<TFrom, TTo>,\n    config: SetCodecConfig<NumberCodec> = {},\n): Codec<Set<TFrom>, Set<TTo>> {\n    return combineCodec(getSetEncoder(item, config as object), getSetDecoder(item, config as object));\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n    Codec,\n    combineCodec,\n    createDecoder,\n    createEncoder,\n    Decoder,\n    Encoder,\n    FixedSizeCodec,\n    FixedSizeDecoder,\n    FixedSizeEncoder,\n    getEncodedSize,\n    ReadonlyUint8Array,\n    VariableSizeCodec,\n    VariableSizeDecoder,\n    VariableSizeEncoder,\n} from '@solana/codecs-core';\n\nimport { DrainOuterGeneric, getFixedSize, getMaxSize, sumCodecSizes } from './utils';\n\ntype Fields<T> = readonly (readonly [string, T])[];\ntype ArrayIndices<T extends readonly unknown[]> = Exclude<Partial<T>['length'], T['length']> & number;\n\ntype GetEncoderTypeFromFields<TFields extends Fields<Encoder<any>>> = DrainOuterGeneric<{\n    [I in ArrayIndices<TFields> as TFields[I][0]]: TFields[I][1] extends Encoder<infer TFrom> ? TFrom : never;\n}>;\n\ntype GetDecoderTypeFromFields<TFields extends Fields<Decoder<any>>> = DrainOuterGeneric<{\n    [I in ArrayIndices<TFields> as TFields[I][0]]: TFields[I][1] extends Decoder<infer TTo> ? TTo : never;\n}>;\n\n/**\n * Creates a encoder for a custom object.\n *\n * @param fields - The name and encoder of each field.\n */\nexport function getStructEncoder<const TFields extends Fields<FixedSizeEncoder<any>>>(\n    fields: TFields,\n): FixedSizeEncoder<GetEncoderTypeFromFields<TFields>>;\nexport function getStructEncoder<const TFields extends Fields<Encoder<any>>>(\n    fields: TFields,\n): VariableSizeEncoder<GetEncoderTypeFromFields<TFields>>;\nexport function getStructEncoder<const TFields extends Fields<Encoder<any>>>(\n    fields: TFields,\n): Encoder<GetEncoderTypeFromFields<TFields>> {\n    type TFrom = GetEncoderTypeFromFields<TFields>;\n    const fieldCodecs = fields.map(([, codec]) => codec);\n    const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n    const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? undefined;\n\n    return createEncoder({\n        ...(fixedSize === null\n            ? {\n                  getSizeFromValue: (value: TFrom) =>\n                      fields\n                          .map(([key, codec]) => getEncodedSize(value[key as keyof TFrom], codec))\n                          .reduce((all, one) => all + one, 0),\n                  maxSize,\n              }\n            : { fixedSize }),\n        write: (struct: TFrom, bytes, offset) => {\n            fields.forEach(([key, codec]) => {\n                offset = codec.write(struct[key as keyof TFrom], bytes, offset);\n            });\n            return offset;\n        },\n    });\n}\n\n/**\n * Creates a decoder for a custom object.\n *\n * @param fields - The name and decoder of each field.\n */\nexport function getStructDecoder<const TFields extends Fields<FixedSizeDecoder<any>>>(\n    fields: TFields,\n): FixedSizeDecoder<GetDecoderTypeFromFields<TFields>>;\nexport function getStructDecoder<const TFields extends Fields<Decoder<any>>>(\n    fields: TFields,\n): VariableSizeDecoder<GetDecoderTypeFromFields<TFields>>;\nexport function getStructDecoder<const TFields extends Fields<Decoder<any>>>(\n    fields: TFields,\n): Decoder<GetDecoderTypeFromFields<TFields>> {\n    type TTo = GetDecoderTypeFromFields<TFields>;\n    const fieldCodecs = fields.map(([, codec]) => codec);\n    const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n    const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? undefined;\n\n    return createDecoder({\n        ...(fixedSize === null ? { maxSize } : { fixedSize }),\n        read: (bytes: ReadonlyUint8Array | Uint8Array, offset) => {\n            const struct = {} as TTo;\n            fields.forEach(([key, codec]) => {\n                const [value, newOffset] = codec.read(bytes, offset);\n                offset = newOffset;\n                struct[key as keyof TTo] = value;\n            });\n            return [struct, offset];\n        },\n    });\n}\n\n/**\n * Creates a codec for a custom object.\n *\n * @param fields - The name and codec of each field.\n */\nexport function getStructCodec<const TFields extends Fields<FixedSizeCodec<any>>>(\n    fields: TFields,\n): FixedSizeCodec<\n    GetEncoderTypeFromFields<TFields>,\n    GetDecoderTypeFromFields<TFields> & GetEncoderTypeFromFields<TFields>\n>;\nexport function getStructCodec<const TFields extends Fields<Codec<any>>>(\n    fields: TFields,\n): VariableSizeCodec<\n    GetEncoderTypeFromFields<TFields>,\n    GetDecoderTypeFromFields<TFields> & GetEncoderTypeFromFields<TFields>\n>;\nexport function getStructCodec<const TFields extends Fields<Codec<any>>>(\n    fields: TFields,\n): Codec<GetEncoderTypeFromFields<TFields>, GetDecoderTypeFromFields<TFields> & GetEncoderTypeFromFields<TFields>> {\n    return combineCodec(\n        getStructEncoder(fields),\n        getStructDecoder(fields) as Decoder<GetDecoderTypeFromFields<TFields> & GetEncoderTypeFromFields<TFields>>,\n    );\n}\n"],"names":["newOffset","createEncoder","createDecoder","combineCodec","SolanaError","getEncodedSize","isFixedSize","getU8Encoder","transformEncoder","getU8Decoder","transformDecoder","containsBytes"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"debugId":null}},
    {"offset": {"line": 6089, "column": 0}, "map": {"version":3,"file":"tokenGroup.js","sourceRoot":"","sources":["../../../src/state/tokenGroup.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;;;;;AAE1F,MAAM,eAAe,oTAAG,iBAAA,AAAc,EAAC;IACnC;QAAC,iBAAiB;6RAAE,eAAA,AAAY,mTAAC,gBAAA,AAAa,EAAE,GAAE,EAAE,CAAC;KAAC;IACtD;QAAC,MAAM;6RAAE,eAAA,AAAY,mTAAC,gBAAA,AAAa,EAAE,GAAE,EAAE,CAAC;KAAC;IAC3C;QAAC,MAAM;mSAAE,cAAA,AAAW,EAAE;KAAC;IACvB;QAAC,SAAS;QAAE,ySAAA,AAAW,EAAE;KAAC;CAC7B,CAAC,CAAC;AAEI,MAAM,gBAAgB,GAAG,eAAe,CAAC,SAAS,CAAC;AAa1D,4CAA4C;AAC5C,SAAS,YAAY,CAAC,MAA0B;IAC5C,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE,CAAC;QACrC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;YAClB,OAAO,KAAK,CAAC;QACjB,CAAC;IACL,CAAC;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAGK,SAAU,cAAc,CAAC,KAAiB;IAC5C,8EAA8E;IAC9E,MAAM,eAAe,GAAG,KAAK,CAAC,eAAe,IAAI,uUAAS,CAAC,OAAO,CAAC;IACnE,OAAO,eAAe,CAAC,MAAM,CAAC;QAC1B,eAAe,EAAE,eAAe,CAAC,QAAQ,EAAE;QAC3C,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;QAC3B,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,OAAO,EAAE,KAAK,CAAC,OAAO;KACzB,CAAC,CAAC;AACP,CAAC;AAGK,SAAU,gBAAgB,CAAC,MAAgD;IAC7E,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAE5C,OAAO,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,GACnC;QACI,IAAI,EAAE,+TAAI,YAAS,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,OAAO,EAAE,IAAI,CAAC,OAAO;KACxB,GACD;QACI,eAAe,EAAE,+TAAI,YAAS,CAAC,IAAI,CAAC,eAAe,CAAC;QACpD,IAAI,EAAE,+TAAI,YAAS,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,OAAO,EAAE,IAAI,CAAC,OAAO;KACxB,CAAC;AACZ,CAAC","debugId":null}},
    {"offset": {"line": 6157, "column": 0}, "map": {"version":3,"file":"tokenGroupMember.js","sourceRoot":"","sources":["../../../src/state/tokenGroupMember.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;;;;;AAE1F,MAAM,qBAAqB,oTAAG,iBAAA,AAAc,EAAC;IACzC;QAAC,MAAM;6RAAE,eAAA,AAAY,EAAC,iUAAA,AAAa,EAAE,GAAE,EAAE,CAAC;KAAC;IAC3C;QAAC,OAAO;6RAAE,eAAA,AAAY,GAAC,gUAAA,AAAa,EAAE,GAAE,EAAE,CAAC;KAAC;IAC5C;QAAC,cAAc;mSAAE,cAAA,AAAW,EAAE;KAAC;CAClC,CAAC,CAAC;AAEI,MAAM,uBAAuB,GAAG,qBAAqB,CAAC,SAAS,CAAC;AAYjE,SAAU,oBAAoB,CAAC,MAAwB;IACzD,OAAO,qBAAqB,CAAC,MAAM,CAAC;QAChC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE;QAC5B,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE;QAC9B,YAAY,EAAE,MAAM,CAAC,YAAY;KACpC,CAAC,CAAC;AACP,CAAC;AAGK,SAAU,sBAAsB,CAAC,MAAgD;IACnF,MAAM,IAAI,GAAG,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAClD,OAAO;QACH,IAAI,EAAE,+TAAI,YAAS,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,KAAK,EAAE,+TAAI,YAAS,CAAC,IAAI,CAAC,KAAK,CAAC;QAChC,YAAY,EAAE,IAAI,CAAC,YAAY;KAClC,CAAC;AACN,CAAC","debugId":null}},
    {"offset": {"line": 6204, "column": 0}, "map": {"version":3,"file":"state.js","sourceRoot":"","sources":["../../../../src/extensions/groupMemberPointer/state.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;;AAW/D,MAAM,wBAAwB,8OAAG,SAAA,AAAM,EAAqD;gWAC/F,YAAA,AAAS,EAAC,WAAW,CAAC;gWACtB,YAAA,AAAS,EAAC,eAAe,CAAC;CAC7B,CAAC,CAAC;AAEI,MAAM,yBAAyB,GAAG,wBAAwB,CAAC,IAAI,CAAC;AAEjE,SAAU,0BAA0B,CAAC,IAAU;IACjD,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACvF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG,wBAAwB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAEpF,wCAAwC;QACxC,OAAO;YACH,SAAS,EAAE,SAAS,CAAC,MAAM,4TAAC,YAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;YACjE,aAAa,EAAE,aAAa,CAAC,MAAM,4TAAC,YAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa;SAChF,CAAC;IACN,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC","debugId":null}},
    {"offset": {"line": 6242, "column": 0}, "map": {"version":3,"file":"state.js","sourceRoot":"","sources":["../../../../src/extensions/groupPointer/state.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;;AAW/D,MAAM,kBAAkB,8OAAG,SAAA,AAAM,EAAoD;gWACxF,YAAA,AAAS,EAAC,WAAW,CAAC;gWACtB,YAAA,AAAS,EAAC,cAAc,CAAC;CAC5B,CAAC,CAAC;AAEI,MAAM,kBAAkB,GAAG,kBAAkB,CAAC,IAAI,CAAC;AAEpD,SAAU,oBAAoB,CAAC,IAAU;IAC3C,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACjF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAE7E,wCAAwC;QACxC,OAAO;YACH,SAAS,EAAE,SAAS,CAAC,MAAM,4TAAC,YAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;YACjE,YAAY,EAAE,YAAY,CAAC,MAAM,4TAAC,YAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY;SAC7E,CAAC;IACN,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC","debugId":null}},
    {"offset": {"line": 6280, "column": 0}, "map": {"version":3,"file":"immutableOwner.js","sourceRoot":"","sources":["../../../src/extensions/immutableOwner.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAE/C,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;;;AAM9D,MAAM,oBAAoB,8OAAG,SAAA,AAAM,EAAiB,EAAE,CAAC,CAAC;AAExD,MAAM,oBAAoB,GAAG,oBAAoB,CAAC,IAAI,CAAC;AAExD,SAAU,iBAAiB,CAAC,OAAgB;IAC9C,MAAM,aAAa,GAAG,0ZAAA,AAAgB,qYAAC,gBAAa,CAAC,cAAc,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;IACtF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACtD,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC","debugId":null}},
    {"offset": {"line": 6305, "column": 0}, "map": {"version":3,"file":"state.js","sourceRoot":"","sources":["../../../../src/extensions/interestBearingMint/state.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;;AAGxD,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;AAU/D,MAAM,oCAAoC,8OAAG,SAAA,AAAM,EAAiC;gWACvF,YAAA,AAAS,EAAC,eAAe,CAAC;KAC1B,iPAAA,AAAI,EAAC,yBAAyB,CAAC;+OAC/B,MAAA,AAAG,EAAC,sBAAsB,CAAC;+OAC3B,OAAA,AAAI,EAAC,qBAAqB,CAAC;+OAC3B,MAAA,AAAG,EAAC,aAAa,CAAC;CACrB,CAAC,CAAC;AAEI,MAAM,uCAAuC,GAAG,oCAAoC,CAAC,IAAI,CAAC;AAE3F,SAAU,iCAAiC,CAAC,IAAU;IACxD,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1F,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,oCAAoC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACtE,CAAC;IACD,OAAO,IAAI,CAAC;AAChB,CAAC","debugId":null}},
    {"offset": {"line": 6338, "column": 0}, "map": {"version":3,"file":"state.js","sourceRoot":"","sources":["../../../../src/extensions/memoTransfer/state.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,IAAI,EAAE,MAAM,6BAA6B,CAAC;;AAEnD,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;AAS/D,MAAM,kBAAkB,8OAAG,SAAA,AAAM,EAAe;KAAC,oWAAA,AAAI,EAAC,8BAA8B,CAAC;CAAC,CAAC,CAAC;AAExF,MAAM,kBAAkB,GAAG,kBAAkB,CAAC,IAAI,CAAC;AAEpD,SAAU,eAAe,CAAC,OAAgB;IAC5C,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,YAAY,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;IACpF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACpD,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC","debugId":null}},
    {"offset": {"line": 6368, "column": 0}, "map": {"version":3,"file":"state.js","sourceRoot":"","sources":["../../../../src/extensions/metadataPointer/state.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;;AAW/D,MAAM,qBAAqB,8OAAG,SAAA,AAAM,EAAuD;gWAC9F,YAAA,AAAS,EAAC,WAAW,CAAC;gWACtB,YAAA,AAAS,EAAC,iBAAiB,CAAC;CAC/B,CAAC,CAAC;AAEI,MAAM,qBAAqB,GAAG,qBAAqB,CAAC,IAAI,CAAC;AAE1D,SAAU,uBAAuB,CAAC,IAAU;IAC9C,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACpF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,qBAAqB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAEnF,wCAAwC;QACxC,OAAO;YACH,SAAS,EAAE,SAAS,CAAC,MAAM,4TAAC,YAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;YACjE,eAAe,EAAE,eAAe,CAAC,MAAM,4TAAC,YAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe;SACtF,CAAC;IACN,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC","debugId":null}},
    {"offset": {"line": 6406, "column": 0}, "map": {"version":3,"file":"mintCloseAuthority.js","sourceRoot":"","sources":["../../../src/extensions/mintCloseAuthority.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;;AAGxD,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;;;;AAQ9D,MAAM,wBAAwB,8OAAG,SAAA,AAAM,EAAqB;KAAC,uWAAA,AAAS,EAAC,gBAAgB,CAAC;CAAC,CAAC,CAAC;AAE3F,MAAM,yBAAyB,GAAG,wBAAwB,CAAC,IAAI,CAAC;AAEjE,SAAU,qBAAqB,CAAC,IAAU;IAC5C,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACvF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,wBAAwB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAC1D,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC","debugId":null}},
    {"offset": {"line": 6436, "column": 0}, "map": {"version":3,"file":"nonTransferable.js","sourceRoot":"","sources":["../../../src/extensions/nonTransferable.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAG/C,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;;;AAS9D,MAAM,qBAAqB,8OAAG,SAAA,AAAM,EAAkB,EAAE,CAAC,CAAC;AAE1D,MAAM,qBAAqB,GAAG,qBAAqB,CAAC,IAAI,CAAC;AACzD,MAAM,6BAA6B,GAAG,qBAAqB,CAAC,IAAI,CAAC;AAElE,SAAU,kBAAkB,CAAC,IAAU;IACzC,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACpF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,qBAAqB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACvD,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC;AAEK,SAAU,yBAAyB,CAAC,OAAgB;IACtD,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,sBAAsB,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;IAC9F,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,qBAAqB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACvD,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC","debugId":null}},
    {"offset": {"line": 6472, "column": 0}, "map": {"version":3,"file":"state.js","sourceRoot":"","sources":["../../../../src/extensions/pausable/state.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,6BAA6B,CAAC;;;AAI9D,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;AAW/D,MAAM,oBAAoB,8OAAG,SAAA,AAAM,EAAiB;gWAAC,YAAA,AAAS,EAAC,WAAW,CAAC;KAAE,oWAAA,AAAI,EAAC,QAAQ,CAAC;CAAC,CAAC,CAAC;AAE9F,MAAM,oBAAoB,GAAG,oBAAoB,CAAC,IAAI,CAAC;AAExD,SAAU,iBAAiB,CAAC,IAAU;IACxC,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACnF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACtD,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC;AAMM,MAAM,qBAAqB,8OAAG,SAAA,AAAM,EAAkB,EAAE,CAAC,CAAC,CAAC,sBAAsB;AAEjF,MAAM,qBAAqB,GAAG,qBAAqB,CAAC,IAAI,CAAC;AAE1D,SAAU,kBAAkB,CAAC,OAAgB;IAC/C,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,eAAe,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;IACvF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,qBAAqB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACvD,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC","debugId":null}},
    {"offset": {"line": 6517, "column": 0}, "map": {"version":3,"file":"permanentDelegate.js","sourceRoot":"","sources":["../../../src/extensions/permanentDelegate.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAC;;AAGxD,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;;;;AAQ9D,MAAM,uBAAuB,8OAAG,SAAA,AAAM,EAAoB;KAAC,uWAAA,AAAS,EAAC,UAAU,CAAC;CAAC,CAAC,CAAC;AAEnF,MAAM,uBAAuB,GAAG,uBAAuB,CAAC,IAAI,CAAC;AAE9D,SAAU,oBAAoB,CAAC,IAAU;IAC3C,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACtF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,uBAAuB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACzD,CAAC,MAAM,CAAC;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC","debugId":null}},
    {"offset": {"line": 6547, "column": 0}, "map": {"version":3,"file":"state.js","sourceRoot":"","sources":["../../../../src/extensions/scaledUiAmount/state.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,6BAA6B,CAAC;;;AAG7D,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;AAS/D,MAAM,0BAA0B,8OAAG,SAAA,AAAM,EAAuB;gWACnE,YAAA,AAAS,EAAC,WAAW,CAAC;KACtB,gPAAA,AAAG,EAAC,YAAY,CAAC;kWACjB,MAAA,AAAG,EAAC,iCAAiC,CAAC;+OACtC,MAAA,AAAG,EAAC,eAAe,CAAC;CACvB,CAAC,CAAC;AAEI,MAAM,4BAA4B,GAAG,0BAA0B,CAAC,IAAI,CAAC;AAEtE,SAAU,uBAAuB,CAAC,IAAU;IAC9C,MAAM,aAAa,0YAAG,mBAAA,AAAgB,qYAAC,gBAAa,CAAC,oBAAoB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACzF,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QACzB,OAAO,0BAA0B,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAC5D,CAAC;IACD,OAAO,IAAI,CAAC;AAChB,CAAC","debugId":null}},
    {"offset": {"line": 6580, "column": 0}, "map": {"version":3,"file":"state.js","sourceRoot":"","sources":["../../../../src/extensions/transferFee/state.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6667, "column": 0}, "map": {"version":3,"file":"seeds.js","sourceRoot":"","sources":["../../../../src/extensions/transferHook/seeds.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6776, "column": 0}, "map": {"version":3,"file":"pubkeyData.js","sourceRoot":"","sources":["../../../../src/extensions/transferHook/pubkeyData.ts"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,iBAAiB,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE/D,OAAO,EACH,oCAAoC,EACpC,kCAAkC,EAClC,mCAAmC,EACnC,gCAAgC,GACnC,MAAM,iBAAiB,CAAC;;;AAElB,KAAK,UAAU,gBAAgB,CAClC,aAAyB,EACzB,aAA4B,EAC5B,eAAuB,EACvB,UAAsB;IAEtB,MAAM,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,GAAG,aAAa,CAAC;IAC/C,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;IACvC,OAAQ,aAAa,EAAE,CAAC;QACpB,KAAK,CAAC;YACF,OAAO,mCAAmC,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;QAC3E,KAAK,CAAC;YACF,OAAO,+BAA+B,CAAC,SAAS,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;QACjF;YACI,MAAM,kXAAI,qCAAkC,EAAE,CAAC;IACvD,CAAC;AACL,CAAC;AAED,SAAS,mCAAmC,CAAC,SAAqB,EAAE,eAAuB;IACvF,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACvB,MAAM,kXAAI,qCAAkC,EAAE,CAAC;IACnD,CAAC;IACD,MAAM,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC/B,IAAI,eAAe,CAAC,MAAM,GAAG,SAAS,8TAAG,oBAAiB,EAAE,CAAC;QACzD,MAAM,kXAAI,sCAAmC,EAAE,CAAC;IACpD,CAAC;IACD,OAAO,+TAAI,YAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,EAAE,SAAS,8TAAG,oBAAiB,CAAC,CAAC,CAAC;AAC7F,CAAC;AAED,KAAK,UAAU,+BAA+B,CAC1C,SAAqB,EACrB,aAA4B,EAC5B,UAAsB;IAEtB,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACvB,MAAM,kXAAI,qCAAkC,EAAE,CAAC;IACnD,CAAC;IACD,MAAM,CAAC,YAAY,EAAE,SAAS,CAAC,GAAG,SAAS,CAAC;IAC5C,IAAI,aAAa,CAAC,MAAM,IAAI,YAAY,EAAE,CAAC;QACvC,MAAM,kXAAI,uCAAoC,EAAE,CAAC;IACrD,CAAC;IACD,MAAM,WAAW,GAAG,MAAM,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC;IACxF,IAAI,WAAW,IAAI,IAAI,EAAE,CAAC;QACtB,MAAM,kXAAI,mCAAgC,EAAE,CAAC;IACjD,CAAC;IACD,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,8TAAG,oBAAiB,EAAE,CAAC;QAC1D,MAAM,kXAAI,sCAAmC,EAAE,CAAC;IACpD,CAAC;IACD,OAAO,+TAAI,YAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,SAAS,8TAAG,oBAAiB,CAAC,CAAC,CAAC;AAC9F,CAAC","debugId":null}},
    {"offset": {"line": 6828, "column": 0}, "map": {"version":3,"file":"state.js","sourceRoot":"","sources":["../../../../src/extensions/transferHook/state.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6949, "column": 0}, "map": {"version":3,"file":"extensionType.js","sourceRoot":"","sources":["../../../src/extensions/extensionType.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7274, "column": 0}, "map": {"version":3,"file":"mint.js","sourceRoot":"","sources":["../../../src/state/mint.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7372, "column": 0}, "map": {"version":3,"file":"associatedTokenAccount.js","sourceRoot":"","sources":["../../../src/instructions/associatedTokenAccount.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7487, "column": 0}, "map": {"version":3,"file":"internal.js","sourceRoot":"","sources":["../../../src/instructions/internal.ts"],"names":[],"mappings":";;;AACA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;;AAGtC,SAAU,UAAU,CACtB,IAAmB,EACnB,gBAA2B,EAC3B,YAAoC;IAEpC,IAAI,YAAY,CAAC,MAAM,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC;YAAE,MAAM,EAAE,gBAAgB;YAAE,QAAQ,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;QAAA,CAAE,CAAC,CAAC;QAC5E,KAAK,MAAM,MAAM,IAAI,YAAY,CAAE,CAAC;YAChC,IAAI,CAAC,IAAI,CAAC;gBACN,MAAM,EAAE,MAAM,uUAAY,YAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS;gBAC/D,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;aACpB,CAAC,CAAC;QACP,CAAC;IACL,CAAC,MAAM,CAAC;QACJ,IAAI,CAAC,IAAI,CAAC;YAAE,MAAM,EAAE,gBAAgB;YAAE,QAAQ,EAAE,IAAI;YAAE,UAAU,EAAE,KAAK;QAAA,CAAE,CAAC,CAAC;IAC/E,CAAC;IACD,OAAO,IAAI,CAAC;AAChB,CAAC","debugId":null}},
    {"offset": {"line": 7521, "column": 0}, "map": {"version":3,"file":"mintTo.js","sourceRoot":"","sources":["../../../src/instructions/mintTo.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,6BAA6B,CAAC;;AAElD,OAAO,EAAE,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AACzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,EACH,gCAAgC,EAChC,gCAAgC,EAChC,mCAAmC,EACnC,gCAAgC,GACnC,MAAM,cAAc,CAAC;AACtB,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAC;;;;;;;;AASvC,MAAM,qBAAqB,8OAAG,SAAA,AAAM,EAAwB;+OAAC,KAAA,AAAE,EAAC,aAAa,CAAC;KAAE,mWAAA,AAAG,EAAC,QAAQ,CAAC;CAAC,CAAC,CAAC;AAcjG,SAAU,uBAAuB,CACnC,IAAe,EACf,WAAsB,EACtB,SAAoB,EACpB,MAAuB,EACvB,eAAuC,EAAE,EACzC,SAAS,oXAAG,mBAAgB;IAE5B,MAAM,IAAI,uYAAG,aAAA,AAAU,EACnB;QACI;YAAE,MAAM,EAAE,IAAI;YAAE,QAAQ,EAAE,KAAK;YAAE,UAAU,EAAE,IAAI;QAAA,CAAE;QACnD;YAAE,MAAM,EAAE,WAAW;YAAE,QAAQ,EAAE,KAAK;YAAE,UAAU,EAAE,IAAI;QAAA,CAAE;KAC7D,EACD,SAAS,EACT,YAAY,CACf,CAAC;IAEF,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACtD,qBAAqB,CAAC,MAAM,CACxB;QACI,WAAW,+XAAE,mBAAgB,CAAC,MAAM;QACpC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC;KACzB,EACD,IAAI,CACP,CAAC;IAEF,OAAO,IAAI,oVAAsB,CAAC;QAAE,IAAI;QAAE,SAAS;QAAE,IAAI;IAAA,CAAE,CAAC,CAAC;AACjE,CAAC;AAyBK,SAAU,uBAAuB,CACnC,WAAmC,EACnC,SAAS,oXAAG,mBAAgB;IAE5B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,MAAM,IAAI,oZAAmC,EAAE,CAAC;IAC9F,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,KAAK,qBAAqB,CAAC,IAAI,EAAE,MAAM,kXAAI,mCAAgC,EAAE,CAAC;IAEzG,MAAM,EACF,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,EACpD,IAAI,EACP,GAAG,gCAAgC,CAAC,WAAW,CAAC,CAAC;IAClD,IAAI,IAAI,CAAC,WAAW,kYAAK,mBAAgB,CAAC,MAAM,EAAE,MAAM,kXAAI,mCAAgC,EAAE,CAAC;IAC/F,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,SAAS,EAAE,MAAM,kXAAI,mCAAgC,EAAE,CAAC;IAEtF,oBAAoB;IAEpB,OAAO;QACH,SAAS;QACT,IAAI,EAAE;YACF,IAAI;YACJ,WAAW;YACX,SAAS;YACT,YAAY;SACf;QACD,IAAI;KACP,CAAC;AACN,CAAC;AAwBK,SAAU,gCAAgC,CAAC,EAC7C,SAAS,EACT,IAAI,EAAE,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,YAAY,CAAC,EACrD,IAAI,EACiB;IACrB,OAAO;QACH,SAAS;QACT,IAAI,EAAE;YACF,IAAI;YACJ,WAAW;YACX,SAAS;YACT,YAAY;SACf;QACD,IAAI,EAAE,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC;KAC3C,CAAC;AACN,CAAC","debugId":null}}]
}